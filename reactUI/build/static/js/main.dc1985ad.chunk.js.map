{"version":3,"sources":["components/Window.js","components/Table.js","Terminal.js","HUD.js","components/ListView.js","Video.js","Camera.js","Model/SignalClient.js","Stream.js","AppIconGrid.js","Desktop.js","index.js"],"names":["Window","props","state","minimized","maximized","closed","onNavBarClick","e","mode","target","className","setState","ipc","pid","renderNavTop","onClick","title","this","boxClass","children","React","Component","HtmlToReactParser","require","Parser","Table","renderHeaders","headers","key","map","header","i","renderBody","rows","row","rn","html","val","td_val","forEach","opt","cmd","desc","htmlToReactParser","parse","border","socket","node_ws_url","getUUID","uuid","localStorage","getItem","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","generateUUID","setItem","Terminal","output_rows","output_cursor_position","initSocket","Promise","resolve","reject","readyState","WebSocket","OPEN","CONNECTING","onAddOutputRow","type","data","onopen","clearTimeout","timeoutId","send","setTimeout","list","concat","parseAPIResponse","stdout","stderr","table","userInfo","quests","hint","renderOutputRow","style","color","disabled","value","keyboardLoaded","focus","windowLoaded","document","getElementsByClassName","scrollTo","offsetHeight","keyboardPressed","keyCode","locallyProcessed","renderInputBar","onLoad","onKeyDown","size","id","clickOnTerminal","getElementById","scrollToBottom","messagesEnd","scrollIntoView","behavior","onmessage","event","image","Image","src","URL","createObjectURL","startsWith","JSON","window","terminalDidMount","cmd_str","t","split","args","splice","ref","el","hudStyle","float","marginRight","HUD","fname","username","cwd","xp","points","ListView","item","description","Video","video","srcObject","media","width","height","muted","autoPlay","defaultProps","signal_connection","rtcConn","peerRTCConfig","optional","Camera","enteredRoom","signalConnected","videoOn","audioOn","flashMessage","error","myStream","room","isHost","remoteStreams","joinRoom","a","stringify","channel","initiateRTCPeerConnection","RTCPeerConnection","ontrack","streams","tracklist","onicecandidateerror","message","onicecandidate","candidate","onLoggedInWithSignalServer","usersCount","onnegotiationneeded","createOffer","then","setLocalDescription","offer","catch","alert","getTracks","track","addTrack","channelJoined","onReceivedRemoteConnectionOffer","setRemoteDescription","RTCSessionDescription","createAnswer","answer","caller_id","console","log","onReceivedConnectionRequestResponse","sdp","navigator","mediaDevices","getDisplayMedia","stream","onReceivedICECandidate","addIceCandidate","name","chatRoomChanged","audioCheckBoxChanged","videoCheckBoxChanged","gotMyStream","renderLobby","onChange","checked","renderRoom","remoteStream","onClosed","videoRef","createRef","msg","signalServerURL","location","hostname","signalClient","_channelName","_localStream","_rtcConn","onMessageHandlers","socketOnMessage","response","Object","keys","sendSocketJson","jsonObj","startStream","channelName","onerror","ok","Error","SignalClient","streamControlStyle","margin","backgroundColor","Stream","broad_casting","screenCaptureStream","streamURI","length","screenShare","querySelector","handleURIChange","err","uri","placeholder","href","renderStreamControll","broadcastStream","AppIconGrid","icons","icon","index","col","iconStyle","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","Desktop","processes","gold","push_proc","proc","bind","plist","renderHud","renderBackground","renderQuestView","ReactDOM","render"],"mappings":"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","file":"static/js/main.dc1985ad.chunk.js","sourcesContent":["import React from 'react'\nimport './Window.css';\nimport Draggable from 'react-draggable'; // The default\n\n\n\nclass Window extends React.Component{\n    state ={\n        minimized:false,\n        maximized:false,\n        closed:false\n    }\n    constructor(props){\n        super(props)\n    }\n    onNavBarClick=(e)=>{\n        const mode = e.target.className;\n        if(mode==='maximize'){\n            this.setState({maximized:!this.state.maximized});\n        }else if(mode==='minimize'){\n            this.setState({minimized:!this.state.minimized});\n        }else if(mode==='close'){\n            this.setState({closed:true});\n            this.props.ipc(\"close\", [this.props.pid]);\n        }\n    }\n    renderNavTop=()=>{\n        return (\n        <div className='title'>\n            <button className='close' onClick={this.onNavBarClick}>x</button>\n            <button className='maximize' onClick={this.onNavBarClick}>[]</button>\n            <button className='minimize' onClick={this.onNavBarClick}>_</button>\n            <p className='title'>{this.props.title}</p>\n        </div>\n        )\n    }\n\n    render(){\n        if(this.state.closed) return null;\n        var boxClass=\"\";\n        if(this.state.minimized){\n            boxClass=\"box box-minimized\"\n        }else if(this.state.maximized){\n            boxClass='box box-full';\n        }else{\n            boxClass='box';\n        }    \n        boxClass= (this.props.className ||\"\")+\" \" + boxClass;          \n        return (\n            <Draggable>\n                <div className={boxClass}>\n                    {this.renderNavTop()}\n                    <div className=\"body\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </Draggable>\n      ) \n    }\n}\n\nexport default Window;","import React from 'react';\nvar HtmlToReactParser = require('html-to-react').Parser;\n\nclass Table extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    renderHeaders=()=>{\n        if(!this.props.headers) return null;\n        return (\n            <thead>\n                <tr key={'tbtrh1'}>    \n                {this.props.headers.map((header,i)=>{\n                    return (<th key={\"th\"+i}>{header}</th>)\n                })}\n\n                </tr>\n            \n            </thead>\n        )\n    }\n    renderBody=()=>{\n        if(!this.props.rows) return null;\n        return (\n            <tbody>\n{           this.props.rows.map((row,rn)=>{\n                var html=\"\";\n                this.props.headers.map((header)=>{\n                    var val = row[header] || \"\";\n                    var td_val = \"\"\n                    if (header == \"opts\") {\n                      val.forEach((opt, i) => {\n                        td_val += `<a style='color:yellow' href='#' class='onclick_cmd' cmd='${opt.cmd}'>${opt.desc}</a>`;\n                      })\n                      html+=\"<td>\"+td_val+\"</td>\";\n                    }else if (header === 'thumbnail') {\n                        var img_url = val;\n                        html += \"<td><img width=120 src='\" + img_url + \"'></td>\";\n                    } else {\n                        html += \"<td>\" + val + \"</td>\";\n                    }\n                })\n                var htmlToReactParser = new HtmlToReactParser();\n\n                return (<tr key={\"tr \"+rn}>{htmlToReactParser.parse(html)}</tr>)\n            })\n        }\n             </tbody>\n        )        \n\n    }\n    render(){\n        return(<table className={this.props.className || \"table\"} border=\"1\">\n            {this.renderHeaders()}\n            {this.renderBody()}\n        </table>)\n    }\n}\nexport default Table;","import React from 'react'\nimport Window from './components/Window'\nimport './Terminal.css'\nimport Table from './components/Table'\n\nvar socket=null;\nconst node_ws_url = 'ws://localhost:8081';\n\nclass Terminal extends React.Component{\n    state={\n       socket,\n       output_rows:[],\n       output_cursor_position:0,\n       uuid: getUUID()\n    }\n\n    constructor(props){\n        super(props)\n    }\n    initSocket=()=>{\n        return new Promise((resolve, reject) => {\n            if (socket && socket.readyState === WebSocket.OPEN) {\n              resolve();\n              return;\n            }\n            if (socket && socket.readyState === WebSocket.CONNECTING) {\n              this.onAddOutputRow({type:\"text\",data:\"Connecting..\"});\n              resolve();\n              return;\n            } \n            socket = new WebSocket(node_ws_url);\n            socket.onopen = e => {\n              clearTimeout(timeoutId);\n              socket.send(\"check-in \" + this.state.uuid);\n              resolve();\n            }\n            var timeoutId=setTimeout(() => {\n                if(socket.readyState!==WebSocket.OPEN){\n                   // reject(new Error(\"connection timed outt\"));\n                }\n            }, 5000);\n          })\n    }\n    onAddOutputRow=(row)=>{\n        const list = this.state.output_rows.concat(row);\n        this.setState({output_rows:list});\n    }\n    parseAPIResponse=(data)=>{\n        if(data.stdout){\n            this.onAddOutputRow({type:\"text\",data:data.stdout})\n        }\n        if(data.stderr){\n            this.onAddOutputRow({type:\"text\",data:data.stderr})\n        }\n        if(data.table){\n            this.onAddOutputRow({type:\"table\",data:data.table})\n        }\n        if(data.userInfo){\n           // this.onAddOutputRow({type:\"text\",data: JSON.stringify(data)})\n            localStorage.setItem(\"uuid\", data.userInfo.uuid);\n            this.props.ipc(\"hud-update\",data.userInfo);\n        }\n        if(data.quests){\n            this.props.ipc(\"questlist\", data.quests);\n        }\n        if(data.hint){\n            //todo\n        }\n    }\n    \n   async componentDidMount(){\n        await this.initSocket();\n        socket.onmessage=(event)=>{\n            if (typeof event.data === 'object') {\n                var image = new Image();\n                image.src = URL.createObjectURL(event.data);\n                this.onAddOutputRow({type:\"image\",data:image})\n            } \n            else if (event.data && event.data.startsWith(\"stdout: \")) {\n                var stdout = event.data.replace(\"stdout: \", \"\");\n                this.onAddOutputRow({type:\"text\",data:stdout})\n            }else if (event.data && event.data.startsWith(\"stderr: \")) {\n                var stdout = event.data.replace(\"stderr: \", \"\");\n                this.onAddOutputRow({type:\"text\",data:stdout})\n            }else{\n                this.parseAPIResponse(JSON.parse(event.data));\n            }\n        }\n       window.terminalDidMount();\n    }\n\n    renderOutputRow=(row,i)=>{\n        switch(row.type){\n            case 'stdout':\n            case 'text':\n                return (<pre key={\"op-\"+i}> {row.data}</pre>)\n            case 'stderr':\n                var redStyle={color:\"red\"};\n                return (<pre key={\"op-\"+i}> <span style={redStyle}>{row.data}</span></pre>)\n            case 'stdin':              \n                return (<div className='input-line' key={\"op-\"+i}><div className='prompt'>$</div> \n                   <input className='cmdline input-line' disabled  value={row.data} /></div>);\n            case 'table':\n                 return(<div key={\"op-\"+i}><Table className=\"table table-dark\" headers={row.data.headers} rows={row.data.rows}></Table></div>)\n            break;\n        }\n    }\n    keyboardLoaded=(e)=>{\n      e.target.focus();\n    }\n    windowLoaded=(e)=>{\n       document.getElementsByClassName(\"terminal-body\").scrollTo(0,100);\n        e.target.offsetHeight=1000;\n    }\n\n    locallyProcessed(cmd_str){\n        if(!cmd_str) return false;\n\n        var t = cmd_str.split(\" \");\n        const cmd = t[0];\n        const args = t.splice(1);\n        switch(cmd){\n            case 'cam':\n            case 'upload':\n            case 'new':\n            case 'stream':\n            case 'broadcast':\n            case 'draw':\n                this.props.ipc(cmd,args);\n                return true;\n            default:\n                return false;\n        }\n\n    }\n    keyboardPressed=(e)=>{\n        if(e.keyCode==13){ //enter\n            this.onAddOutputRow({type:\"stdin\",data:e.target.value});\n            if(!this.locallyProcessed(e.target.value)){\n                socket.send(e.target.value);\n            }\n            e.target.value=\"\";\n        }\n    }\n\n    renderInputBar = () => {\n        return (<div className='input-line'>\n                    <div className='prompt'>$</div>\n                    <input onLoad={this.keyboardLoaded}\n                           onKeyDown={this.keyboardPressed}\n                           size='80' \n                           id='terminal_input' \n                           className='cmdline input-line' />\n                </div>\n                )\n    }\n\n    clickOnTerminal=(e)=>{\n          document.getElementById(\"terminal_input\").focus();;\n    }\n\n\n    render(){\n        return (<Window className=\"terminal\" title={this.props.title} pid={this.props.pid} ipc={this.props.ipc}>\n            <div className='terminal-body' onClick={this.clickOnTerminal}>\n            {this.state.output_rows.map((row,i)=>{\n                return this.renderOutputRow(row,i);\n            })}\n            {this.renderInputBar()}\n            <div className=\"terminal-anchor\" ref={(el) => { this.messagesEnd = el; }}> </div>\n            </div>\n        </Window>) \n    }\n    componentDidUpdate() {\n        this.scrollToBottom();\n      }\n      scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n}\n\nfunction generateUUID() { // Public Domain/MIT\n    var d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\n        d += performance.now(); //use high-precision timer if available\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nfunction getUUID()  {\n    var uuid = localStorage.getItem(\"uuid\") \n    if(uuid) return uuid;\n\n    uuid = generateUUID();\n    localStorage.setItem(\"uuid\",uuid);\n}\nexport default Terminal;","import React from 'react'\nconst hudStyle={\n  float:'right',\n  marginRight:\"15px\"          \n}\nclass HUD extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    \n    render(){\n        return(\n            <span style={hudStyle} className=\"HUD\">\n                Name: {this.props.fname || this.props.username || \"guest\"}, \n                Location: {this.props.cwd ||\"root\"},\n                XP Level:{this.props.xp || 0}, \n                Gold:{this.props.points||0}\n            </span>\n        )\n    }\n}\n\nexport default HUD;","import React from 'react';\nclass ListView extends React.Component{\n    render(){\n        return (\n            <div className={this.props.className}>\n                <h5>{this.props.title}</h5>\n                <ul>\n                    {this.props.list && this.props.list.map ? this.props.list.map((item, i) => {\n                        return (\n                            <li key={\"list-\" + i}>\n                                <h5 className=\"list-header\">{item.title}</h5>\n                                <div className=\"list-body\">{item.description}</div>\n                            </li>\n                        )\n                    }):null}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ListView;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nclass Video extends React.Component {\n  componentDidMount() {\n    this.video.srcObject = this.props.media;\n  }\n\n  shouldComponentUpdate(props) {\n    return this.props.media !== props.media;\n  }\n\n  componentDidUpdate() {\n    this.video.srcObject = this.props.media;\n  }\n\n  render() {\n    const { width, height, muted, children } = this.props;\n\n    return (\n      <video\n        height={height}\n        width={width}\n        muted={muted}\n        autoPlay\n        ref={(video) => { this.video = video; }}\n      >\n        {children}\n      </video>\n    );\n  }\n}\n\nVideo.defaultProps = {\n  children: null,\n  height: 420,\n  width: 640,\n  muted: true,\n  media: null,\n};\n\nVideo.propTypes = {\n  children: PropTypes.element,\n  media: PropTypes.shape(\n    {\n      active: PropTypes.bool,\n      ended: PropTypes.bool,\n      id: PropTypes.string,\n    },\n  ),\n  height: PropTypes.number,\n  width: PropTypes.number,\n  muted: PropTypes.bool,\n};\n\nexport default Video;\n","import React from 'react'\nimport Window from './components/Window'\nimport Video from \"./Video\";\n\nconst lobbyStyle={\n\n}\n\nconst signal_url=\"ws://localhost:9090\";\nvar signal_connection, rtcConn;\n\n\nconst peerRTCConfig = {\n    'RTCIceServers': [{\n          'url': 'stun:stun.l.google.com:19302'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=udp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=tcp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       }\n    ],\n    optional: [{\n       'DtlsSrtpKeyAgreement': true\n    }]\n\n }\n\n \nclass Camera extends React.Component{\n    constructor(props){\n        super(props);\n        this.videoRef = React.createRef();\n    }\n    state={\n        enteredRoom: false,\n        signalConnected:false,\n        videoOn:true,\n        audioOn: true,\n        flashMessage:\"\",\n        error:null,\n        myStream: null,\n        room: this.props.room || \"default\",\n        isHost:null,\n        remoteStreams:[]\n    }\n\n    async componentDidMount(){\n        signal_connection = new WebSocket(signal_url);\n        signal_connection.onopen=(e)=>{\n            this.setState({signalConnected:true});\n        };\n        signal_connection.onmessage=(msg)=>{\n            try{\n                var data = JSON.parse(msg.data);\n                console.log(\"signal on msg \", msg);\n                if (data.type === 'login') {\n                    this.onLoggedInWithSignalServer(data);\n                }\n                else if (data.type === 'offer') {\n                    debugger;\n                    if(data.offer.sdp){\n                        this.onReceivedRemoteConnectionOffer(data);\n\n                    }else{\n                        console.log(\"signal ret offer not contrain sdp\", data);\n                    }\n                }\n                else if (data.type === 'answer') {\n                    this.onReceivedConnectionRequestResponse(data);\n                }\n                else if(data.type==='candidate'){\n                    this.onReceivedICECandidate(data);\n                }else if(data.type==='error'){\n                    debugger;\n                    this.setState({flashMessage:data.message});\n                }\n    \n\n            }catch(e){\n                console.log(\"signal onmsg failed\", e);\n            }\n          \n        }\n       try{\n        var myStream = await navigator.mediaDevices.getDisplayMedia();\n        this.setState({myStream:myStream});\n       }catch(e){\n           this.setState({error:e.message});\n       }\n \n\n    }\n    componentWillUnmount(){\n        this.onClosed();\n    }\n\n    joinRoom=async()=>{\n        this.setState({enteredRoom:true});\n        signal_connection.send(JSON.stringify({ type: 'login', channel: this.state.room, uuid: this.props.userInfo.uuid }));\n    }\n\n    initiateRTCPeerConnection=()=>{\n        rtcConn = new RTCPeerConnection(peerRTCConfig);\n\n        rtcConn.ontrack=(e)=>{\n            if(e.streams && e.streams[0]){\n                const tracklist = this.state.remoteStreams.concat(e.streams[0]);\n                this.setState({remoteStreams:tracklist});\n            }\n        }\n        rtcConn.onicecandidateerror=(e)=>{\n            this.setState({flashMessage:e.message});\n        }\n        rtcConn.onicecandidate = (event)=>{\n            if (event.candidate!=null) {\n                signal_connection.send(JSON.stringify({\n                  type: \"candidate\",\n                  candidate: event.candidate,\n                  channel:this.state.room\n               }))\n            }\n         }\n         return  rtcConn;\n    }\n\n    onLoggedInWithSignalServer=(data)=>{\n        this.setState({signalConnected:true});\n        if(data.usersCount==1){\n            this.setState({flashMessage:\"Joined channel \"+data.channelJoined+\". Only you here.\"});\n            return;\n        }\n        this.initiateRTCPeerConnection();\n\n        rtcConn.onnegotiationneeded = (e)=>{\n            rtcConn.createOffer().then(desc=>{\n                rtcConn.setLocalDescription(desc);\n                signal_connection.send(JSON.stringify({\n                    type: 'offer',\n                    offer: desc,\n                    channel: this.state.room\n                 }));\n            }).catch(e=>{\n                debugger;\n                alert(e.message);\n            })\n           \n        }\n        this.state.myStream.getTracks(track=>{\n            rtcConn.addTrack(track,this.state.myStream);\n        })\n\n        rtcConn.createOffer().then(desc=>{\n            rtcConn.setLocalDescription(desc);\n            signal_connection.send(JSON.stringify({\n                type: 'offer',\n                offer: desc,\n                channel: this.state.room\n             }));\n        }).catch(e=>{\n            debugger;\n            alert(e.message);\n        })\n    }\n\n    onReceivedRemoteConnectionOffer=(data)=>{\n         this.initiateRTCPeerConnection();\n        rtcConn.setRemoteDescription(new RTCSessionDescription(data.offer)).then(() => {\n                this.state.myStream.getTracks().forEach(track=>{\n                    rtcConn.addTrack(track,this.state.myStream);\n                })\n            }).then(()=>{\n                return rtcConn.createAnswer();\n            }).then((answer)=>{\n                rtcConn.setLocalDescription(answer);\n                return answer;\n            }).then((answer)=>{\n                signal_connection.send(JSON.stringify({\n                    type: 'answer',\n                    answer: answer,\n                    channel: data.channel,\n                    uuid: data.caller_id\n                }));\n            }).catch(e=>{\n                console.log(e);\n                this.setState({flashMessage:e.message+\" on receive remote errored\"});\n            })\n    }\n\n    onReceivedConnectionRequestResponse=(data)=>{\n        if(data.answer.sdp){\n\n            rtcConn.setRemoteDescription(data.answer).then(function(){\n                return navigator.mediaDevices.getDisplayMedia();\n            }).then((stream)=>{\n                stream.getTracks().forEach(track=>rtcConn.addTrack(track,stream));\n            })    \n         }\n    }\n    onReceivedICECandidate=(data)=>{\n        rtcConn.addIceCandidate(data.candidate).catch(e => {\n            console.log(\"Failure during addIceCandidate(): \" + e.name);\n        });\n    }\n    chatRoomChanged=(e)=>{\n        const value = e.target.value;\n        this.setState({'room':value});\n    }\n    audioCheckBoxChanged=(e)=>{\n        this.setState({'audioOn':e.target.value});\n    }\n    videoCheckBoxChanged=(e)=>{\n        this.setState({'videoOn':e.target.value});\n    }\n\n    gotMyStream=(stream)=>{\n        this.setState({'myStream':stream});\n    }\n    renderLobby=()=>{      \n        return (\n            <div className='cam-lobby'>\n                <p>{this.state.flashMessage}</p>\n                <Video width={300} media={this.state.myStream}></Video>\n                <p>Join Room: <input   id='join_room_name' onChange={this.chatRoomChanged} value={this.state.room} type='text' size='50'></input></p>\n                <p>Audio: <input id='join_room_audio' onChange={this.audioCheckBoxChanged} type='checkbox' checked /></p>\n                <p>Video: <input id='join_room_video'  onChange={this.videoCheckBoxChanged} type='checkbox' checked /></p>\n                <p><button onClick={this.joinRoom}>Go</button> </p>\n            </div>\n        )\n    }\n    renderRoom=()=>{\n        return (<div className='cam-room'>\n            <h3>Room {this.state.room}</h3> \n                <p>{this.state.flashMessage}</p>\n                <Video key=\"mstream\" width={200} height={100}  media={this.state.myStream}></Video>\n                {this.state.remoteStreams.map((remoteStream,i)=>{\n                    console.log(remoteStream);\n                    return ( <Video key={\"remote-stream-\"+i} width={100} height={100} media={remoteStream}></Video>)\n                })}            \n        </div>)\n    }\n    render(){\n        return (<Window className=\"camera\" title={this.props.title} pid={this.props.pid} ipc={this.props.ipc}>\n            {this.state.error!==null ? <div>Error: {this.state.error}</div>: \n                (this.state.signalConnected==false || this.state.myStream ==null) ? <div>Connecting..</div> : \n                   this.state.enteredRoom==false ? this.renderLobby() : this.renderRoom()}\n        </Window>)\n    }\n    onClosed=()=>{\n        //this.state.myStream.stop();\n    }\n\n}\nexport default Camera;","const peerRTCConfig = {\n    'RTCIceServers': [{\n          'url': 'stun:stun.l.google.com:19302'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=udp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=tcp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       }\n    ],\n    optional: [{\n       'DtlsSrtpKeyAgreement': true\n    }]\n }\n\n const signalServerURL = window.location.hostname == 'localhost' ?\n \"ws://localhost:9091\" : \"wss://grepawk.com/signal\";\n\nconst SignalClient=function(){\n    var localStreamTracks=[];\n    var remoteStreams=[];\n    var socket;\n    var onMessageHandlers={}; //key-value pair so we can remove..\n\n    var socketOnMessage=(event)=>{\n        const response = JSON.parse(event.data);\n        Object.keys(onMessageHandlers).forEach((key)=>{\n            onMessageHandlers[key](response);\n        })\n    }\n\n\n    var init = function(){\n        return new Promise((resolve,reject)=>{\n            if(socket && socket.readyState===WebSocket.OPEN){\n                resolve();\n            }\n            socket = new WebSocket(signalServerURL);\n            socket.onopen=(event)=>{resolve()};\n            socket.onmessage=socketOnMessage;\n            socket.onerror=(event)=>{reject()};\n        })\n    }\n  \n    function sendSocketJson(jsonObj){\n        socket.send(JSON.stringify(jsonObj));\n    }\n    let _channelName; \n    let _localStream;\n    let _rtcConn;\n\n    return{    \n        startStream:  function(stream, channelName){\n            return new Promise(async (resolve,reject)=>{\n                await init();\n                _channelName = channelName;\n                _localStream = stream;\n                _rtcConn = new RTCPeerConnection(peerRTCConfig);\n                _rtcConn.onicecandidate=(e)=>{\n                    if(e.candidate){\n                        sendSocketJson({type:\"candidate\",candidate:e.candidate});\n                    }\n                }\n                _localStream.getTracks(track=>{_rtcConn.addTrack(track, _localStream)});\n                const offer= await _rtcConn.createOffer()\n                await _rtcConn.setLocalDescription(offer);\n                sendSocketJson({type:\"register_stream\",channel:_channelName, offer: offer});\n                onMessageHandlers[\"register_offer_\"+_channelName]=function(response){\n                    if(response.ok){\n                        delete onMessageHandlers[\"register_offer_\"+_channelName];\n                        resolve();\n                    }else{\n                        reject(new Error(response.error));\n                    }\n                }\n                setTimeout(()=>{\n                    delete onMessageHandlers[\"register_offer_\"+_channelName];\n                    reject(new Error(\"Broadcast request timed out\"));\n                },30000);\n            })\n        }\n    }\n}\n\nexport default SignalClient;","import React from 'react'\nimport Window from './components/Window';\nimport SignalClient from \"./Model/SignalClient.js\"\nimport Video from \"./Video\";\n\nconst signalClient = SignalClient();\nconst streamControlStyle={\n    margin:\"auto\",\n    backgroundColor:\"light-gray\",\n    width:\"80%\"\n}\n\nclass Stream extends React.Component{\n\n    state={\n        broad_casting:false,\n        screenCaptureStream: null,\n        streamURI: (this.props.args.length>1 && this.props.args[1]) || this.props.userInfo.username,\n        flashMessage:null        \n    }\n\n    componentDidMount(){\n        this.screenShare();\n    }\n\n    screenShare=()=>{\n        navigator.mediaDevices.getDisplayMedia().then(stream=>{\n            document.querySelector('broadcast_preview');\n            this.setState({screenCaptureStream: stream});\n        });   \n    }\n    handleURIChange=(event)=>{\n        console.log(event.target.value);\n        this.setState({streamURI:event.target.value});\n    }\n\n    startStream=()=>{\n        signalClient.startStream(this.state.screenCaptureStream, this.state.streamURI).then(()=>{\n\n            this.setState({broad_casting:true});\n        }).catch(err=>{\n            this.setState({flashMessage:err.message})\n        })\n    }\n    renderLobby=()=>{\n        const uri = this.state.streamURI;\n        return (\n            <div>\n                <p>Select broadcast URL:</p>\n                <p>https://grepawk.com/watch/<input type='text' name=\"select_url\"\n                    placeholder='select url'\n                    onChange={this.handleURIChange}\n                    value={uri} /></p>\n                <p><a onClick={this.startStream} href='#'>Start Stream</a></p>\n            </div>\n        )\n    }\n    renderStreamControll=()=>{\n        return(\n            <div>\n               Broadcasting now at {this.state.streamURI}\n            </div>\n        )\n    }\n\n    render(){\n        const broadcastStream = this.state.screenCaptureStream;\n        const uri = this.state.streamURI;\n        \n        return(\n            <Window className='stream' title={this.props.title} pid={this.props.pid} ipc={this.props.ipc}>\n                {this.state.flashMessage ? (<div>{this.state.flashMessage}</div>) : null}\n                <div className='stream-control' style={streamControlStyle}>\n                    {broadcastStream ? (<Video media={broadcastStream} /> ) : \n                    <button onClick={this.screenShare}>Screen Share</button>}\n                   {this.state.broad_casting===false ? this.renderLobby() : this.renderStreamControll()}\n                </div>\n            </Window>\n        )\n    }\n}\nexport default Stream;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport \"./AppIconGrid.css\"\n\nconst icons_per_column = 5;\n\n\nclass AppIconGrid extends React.Component{\n    render(){\n        return(\n            <div className='app-icon-grid'>\n                {this.props.icons.map((icon,index)=>{\n                    const row = (index+1) % icons_per_column;\n                    const col = Math.floor((index+1) / icons_per_column);\n                    const iconStyle ={\n                        gridColumnStart:col,\n                        gridColumnEnd: col+1,\n                        gridRowStart:row,\n                        gridRowEnd:row+1,\n                        width:50,\n                        height:50\n                       // backgroundColor:\"#D3D3D3\"\n                    }\n             \n                    return (<div key={\"icon\"+index} style={iconStyle}><i className={\"fas fa-lg fa-\"+icon.name}></i><br></br>{icon.title}</div>)\n                })}\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default AppIconGrid;","import React from 'react'\nimport './App.css'\nimport Terminal from './Terminal'\nimport HUD from \"./HUD\";\nimport ListView from \"./components/ListView\"\nimport Camera from \"./Camera\";\nimport Stream from \"./Stream\";\n\nimport AppIconGrid from './AppIconGrid';\n\nclass Desktop extends React.Component{\n    state={\n        processes:[{name:\"tty\", state:\"on\"}],\n        userInfo:{name:\"guest\",xp:0,gold:0},\n        quests:[],\n        icons:[{name:\"broadcast-tower\",title:\"terminal\"},\n                {name:\"folder\",title:\"files\"},\n                {name:\"tasks\",title:\"Weather\"},\n                {name:\"file\",title:\"file\"},\n                {name:\"file\",title:\"file2\"},\n                {name:\"file\",title:\"file3\"},\n                {name:\"file\",title:\"file4\"},\n                {name:\"folder\",title:\"folder\"}]\n    }\n    constructor(props){\n        super(props);\n        this.ipc = this.ipc.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n    push_proc=(proc)=>{\n\n    }\n    ipc(cmd, args){\n        switch(cmd){\n            case \"close\":\n                const pid = args[0];\n                const list = this.state.processes;\n                list[pid]=\"closed\";\n                this.setState({processes:list});\n            break;\n            case \"cam\":\n            case \"camera\":\n               var plist = this.state.processes.concat({\"name\":\"camera\"});\n               this.setState({processes:plist});\n            break;\n            case \"stream\":\n                var plist = this.state.processes.concat({\"name\":\"stream\",\"args\":args});\n                this.setState({processes:plist});\n                break; \n            case \"watch\":\n                var plist = this.state.processes.concat({\"name\":\"watch\",\"args\":args});\n                this.setState({processes:plist});\n                break;\n                        \n\n            case \"hud-update\":\n                this.setState({userInfo:args});\n            break;\n            case \"questlist\":\n                this.setState({quests:args});\n            break;\n        }\n    }\n\n    renderBody(){\n        return(\n            this.state.processes.map((proc,pid)=>{\n                console.log(proc,pid);\n                if(proc.state==='off') return null;\n                if(proc.name === 'tty'){\n                    return (\n                        <Terminal key='tty1' pid={pid} title='tty' ipc={this.ipc}/>\n                    );\n                }else if(proc.name==='camera'){\n                    return (\n                        <Camera userInfo={this.state.userInfo} pid={pid} title='Face 2 Face' ipc={this.ipc} />\n                    );\n                }else if(proc.name===\"stream\"){\n                    return (\n                        <Stream userInfo={this.state.userInfo} args={proc.args} pid={pid} title=\"Broadcast\" ipc={this.ipc} />\n                    )\n                }\n            })\n        )\n    }\n    renderHud(){\n        return this.state.userInfo ? \n            (<HUD username={this.state.userInfo.username}\n                cwd={this.state.userInfo.cwd}\n                fname={this.state.userInfo.fname}\n                xp={this.state.userInfo.xp} \n                gold={this.state.userInfo.gold} />)\n            : null;\n    }\n    renderQuestView(){\n        return(\n            <ListView className=\"quest-list\" title=\"quests\" list={this.state.quests} />\n        )\n    }\n    renderBackground(){\n        return(\n            <AppIconGrid icons={this.state.icons}></AppIconGrid>\n        )\n    }\n    render(){\n        return (\n            <div className='desktop'>\n                <nav className='navbar navbar-light bg-light'>\n                    <a className=\"navbar-brand\" href=\"#\">GrepAwk</a>\n                    {this.renderHud()}\n                </nav>\n                {this.renderBackground()}\n                {this.renderBody()}\n                {this.renderQuestView()}\n                \n            </div>\n        )\n    }\n}\nexport default Desktop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import * as serviceWorker from './serviceWorker';\nimport Desktop from './Desktop'\n\nReactDOM.render(<Desktop />, document.getElementById('root'));\n//serviceWorker.unregister();\n"],"sourceRoot":""}