{"version":3,"sources":["components/Window.js","components/Table.js","components/ListView.js","FileExplorer/GFileSelector.js","Terminal.js","HUD.js","Video.js","Camera.js","Broadcast/MediaObject.js","Broadcast/BroadcastClient.js","Broadcast/Broadcast.js","Broadcast/BroadcastViewerClient.js","Broadcast/Watch.js","AppIconGrid.js","FileExplorer/VFS.js","FileExplorer/Finder.js","Desktop.js","index.js"],"names":["Window","props","onNavBarClick","e","mode","target","className","setState","prev","maximized","minimized","closed","ipc","pid","renderNavTop","onMouseDown","onNavbarMouseDown","onClick","title","window","addEventListener","onNavbarMouseMove","onNavbarMouseUp","mouseX","clientX","mouseY","clientY","lastMouseX","lastMouseY","isDragging","removeEventListener","state","dragging","deltaX","deltaY","left","top","onCornerMouseDown","onCornerMouseMove","onCornerMouseUp","isResizing","width","height","renderFooter","windowInfo","style","float","this","boxClass","sizeStyle","cursor","children","React","Component","Table","require","Parser","renderHeaders","headers","key","map","header","i","renderLink","cmd","desc","ref","createRef","clickedCmd","renderBody","rows","row","renderTableRow","val","opt","img_url","src","border","ListView","list","item","description","GFileSelector","componentDidMount","renderFileSelectedList","files_selected","renderControlPanel","status","onCancel","onSave","onFileChange","alert","type","id","name","onChange","onFilesChange","socket","node_ws_url","location","hostname","getUUID","uuid","localStorage","getItem","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","generateUUID","setItem","Terminal","output_rows","output_cursor_position","initSocket","Promise","resolve","reject","readyState","WebSocket","OPEN","CONNECTING","onAddOutputRow","data","onopen","clearTimeout","timeoutId","send","setTimeout","concat","parseAPIResponse","stdout","stderr","table","userInfo","quests","hint","renderOutputRow","color","disabled","value","stdin","keyboardLoaded","focus","windowLoaded","document","getElementsByClassName","scrollTo","offsetHeight","locallyProcessed","keyboardPressed","keyCode","renderInputBar","autoFocus","onLoad","onKeyDown","size","autoComplete","clickOnTerminal","getElementById","scrollToBottom","messagesEnd","scrollIntoView","behavior","prompt","promptInput","onmessage","event","image","Image","URL","createObjectURL","startsWith","JSON","parse","cmd_str","t","split","args","splice","console","log","el","hudStyle","marginRight","HUD","fname","username","cwd","xp","points","Video","video","srcObject","media","muted","autoPlay","playsInLine","defaultProps","signal_connection","rtcConn","peerRTCConfig","optional","Camera","enteredRoom","signalConnected","videoOn","audioOn","flashMessage","error","myStream","room","isHost","remoteStreams","joinRoom","a","stringify","channel","initiateRTCPeerConnection","RTCPeerConnection","ontrack","streams","tracklist","onicecandidateerror","message","onicecandidate","candidate","onLoggedInWithSignalServer","usersCount","onnegotiationneeded","createOffer","then","setLocalDescription","offer","catch","getTracks","track","addTrack","channelJoined","onReceivedRemoteConnectionOffer","setRemoteDescription","RTCSessionDescription","forEach","createAnswer","answer","caller_id","onReceivedConnectionRequestResponse","sdp","navigator","mediaDevices","getDisplayMedia","stream","onReceivedICECandidate","addIceCandidate","chatRoomChanged","audioCheckBoxChanged","videoCheckBoxChanged","gotMyStream","renderLobby","checked","renderRoom","remoteStream","onClosed","videoRef","msg","MediaObject","renderVideo","renderAudio","streamType","mediaObject","dimensions","divStyle","position","notDraggable","signalServerURL","BroadcasterClient","config","signalConnection","host_uuid","onEvent","peerConnections","localTracks","trackDescriptor","live","updateTrackForPeers","Object","values","client","updateTracks","requestUserStream","getUserMedia","audio","Error","addStream","idx","push","removeStream","removeTrack","stop","startBroadcast","channelName","client_uuid","peerConnection","metadataChannel","createDataChannel","trackMap","sendMetaData","metadata","keys","trackId","active","payload","to_uuid","evt","tracks","set_sdp_anwser","BroadcasterRTCConnection","user_join_request","user_sent_sdp_answser","user_sent_peer_ice_candidate","json","onerror","defaultDimensions","screenshare","webcam","textBanner","Broadcast","streamElements","broadcasting","broadcastEvents","onBroadcastEvent","events","updateStreamElements","cstate","broadcastClient","renderObjectives","renderPreview","parts","part","controlClicked","control","turnOn","existingStream","renderConsole","startBroadcasting","confirm","stopBroadcasting","renderControls","isOn","text","btnClass","renderHeader","href","BroadcastClient","draggable","previewDiv","BroadcastViewerClient","clientConnection","mediaObjectReady","remoteTracks","mediaObjectOffline","remoteTrackMetaData","hostId","showRemoteTracks","length","MediaStream","kind","ondatachannel","trackMetaData","watchChannel","gotSDP","Watch","_objs","renderStream","broadcastViewerClient","AppIconGrid","iconClicked","bind","icon","icons","index","col","iconStyle","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","borderColor","borderWidth","Vfs","chrome_fs","az_fs","IMG_EXTS","localFS","g_init_local_fs","requestFileSystem","PERSISTENT","_localFS","root","g_file_get_content","path","getFile","create","exclusive","entry","file","_file","reader","FileReader","readType","onloadend","result","test","readAsDataURL","readAsText","g_file_put_contents","content","append","fileEntry","createWriter","writer","seek","blob","Blob","write","getDirEntriesSync","getDirectory","directory","createReader","readEntries","entries","g_list_local_files","nodes","edges","queue","root_node","fullPath","parent","pop","isDirectory","handleError","g_upload_file_sync","fsroot","fentry","g_upload_files","files","webkitRequestFileSystem","directoryEntry","webkitDirectoryEntry","get_files","file_put_content","filename","upload_files","file_get_content","NODE_API_HOSTNAME","fetch","resp","err","api_post_json","uri","method","cache","Finder","getFiles","dirpath","dirs","join","vfs","add_file","full_path","upload_to_vfs","uploadFiles","f","fstack","prompt_array","questions","anwsers","q","previewFile","backgroundColor","colspan","renderPreviewContent","class","answers","response","responseText","previewURL","previewText","widht","renderFileInfo","clickedFile","preview_content","clickedDir","dir","new_dirs","current_node_id","backDir","dirId","renderBreadCrumb","fs_type","renderBody2","files_displayed","_edges","_files","node_id","overflow","paddingLeft","rowStyle","marginLeft","bottom","info","xpath","Desktop","processes","gold","search","plist","url","proc","renderHud","renderBackground","renderQuestView","ReactDOM","render"],"mappings":"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","file":"static/js/main.f98a9474.chunk.js","sourcesContent":["import React from 'react'\nimport './Window.css';\nimport Draggable from 'react-draggable'; // The default\n\nfunction debug(msg){\n //   document.getElementById(\"debug\").innerHTML+=\"<br>\"+msg;\n}\n\nclass Window extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            minimized:false,\n            maximized:false,\n            closed:false,\n            isResizing:false,\n            isDragging: false,\n            top: 10 || props.top,\n            left: 500 || props.left,\n            width: 800 || props.width, \n            height: 400 || props.height,\n            lastMouseX: 0,\n            lastMouseY: 0\n        }\n    }\n    onNavBarClick=(e)=>{\n        const mode = e.target.className;\n        if(mode==='maximize'){\n            this.setState(prev=>({\n                maximized: !prev.maximized\n            }));\n        }else if(mode==='minimize'){\n            this.setState(prev=>({\n                minimized: !prev.minimized\n            }));\n        }else if(mode==='close'){\n            this.setState({closed:true});\n            this.props.ipc(\"close\", [this.props.pid]);\n        }\n    }\n    renderNavTop=()=>{\n        return (\n        <div className='title' onMouseDown={this.onNavbarMouseDown}>\n            <button className='close' onClick={this.onNavBarClick}>x</button>\n            <button className='maximize' onClick={this.onNavBarClick}>[]</button>\n            <button className='minimize' onClick={this.onNavBarClick}>_</button>\n            <p className='title'>{this.props.title}</p>\n        </div>\n        )\n    }\n\n\n    onNavbarMouseDown=(e)=>{\n        window.addEventListener(\"mousemove\",this.onNavbarMouseMove);\n        window.addEventListener(\"mouseup\", this.onNavbarMouseUp);\n        var mouseX=e.clientX;\n        var mouseY=e.clientY;\n        this.setState({\n            lastMouseX: mouseX,\n            lastMouseY: mouseY,\n            isDragging:   true\n        });\n    }\n    onNavbarMouseUp=(e)=>{\n        window.removeEventListener(\"mouseup\",this.onNavbarMouseUp);\n        window.removeEventListener(\"mousemove\",this.onNavbarMouseMove);\n\n    }\n    onNavbarMouseMove=(e)=>{\n        var mouseX=e.clientX;\n        var mouseY=e.clientY;\n        if(this.state.dragging===false) return;\n\n        const deltaX = mouseX - this.state.lastMouseX;\n        const deltaY = mouseY - this.state.lastMouseY;\n        this.setState({\n            left: this.state.left+deltaX,\n            top: this.state.top+deltaY,\n            lastMouseX: mouseX,\n            lastMouseY: mouseY,\n            maximized:  false,\n            minimized:  false,\n        })\n\n    }\n    onCornerMouseDown=(e)=>{\n        window.addEventListener(\"mousemove\",this.onCornerMouseMove);\n        window.addEventListener(\"mouseup\", this.onCornerMouseUp);\n        var mouseX=e.clientX;\n        var mouseY=e.clientY;\n        debug(\"mouse down\");\n        this.setState({\n            lastMouseX: mouseX,\n            lastMouseY: mouseY,\n            maximized:  false,\n            minimized:  false,\n            isResizing:   true\n        });\n    }\n    onCornerMouseUp=(e)=>{\n        this.setState({isResizing:false,lastMouseX:0, lastMouseY:0});\n        window.removeEventListener(\"mouseup\",this.onCornerMouseUp);\n        window.removeEventListener(\"mousemove\",this.onCornerMouseUp);\n    }\n\n    onCornerMouseMove=(e)=>{        \n        var mouseX=e.clientX;\n        var mouseY=e.clientY;\n        if(this.state.isResizing===false){\n            return;\n        }\n        debug(\"mouse move \"+mouseX+\" \"+mouseY);\n\n        const deltaX = mouseX - this.state.lastMouseX;\n        const deltaY = mouseY - this.state.lastMouseY;\n        this.setState({\n            width: this.state.width+deltaX,\n            height: this.state.height+deltaY,\n            lastMouseX: mouseX,\n            lastMouseY: mouseY\n        })\n    }\n    renderFooter=()=>{\n        return (\n            <div className=\"footer\" onMouseDown={this.onCornerMouseDown}>\n                <span>{this.props.windowInfo}</span>\n                <span className='corner' style={{float:\"right\"}}></span>\n            </div>\n        )\n    }\n\n    render(){\n        if(this.state.closed) return null;\n        var boxClass=\"box\";\n        if (this.props.className) \n            boxClass = this.props.className +\" \"+boxClass;\n\n        \n        const sizeStyle={\n            top:    this.state.maximized    ? 0      : this.state.top,\n            left:   this.state.maximized    ? 0      : this.state.left ,\n            width:  this.state.maximized    ? \"100%\" : this.state.width,\n            cursor: this.state.isResizing   ? \"se-resize\" : \"cursor\",\n            height: this.state.minimized    ? 18     : this.state.maximized ? \"100%\" : this.state.height\n        }\n\n        const corderStyle={\n            cursor: 'se-resize',\n            float:\"right\"\n        }\n\n        return (\n            <div className={boxClass} style={sizeStyle}>\n                {this.renderNavTop()}\n                <div className='body'>\n                  {this.props.children}\n\n                </div>\n                <div className=\"footer\" onMouseDown={this.onCornerMouseDown}>\n                        <span>{this.props.windowInfo}</span>\n                        <span className='corner' style={corderStyle}></span>\n                </div>\n          </div>\n       ) \n    }\n}\n\nexport default Window;","import React from 'react';\nvar HtmlToReactParser = require('html-to-react').Parser;\n\nclass Table extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    renderHeaders=()=>{\n        if(!this.props.headers) return null;\n        return (\n            <thead>\n                <tr key={'tbtrh1'}>    \n                {this.props.headers.map((header,i)=>{\n                    return (<th key={\"th\"+i}>{header}</th>)\n                })}\n                </tr>\n            \n            </thead>\n        )\n    }\n\n    renderLink=(cmd, desc)=>{\n        return (\n            <span ref={React.createRef()}\n                className='terminal-link' \n                onClick={()=>{this.props.clickedCmd(cmd)}}>\n                {desc}\n            </span>\n        )\n    }\n    renderBody=()=>{\n        if(!this.props.rows) return null;\n        return (\n            <tbody>\n            {this.props.rows.map((row)=>{\n                return this.renderTableRow(row);\n             })}\n            </tbody>\n        )\n    }\n\n    render(){\n        return(\n        <table className={this.props.className || \"table\"} border=\"1\">\n            {this.renderHeaders()}\n            {this.renderBody()}\n        </table>\n        )\n    }\n    renderTableRow=(row)=>{\n        return (\n            <tr>{\n                this.props.headers.map((header)=>{\n                    var val = row[header] || \"\";\n                    if (header == \"opts\") {\n                        var opt = val[0];\n                        return (<td>{this.renderLink(opt.cmd, opt.desc)}</td>)\n                    }else if (header === 'thumbnail') {\n                        var img_url = val;\n                        return (<td><img width={120} src={img_url} /></td>)\n                    } else {\n                        return (<td>{val}</td>)\n                    }\n                })\n            }</tr>\n        )\n    }\n}\n\nexport default Table;","import React from 'react';\nclass ListView extends React.Component{\n    render(){\n        return (\n            <div className={this.props.className}>\n                <h5>{this.props.title}</h5>\n                <ul>\n                    {this.props.list && this.props.list.map ? this.props.list.map((item, i) => {\n                        return (\n                            <li key={\"list-\" + i}>\n                                <h5 className=\"list-header\">{item.title}</h5>\n                                <div className=\"list-body\">{item.description}</div>\n                            </li>\n                        )\n                    }):null}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ListView;","import React from 'react'\nimport ListView from '../components/ListView';\n\nclass GFileSelector extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            files_selected: [],\n            status: \"new\"\n        }\n    }\n    componentDidMount=()=>{\n\n    }\n    renderFileSelectedList=()=>{\n        return (\n            <ListView headers={['name','size','type']} rows={this.state.files_selected}>\n            </ListView>\n        )\n    }\n    renderControlPanel=()=>{\n        return this.state.status==='new' ?\n        (\n            <div className='ctrl-panel'>\n                <button className='btn btn-secondary' onClick={this.onCancel}>Cancel</button>\n                <button className='btn btn-primary' onClick={this.onSave}> Save</button>\n            </div>\n        ) : (\n            <div></div>\n        )  \n    }\n    onFileChange=(e)=>{\n\n    }\n    onSave =(e)=>{\n        \n    }\n    onCancel=(e)=>{\n        alert(\"cancel\");\n    }\n\n    render(){\n        return(\n            <div className='anchor'>\n                <input type=\"file\" \n                    className=\"form-control\" \n                    id=\"file-select-input\" \n                    name=\"file\"\n                    onChange={this.props.onFilesChange || this.onFileChange} />\n            {this.renderFileSelectedList()}\n            {this.renderControlPanel()}\n        </div>\n        )\n    }\n}\nexport default GFileSelector;","import React from 'react'\nimport Window from './components/Window'\nimport './Terminal.css'\nimport Table from './components/Table'\nimport GFileSelector from './FileExplorer/GFileSelector'\nvar socket=null;\nconst node_ws_url = window.location.hostname == 'localhost' ?\n\"ws://localhost:8081\" : \"wss://grepawk.com/ws\";\n\nclass Terminal extends React.Component{\n    state={\n       socket,\n       output_rows:[],\n       output_cursor_position:0,\n       uuid: getUUID()\n    }\n\n    constructor(props){\n        super(props)\n        this.prompt=React.createRef();\n        this.promptInput = React.createRef();\n    }\n    initSocket=()=>{\n        return new Promise((resolve, reject) => {\n            if (socket && socket.readyState === WebSocket.OPEN) {\n              resolve();\n              return;\n            }\n            if (socket && socket.readyState === WebSocket.CONNECTING) {\n              this.onAddOutputRow({type:\"text\",data:\"Connecting..\"});\n              resolve();\n              return;\n            } \n            socket = new WebSocket(node_ws_url);\n            socket.onopen = e => {\n              clearTimeout(timeoutId);\n              socket.send(\"check-in \" + this.state.uuid);\n              resolve();\n            }\n            var timeoutId=setTimeout(() => {\n                if(socket.readyState!==WebSocket.OPEN){\n                   // reject(new Error(\"connection timed outt\"));\n                }\n            }, 5000);\n          })\n    }\n    onAddOutputRow=(row)=>{\n        const list = this.state.output_rows.concat(row);\n        this.setState({output_rows:list});\n    }\n    parseAPIResponse=(data)=>{\n        if(data.stdout){\n            this.onAddOutputRow({type:\"text\",data:data.stdout})\n        }\n        if(data.stderr){\n            this.onAddOutputRow({type:\"text\",data:data.stderr})\n        }\n        if(data.table){\n            this.onAddOutputRow({type:\"table\",data:data.table})\n        }\n        if(data.userInfo){\n           // this.onAddOutputRow({type:\"text\",data: JSON.stringify(data)})\n            localStorage.setItem(\"uuid\", data.userInfo.uuid);\n            this.props.ipc(\"hud-update\",data.userInfo);\n        }\n        if(data.quests){\n            this.props.ipc(\"questlist\", data.quests);\n        }\n        if(data.hint){\n            //todo\n        }\n    }\n    \n   async componentDidMount(){\n        await this.initSocket();\n        socket.onmessage=(event)=>{\n            if (typeof event.data === 'object') {\n                var image = new Image();\n                image.src = URL.createObjectURL(event.data);\n                this.onAddOutputRow({type:\"image\",data:image})\n            } \n            else if (event.data && event.data.startsWith(\"stdout: \")) {\n                var stdout = event.data.replace(\"stdout: \", \"\");\n                this.onAddOutputRow({type:\"text\",data:stdout})\n            }else if (event.data && event.data.startsWith(\"stderr: \")) {\n                var stdout = event.data.replace(\"stderr: \", \"\");\n                this.onAddOutputRow({type:\"text\",data:stdout})\n            }else{\n                this.parseAPIResponse(JSON.parse(event.data));\n            }\n        }\n    //  window.terminalDidMount();\n    }\n\n    renderOutputRow=(row,i)=>{\n\n        switch(row.type){\n            case 'stdout':\n            case 'text':\n                return (<pre key={\"op-\"+i}> {row.data}</pre>)\n            case 'stderr':\n                var redStyle={color:\"red\"};\n                return (<pre key={\"op-\"+i}> <span style={redStyle}>{row.data}</span></pre>)\n            case 'stdin':              \n                return (<div className='input-line' key={\"op-\"+i}>\n                            <div className='prompt'>></div> \n                            <input className='cmdline input-line' disabled  value={row.data} />\n                        </div>);\n            case 'table':\n                 return(<div key={\"op-\"+i}><Table clickedCmd={this.stdin} \n                    className=\"table table-dark\" headers={row.data.headers} rows={row.data.rows}></Table></div>)\n            case 'imageLink':\n                return (\n                    <div key={\"op-\"+i}><img src={row.data}></img></div> \n                )\n            case 'filelink':\n                    return (\n                        <div key={\"op-\"+i}><iframe src={row.data}></iframe></div> \n                    )\n            case 'upload':\n                return (<GFileSelector></GFileSelector>);\n               break;\n            default: break;\n\n            \n        }\n    }\n    keyboardLoaded=(e)=>{\n      e.target.focus();\n    }\n    windowLoaded=(e)=>{\n       document.getElementsByClassName(\"terminal-body\").scrollTo(0,100);\n        e.target.offsetHeight=1000;\n    }\n\n    locallyProcessed(cmd_str){\n        if(!cmd_str) return false;\n\n        var t = cmd_str.split(\" \");\n        const cmd = t[0];\n        const args = t.splice(1);\n        console.log(cmd,args);\n        switch(cmd){\n            case 'upload':\n                this.onAddOutputRow({type:\"upload\",data:args[0]});\n                break;  \n            case 'openimage':\n                this.onAddOutputRow({type:\"imageLink\",data:args[0]});\n                return true;\n            case 'edit':\n                 this.props.ipc(cmd,args);\n                 return true;\n            case 'cam':\n            case 'new':\n            case 'stream':\n            case 'broadcast':\n            case 'draw':\n            case 'watch':\n                this.props.ipc(cmd,args);\n                return true;\n            default:\n                return false;\n        }\n\n    }\n    stdin=(cmd)=>{\n        this.onAddOutputRow({type:\"stdin\",cmd});\n        if(!this.locallyProcessed(cmd)){\n            socket.send(cmd);\n        }\n    }\n    \n    keyboardPressed=(e)=>{\n        if(e.keyCode==13){ //enter\n                this.stdin(e.target.value);\n            e.target.value=\"\";\n        }\n    }\n\n    renderInputBar = () => {\n        const stdinPromptString = \">\";\n        return (<div className='input-line'>\n                    <div id='stdin-prompt' className='prompt'> > </div>\n                    <input autoFocus={true}  \n                         onLoad={this.keyboardLoaded}\n                           onKeyDown={this.keyboardPressed}\n                           size='80' \n                           id=\"terminal_input\"\n                           autoComplete=\"off\"\n                           className='cmdline input-line' />\n                </div>\n        )\n    }\n\n    clickOnTerminal=(e)=>{\n          document.getElementById(\"terminal_input\").focus();;\n    }\n\n\n    render(){\n        return (<Window className=\"terminal\" title={this.props.title} pid={this.props.pid} ipc={this.props.ipc}>\n            <div className='terminal-body' onClick={this.clickOnTerminal} >\n            {this.state.output_rows.map((row,i)=>{\n                return this.renderOutputRow(row,i);\n            })}\n            {this.renderInputBar()}\n            <div className=\"terminal-anchor\" ref={(el) => { this.messagesEnd = el; }}> </div>\n            </div>\n        </Window>) \n    }\n    componentDidUpdate() {\n        this.scrollToBottom();\n      }\n      scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n}\n\nfunction generateUUID() { // Public Domain/MIT\n    var d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\n        d += performance.now(); //use high-precision timer if available\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nfunction getUUID()  {\n    var uuid = localStorage.getItem(\"uuid\") \n    if(uuid) return uuid;\n\n    uuid = generateUUID();\n    localStorage.setItem(\"uuid\",uuid);\n}\nexport default Terminal;","import React from 'react'\nconst hudStyle={\n  float:'right',\n  marginRight:\"15px\",\n  height:\"20px\",          \n}\nclass HUD extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    \n    render(){\n        return(\n            <span style={hudStyle} className=\"HUD\">\n                Name: {this.props.fname || this.props.username || \"guest\"}, \n                Location: {this.props.cwd ||\"root\"},\n                XP Level:{this.props.xp || 0}, \n                Gold:{this.props.points||0}\n            </span>\n        )\n    }\n}\n\nexport default HUD;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nclass Video extends React.Component {\n  componentDidMount() {\n    this.video.srcObject = this.props.media;\n  }\n\n  shouldComponentUpdate(props) {\n    return this.props.media !== props.media;\n  }\n\n  componentDidUpdate() {\n    this.video.srcObject = this.props.media;\n  }\n\n  render() {\n    const { width, height, muted, children } = this.props;\n\n    return (\n      <video\n        height={height}\n        width={width}\n        muted={muted}\n        autoPlay\n        playsInLine\n        ref={(video) => { this.video = video; }}\n      >\n        {children}\n      </video>\n    );\n  }\n}\n\nVideo.defaultProps = {\n  children: null,\n  height: 420,\n  width: 640,\n  muted: true,\n  media: null,\n};\n\nVideo.propTypes = {\n  children: PropTypes.element,\n  media: PropTypes.shape(\n    {\n      active: PropTypes.bool,\n      ended: PropTypes.bool,\n      id: PropTypes.string,\n    },\n  ),\n  muted: PropTypes.bool,\n};\n\nexport default Video;\n","import React from 'react'\nimport Window from './components/Window'\nimport Video from \"./Video\";\n\nconst lobbyStyle={\n\n}\n\nconst signal_url=\"ws://localhost:9090\";\nvar signal_connection, rtcConn;\n\n\nconst peerRTCConfig = {\n    'RTCIceServers': [{\n          'url': 'stun:stun.l.google.com:19302'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=udp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=tcp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       }\n    ],\n    optional: [{\n       'DtlsSrtpKeyAgreement': true\n    }]\n\n }\n\n \nclass Camera extends React.Component{\n    constructor(props){\n        super(props);\n        this.videoRef = React.createRef();\n    }\n    state={\n        enteredRoom: false,\n        signalConnected:false,\n        videoOn:true,\n        audioOn: true,\n        flashMessage:\"\",\n        error:null,\n        myStream: null,\n        room: this.props.room || \"default\",\n        isHost:null,\n        remoteStreams:[]\n    }\n\n    async componentDidMount(){\n        signal_connection = new WebSocket(signal_url);\n        signal_connection.onopen=(e)=>{\n            this.setState({signalConnected:true});\n        };\n        signal_connection.onmessage=(msg)=>{\n            try{\n                var data = JSON.parse(msg.data);\n                console.log(\"signal on msg \", msg);\n                if (data.type === 'login') {\n                    this.onLoggedInWithSignalServer(data);\n                }\n                else if (data.type === 'offer') {\n                    debugger;\n                    if(data.offer.sdp){\n                        this.onReceivedRemoteConnectionOffer(data);\n\n                    }else{\n                        console.log(\"signal ret offer not contrain sdp\", data);\n                    }\n                }\n                else if (data.type === 'answer') {\n                    this.onReceivedConnectionRequestResponse(data);\n                }\n                else if(data.type==='candidate'){\n                    this.onReceivedICECandidate(data);\n                }else if(data.type==='error'){\n                    debugger;\n                    this.setState({flashMessage:data.message});\n                }\n    \n\n            }catch(e){\n                console.log(\"signal onmsg failed\", e);\n            }\n          \n        }\n       try{\n        var myStream = await navigator.mediaDevices.getDisplayMedia();\n        this.setState({myStream:myStream});\n       }catch(e){\n           this.setState({error:e.message});\n       }\n \n\n    }\n    componentWillUnmount(){\n        this.onClosed();\n    }\n\n    joinRoom=async()=>{\n        this.setState({enteredRoom:true});\n        signal_connection.send(JSON.stringify({ type: 'login', channel: this.state.room, uuid: this.props.userInfo.uuid }));\n    }\n\n    initiateRTCPeerConnection=()=>{\n        rtcConn = new RTCPeerConnection(peerRTCConfig);\n\n        rtcConn.ontrack=(e)=>{\n            if(e.streams && e.streams[0]){\n                const tracklist = this.state.remoteStreams.concat(e.streams[0]);\n                this.setState({remoteStreams:tracklist});\n            }\n        }\n        rtcConn.onicecandidateerror=(e)=>{\n            this.setState({flashMessage:e.message});\n        }\n        rtcConn.onicecandidate = (event)=>{\n            if (event.candidate!=null) {\n                signal_connection.send(JSON.stringify({\n                  type: \"candidate\",\n                  candidate: event.candidate,\n                  channel:this.state.room\n               }))\n            }\n         }\n         return  rtcConn;\n    }\n\n    onLoggedInWithSignalServer=(data)=>{\n        this.setState({signalConnected:true});\n        if(data.usersCount==1){\n            this.setState({flashMessage:\"Joined channel \"+data.channelJoined+\". Only you here.\"});\n            return;\n        }\n        this.initiateRTCPeerConnection();\n\n        rtcConn.onnegotiationneeded = (e)=>{\n            rtcConn.createOffer().then(desc=>{\n                rtcConn.setLocalDescription(desc);\n                signal_connection.send(JSON.stringify({\n                    type: 'offer',\n                    offer: desc,\n                    channel: this.state.room\n                 }));\n            }).catch(e=>{\n                debugger;\n                alert(e.message);\n            })\n           \n        }\n        this.state.myStream.getTracks(track=>{\n            rtcConn.addTrack(track,this.state.myStream);\n        })\n\n        rtcConn.createOffer().then(desc=>{\n            rtcConn.setLocalDescription(desc);\n            signal_connection.send(JSON.stringify({\n                type: 'offer',\n                offer: desc,\n                channel: this.state.room\n             }));\n        }).catch(e=>{\n            alert(e.message);\n        })\n    }\n\n    onReceivedRemoteConnectionOffer=(data)=>{\n         this.initiateRTCPeerConnection();\n        rtcConn.setRemoteDescription(new RTCSessionDescription(data.offer)).then(() => {\n                this.state.myStream.getTracks().forEach(track=>{\n                    rtcConn.addTrack(track,this.state.myStream);\n                })\n            }).then(()=>{\n                return rtcConn.createAnswer();\n            }).then((answer)=>{\n                rtcConn.setLocalDescription(answer);\n                return answer;\n            }).then((answer)=>{\n                signal_connection.send(JSON.stringify({\n                    type: 'answer',\n                    answer: answer,\n                    channel: data.channel,\n                    uuid: data.caller_id\n                }));\n            }).catch(e=>{\n                console.log(e);\n                this.setState({flashMessage:e.message+\" on receive remote errored\"});\n            })\n    }\n\n    onReceivedConnectionRequestResponse=(data)=>{\n        if(data.answer.sdp){\n\n            rtcConn.setRemoteDescription(data.answer).then(function(){\n                return navigator.mediaDevices.getDisplayMedia();\n            }).then((stream)=>{\n                stream.getTracks().forEach(track=>rtcConn.addTrack(track,stream));\n            })    \n         }\n    }\n    onReceivedICECandidate=(data)=>{\n        rtcConn.addIceCandidate(data.candidate).catch(e => {\n            console.log(\"Failure during addIceCandidate(): \" + e.name);\n        });\n    }\n    chatRoomChanged=(e)=>{\n        const value = e.target.value;\n        this.setState({'room':value});\n    }\n    audioCheckBoxChanged=(e)=>{\n        this.setState({'audioOn':e.target.value});\n    }\n    videoCheckBoxChanged=(e)=>{\n        this.setState({'videoOn':e.target.value});\n    }\n\n    gotMyStream=(stream)=>{\n        this.setState({'myStream':stream});\n    }\n    renderLobby=()=>{      \n        return (\n            <div className='cam-lobby'>\n                <p>{this.state.flashMessage}</p>\n                <Video width={300} media={this.state.myStream}></Video>\n                <p>Join Room: <input   id='join_room_name' onChange={this.chatRoomChanged} value={this.state.room} type='text' size='50'></input></p>\n                <p>Audio: <input id='join_room_audio' onChange={this.audioCheckBoxChanged} type='checkbox' checked /></p>\n                <p>Video: <input id='join_room_video'  onChange={this.videoCheckBoxChanged} type='checkbox' checked /></p>\n                <p><button onClick={this.joinRoom}>Go</button> </p>\n            </div>\n        )\n    }\n    renderRoom=()=>{\n        return (<div className='cam-room'>\n            <h3>Room {this.state.room}</h3> \n                <p>{this.state.flashMessage}</p>\n                <Video key=\"mstream\" width={200} height={100}  media={this.state.myStream}></Video>\n                {this.state.remoteStreams.map((remoteStream,i)=>{\n                    console.log(remoteStream);\n                    return ( <Video key={\"remote-stream-\"+i} width={100} height={100} media={remoteStream}></Video>)\n                })}            \n        </div>)\n    }\n    render(){\n        return (<Window className=\"camera\" title={this.props.title} pid={this.props.pid} ipc={this.props.ipc}>\n            {this.state.error!==null ? <div>Error: {this.state.error}</div>: \n                (this.state.signalConnected==false || this.state.myStream ==null) ? <div>Connecting..</div> : \n                   this.state.enteredRoom==false ? this.renderLobby() : this.renderRoom()}\n        </Window>)\n    }\n    onClosed=()=>{\n        //this.state.myStream.stop();\n    }\n\n}\nexport default Camera;","import React from 'react';\nimport Video from '../Video'\nimport Draggable from 'react-draggable'; // The default\n\nclass MediaObject extends React.Component{\n\n    renderVideo=(stream,width,height)=>{\n        \n        return (<Video width={\"100%\"} height={\"100%\"} media={stream}></Video>)\n    }\n \n    renderAudio=()=>{\n        return (<div>todo</div>)\n    }\n    render(){\n        const streamType = this.props.mediaObject[0];\n        const stream =  this.props.mediaObject[1];\n        const dimensions = this.props.mediaObject[2];\n        const divStyle={\n            position:\"absolute\",\n            left:   dimensions[0]+\"%\",\n            top:    dimensions[1]+\"%\",\n            width:  dimensions[2]+\"%\",\n            height: dimensions[3]+\"%\"\n        }\n        if(this.props.notDraggable){\n            return(\n                <div style={divStyle}>\n                    {streamType==\"video\"       ?   this.renderVideo(stream) : null}\n                    {streamType==\"screenshare\" ? this.renderVideo(stream) : null}\n                    {streamType==\"webcam\"      ? this.renderVideo(stream) : null}\n                    {streamType==\"audio\"       ? this.renderAudio(stream) : null}\n                </div>\n            )\n        }\n        return(\n            <Draggable>          \n                 <div style={divStyle}>\n                    {streamType==\"video\" ? this.renderVideo(stream) : null}\n                    {streamType==\"screenshare\" ? this.renderVideo(stream) : null}\n                    {streamType==\"webcam\"      ? this.renderVideo(stream) : null}\n                    {streamType==\"audio\"       ? this.renderAudio(stream) : null}\n                </div>\n            </Draggable>\n\n        )\n    }\n}\n\nexport default MediaObject;","const peerRTCConfig = {\n    'RTCIceServers': [{\n        'url': 'stun:stun.l.google.com:19302'\n    }]\n}\n\n\nconst signalServerURL = window.location.hostname == 'localhost' ? \"ws://localhost:9091\" : \"wss://grepawk.com/signal\";\n\nfunction BroadcasterClient(config) {\n    config = config || {};\n    config.console = config.console || \"console\";\n    const hostname = config.hostname || signalServerURL;\n    let onEvent = config.onEvent || console.log;\n    let signalConnection;\n    let peerConnections = {};\n    let localTracks=[];\n    var host_uuid;\n\n    function trackDescriptor(id, track,dimensions){\n        return{\n            id:id, track:track, dimensions:dimensions, live:true\n        }\n    }\n    function addTrack(track, dimensions){\n        for(var idx in localTracks){\n            if(localTracks[idx].id===track.id){\n                localTracks[idx]=trackDescriptor(track.id, track, dimensions);\n            }\n        }\n        localTracks.push(trackDescriptor(track.id, track, dimensions));\n    }\n    function removeTrack(track){\n        for(var idx in localTracks){\n            if(localTracks[idx].id===track.id){\n                localTracks[idx].live=false;\n            }\n        }\n    }\n    function sendJson(json, to_uuid) {\n        if (to_uuid) json[to_uuid] = to_uuid;\n        signalConnection.send(JSON.stringify(json));\n    }\n\n    function startBroadcast(channelName) {\n        signalConnection = new WebSocket(hostname);\n        signalConnection.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            onEvent(event.data.type ||\"\");\n            switch (data.type) {\n                case 'registered':\n                    host_uuid = data.host_uuid;\n                break;\n                case 'user_joined':\n                    user_join_request(data);\n                    break;\n                case 'answer':\n                    user_sent_sdp_answser(data);\n                    break;\n                case 'candidate':\n                    user_sent_peer_ice_candidate(data);\n                    break;\n                case 'user_left':\n                    break;\n                default:\n                    break;\n            }\n        }\n        signalConnection.onopen = (e) => {\n            sendJson({\n                type: \"register_stream\",\n                channel: channelName\n            });\n            onEvent(\"Stream registered \"+channelName);\n        }\n        signalConnection.onerror = (e) => onEvent(\"ERROR: signalconnection not connecting\", e);\n    }\n\n    function user_sent_peer_ice_candidate(data) {\n        if (!data.client_uuid || !data.candidate) throw new Error(\"unexpected request in user_sent_peer_ice_candidate\");\n        peerConnections[data.client_uuid].addIceCandidate(data.candidate);\n        onEvent(\"add peer ice candidate from \" + data.client_uuid);\n    }\n\n    function user_sent_sdp_answser(data) {\n        if (!data.client_uuid || !data.answer) throw new Error(\"unexpected request in user_sent_peer_ice_candidate\");\n        peerConnections[data.client_uuid].set_sdp_anwser(data.answer);\n    }\n\n    function user_join_request(data) {\n        if (!data.client_uuid) throw new Error(\"unexpected user_join request\");\n        peerConnections[data.client_uuid] = BroadcasterRTCConnection(signalConnection, data.client_uuid,host_uuid,onEvent);\n        peerConnections[data.client_uuid].updateTracks(localTracks);\n        \n    }\n    function updateTrackForPeers(){\n        Object.values(peerConnections).forEach(client=>{\n            client.updateTracks(localTracks);\n        })\n    }\n\n    function addStream(stream,dimensions){\n        stream.getTracks().forEach(track=>{\n            addTrack(track, dimensions);\n        })       \n        updateTrackForPeers();\n    }\n\n    function removeStream(stream){\n        stream.getTracks().forEach((track)=>{\n            removeTrack(track);\n            track.stop();\n        })\n        updateTrackForPeers();\n        return null;\n    }\n\n    function requestUserStream(type){\n        return new Promise(async (resolve,reject)=>{\n            try {\n                let stream;\n                if(type==\"screenshare\"){\n                    stream =  await navigator.mediaDevices.getDisplayMedia();\n                }else if(type==\"webcam\"){\n                    stream = await navigator.mediaDevices.getUserMedia({video:true, audio:false});\n                }else if(type==\"audio\"){\n                    stream = await navigator.mediaDevices.getUserMedia({video:false, audio:true});\n                }else{\n                    reject(new Error(\"Unkown type\"))\n                }\n                if(stream) resolve(stream);\n                else resolve(null);\n            } catch (e) {\n               reject(e);\n            }\n        })\n    }\n\n    return {\n        requestUserStream: requestUserStream,\n        addStream: addStream,\n        removeStream:removeStream,\n        peerConnections: peerConnections,\n        startBroadcast: startBroadcast\n    }\n}\nfunction BroadcasterRTCConnection(signalConnection, client_uuid,host_uuid,onEvent) {\n    var signalConnection = signalConnection;\n    var client_uuid = client_uuid;\n    var host_uuid;\n    var peerConnection = new RTCPeerConnection(peerRTCConfig);\n    var metadataChannel = peerConnection.createDataChannel(\"metadata\");\n\n    var trackMap={};\n\n    metadataChannel.onopen = function(){\n        onEvent(\"Meta channel open with \"+client_uuid);\n        sendMetaData();\n    }\n    peerConnection.onicecandidate = (e) => {\n        if (e.candidate) {\n            signalConnection.send(JSON.stringify({\n                type: \"candidate\",\n                candidate: e.candidate,\n                to_uuid: client_uuid,\n                host_uuid: host_uuid\n            }));\n        }\n    }\n    peerConnection.onnegotiationneeded = async (evt) => {\n        onEvent(\"creating sdp offer for \" + client_uuid);\n        const offer = await peerConnection.createOffer();\n        await peerConnection.setLocalDescription(offer);\n        signalConnection.send(JSON.stringify({\n            type: \"offer\",\n            to_uuid: client_uuid,\n            offer: offer,\n            host_uuid:host_uuid\n       }))\n    }\n    function sendMetaData(){\n        if(!metadataChannel || metadataChannel.readyState!=='open'){\n            onEvent(\"metadata channel not yet o0pen\");\n            setTimeout(sendMetaData, 1000);\n            return;\n        }\n        \n        let metadata=[];\n        let trackIds = Object.keys(trackMap);\n        trackIds.forEach(trackId=>{\n            let track = trackMap[trackId];\n            metadata.push({\n                trackId: track.id,\n                dimensions: track.dimensions,\n                live: track.active\n            })\n        })          \n        let payload = {\n            type:\"mediaMetadata\",\n            data: metadata\n        }\n        onEvent(\"sending metadata \", payload);\n        metadataChannel.send(JSON.stringify(payload));\n    }\n\n    return {\n        updateTracks: function(tracks){\n            for(var idx in tracks){\n               let trackId = tracks[idx].id;\n               if(typeof trackMap[trackId]!=='undefined'){\n                   continue;\n               }\n               trackMap[trackId] = tracks[idx];\n               if(tracks[idx].live) peerConnection.addTrack(tracks[idx].track);\n            }     \n            sendMetaData();\n        },\n\n        set_sdp_anwser: async function(answer) {\n            try {\n                await peerConnection.setRemoteDescription(answer);\n                onEvent(\"Remote Anwser set\"); \n            } catch (e) {\n                onEvent(\"ERROR: in set_dsp_anwser\");\n            }\n        },\n        addIceCandidate:function(candidate){\n            onEvent(\"add ice candidate \");\n            peerConnection.addIceCandidate(candidate);\n        }\n    }\n}\n\n// \nexport default BroadcasterClient;","import React from \"react\";\nimport Window from \"../components/Window\";\nimport MediaObject from \"./MediaObject\";\nimport './broadcast.css';\nimport BroadcastClient from \"./BroadcastClient\";\n\n\nconst streamHost = \"https://grepawk.com/watch/\";\nconst defaultDimensions ={\n    screenshare: [0,0,100,100],\n    webcam: [0, 80, 20,20],\n    audio: [90,0,10,10],\n    textBanner:[5,5,80, 10]\n}\n\nclass Broadcast extends React.Component {\n  state = {\n    screenshare: false,\n    webcam: false,\n    audio: false,\n    streamElements:{},\n    broadcasting: false,\n    broadcastEvents:[],\n  };\n\n  constructor(props){\n      super(props);\n      this.broadcastClient = BroadcastClient({\n          onEvent: this.onBroadcastEvent,\n          console: \"console\"\n      })\n      this.channelName = this.props.args[0];\n  }\n  onBroadcastEvent = (event)=>{\n      let events = this.state.broadcastEvents;\n      events.push(event);\n      this.setState({broadcastEvents:events});\n  }\n\n  updateStreamElements=(type, mediaObject, dimensions)=>{\n    let cstate = this.state.streamElements;\n    cstate[type]=[type, mediaObject, dimensions];\n    if(mediaObject!==null && this.state.broadcasting===true){\n        this.broadcastClient.addStream(mediaObject, dimensions);\n        this.onBroadcastEvent(\"Adding stream \"+type);\n    }\n    this.setState({streamElements:cstate});\n  }\n  componentDidMount() {\n\n  }\n  renderObjectives = () =>{\n\n  }\n  renderPreview = () =>{\n      const parts = Object.keys(this.state.streamElements);\n      return (\n            <div>\n            {parts.map(part=>{return (\n                <MediaObject mediaObject={this.state.streamElements[part]}></MediaObject>)})}   \n            </div>         \n      )\n  }\n\n  controlClicked=async (control)=>{\n      let turnOn = !this.state[control];\n\n      let existingStream = (this.state.streamElements[control] && this.state.streamElements[control][1]) || null; \n      let stream;\n      switch(control){\n          case \"screenshare\":\n                stream = turnOn ? await this.broadcastClient.requestUserStream(control) \n                                    : await this.broadcastClient.removeStream(existingStream);\n                this.updateStreamElements(control, stream, defaultDimensions[control]);\n                this.setState({screenshare: turnOn});\n                break;\n          case \"webcam\":\n                stream = turnOn ? await this.broadcastClient.requestUserStream(control) \n                                    : await this.broadcastClient.removeStream(existingStream);\n                                    \n                this.updateStreamElements(control, stream, defaultDimensions[control]);\n                this.setState({webcam:turnOn});\n                break;\n           case \"audio\":\n                stream = turnOn ? await this.broadcastClient.requestUserStream(control) \n                                    : await this.broadcastClient.removeStream(existingStream);\n\n                this.updateStreamElements(control, stream, defaultDimensions[control]);\n                this.setState({audio:turnOn});\n                break;\n            default: break;\n      }\n  }\n  renderConsole = () =>{\n      return (\n          <div>\n              {this.state.broadcastEvents.map(event=>{\n                  let msg;\n                  if(typeof event===\"object\"){\n                      msg=JSON.stringify(event);\n                  }else{\n                     msg = event;\n                  }\n                  return (<p>{msg}</p>)\n              })}\n          </div>\n      )\n\n  }\n\n  startBroadcasting = async ()=>{\n      var channelName = this.channelName\n      if(!this.channelName){\n        this.channelName=prompt(\"What channel name do you want?\");\n      }\n      if(!this.channelName){\n          return;\n      }\n      var r = window.confirm(\"Start broadcasting at https://grepawk.com/c/\"+channelName+\" now?\");\n\n    if(r){\n        this.broadcastClient.startBroadcast(channelName);\n        Object.values(this.state.streamElements).forEach((streamElements)=>{\n            if(streamElements[1]!==null){\n                this.broadcastClient.addStream(streamElements[1],streamElements[2]);\n            }\n        })\n        this.setState({broadcasting:true});\n     }\n\n  }\n  stopBroadcasting = ()=>{\n    this.setState({broadcasting:false});\n  }\n\n  renderControls = () => {\n    return (\n        <ul className=\"list-group controls\">\n            {\n                [\"screenshare\",\"webcam\",\"audio\"].map(control=>{\n                    var isOn = this.state[control];\n                    var text = isOn ? control+\" off\" : control;\n                    var btnClass = isOn ? \"btn btn-secondary\" : \"btn btn-primary\";\n                    return(\n                        <li className=\"list-group-item\">\n                            <button className={btnClass} onClick={()=>{this.controlClicked(control)}}>{text}</button>\n                        </li>\n                    )\n                })\n            }\n                            \n        </ul>\n    );\n  };\n\n  renderHeader=()=>{\n      return(\n        <div className='header'>\n                {this.state.broadcasting === false\n                ? <a href='javascript://' onClick={this.startBroadcasting}>Start Broadcast  </a>\n                : <a href='javascript://' onClick={this.stopBroadcasting} >Stop Broadcast</a>}\n           \n        </div>\n      )\n  }\n  render() {\n    return (\n      <Window\n        className=\"stream\"\n        title={this.props.title}\n        pid={this.props.pid}\n        ipc={this.props.ipc}\n        draggable={false}\n      >\n        {this.state.flashMessage ? <div>{this.state.flashMessage}</div> : null}\n        <div className=\"obs\">\n            {this.renderHeader()}\n                \n            {this.renderControls()}\n            <div className='preview' ref={this.previewDiv}>\n                {this.renderPreview()}\n            </div>\n            <div className=\"console\">{this.renderConsole()}</div>\n\n          <div className=\"objectives\">{this.renderObjectives()}</div>\n        </div>\n      </Window>\n    );\n  }\n}\nexport default Broadcast;\n","const signalServerURL = window.location.hostname == 'localhost' ? \"ws://localhost:9091\" : \"wss://grepawk.com/signal\";\nconst peerRTCConfig = {\n    'RTCIceServers': [{\n        'url': 'stun:stun.l.google.com:19302'\n    }]\n}\n\nfunction BroadcastViewerClient(config){\n    const hostname = config.hostname || signalServerURL;\n    let onEvent = config.onEvent || console.log;\n    let mediaObjectReady = config.mediaObjectReady;\n    let mediaObjectOffline = config.mediaObjectOffline;\n    let signalConnection;\n    let clientConnection;\n    let remoteTracks={};\n    let remoteTrackMetaData={};\n    let metadataChannel;\n    let host_uuid;\n    function watchChannel(channelName){\n        signalConnection = new WebSocket(hostname);\n        signalConnection.onopen = function (e) {\n            signalConnection.send(JSON.stringify({\n                type: \"watch_stream\",\n                channel: channelName\n            }))\n\n            signalConnection.onmessage = function (event) {\n                let data = JSON.parse(event.data);\n                onEvent(\"Signal Server msg type \"+data.type);\n                switch (data.type) {\n                    case 'offer':\n                        onEvent(\"got offer: host_uuid=\", data.host_uuid);\n                        gotSDP(data.offer, data.host_uuid);\n                        break;\n                    case 'candidate':\n                        onEvent(\"got candidate\");\n                        clientConnection.addIceCandidate(data.candidate);\n                        break;\n\n                    case 'error':\n                        onEvent(\"Error: \"+data.message);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    \n    async function gotSDP(offer, hostId) {\n        host_uuid = hostId;\n        clientConnection = new RTCPeerConnection(peerRTCConfig);\n        clientConnection.ondatachannel=function(evt){\n            evt.channel.onopen=()=>onEvent(\"metadata channel on client open\");\n            evt.channel.onmessage=(e)=>{\n                onEvent(\"got metadata \"+e.data);\n                let data = JSON.parse(e.data);\n                if(data.type=='mediaMetadata'){\n                    let mediaDescriptors = data.data;\n                    mediaDescriptors.forEach(trackMetaData=>{\n                      let trackId =   trackMetaData.trackId;\n                      remoteTrackMetaData[trackId]=trackMetaData;\n                    });\n                }\n                showRemoteTracks();\n            }\n        }\n\n        function showRemoteTracks(){\n            onEvent(\"showing remote tracks: \"+Object.keys(remoteTrackMetaData).length);\n            for(let trackId in remoteTrackMetaData){\n                let metadata = remoteTrackMetaData[trackId];\n                if(remoteTracks[trackId]){\n                    let stream = new MediaStream();\n                    stream.addTrack(remoteTracks[trackId]);\n                    mediaObjectReady(trackId, stream,remoteTracks[trackId].kind, metadata.dimensions);\n                    onEvent(\"showing tracking \");\n                }else{\n                    onEvent(\"Got meta data but not track\")\n                }\n\n            }\n        }\n        \n        clientConnection.onicecandidate = (e) => {\n            onEvent(\"client on ice candidate \", e);\n            if (e.candidate) {\n                signalConnection.send(JSON.stringify({\n                    type: \"candidate\",\n                    to_uuid: host_uuid,\n                    candidate: e.candidate\n                }))\n            }\n        }\n\n        clientConnection.ontrack = (e) => {\n            if(e.track){\n                remoteTracks[e.track.id]=e.track;\n            }\n            showRemoteTracks();\n        }\n\n        await clientConnection.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await clientConnection.createAnswer();\n        clientConnection.setLocalDescription(answer);\n        signalConnection.send(JSON.stringify({\n            type: \"answer\",\n            to_uuid: host_uuid,\n            answer: answer\n        }))\n    }\n    return {\n        watchChannel: watchChannel\n    }\n}\n\nexport default BroadcastViewerClient;","import React from \"react\";\nimport Window from \"../components/Window\";\nimport MediaObject from \"./MediaObject\";\nimport BroadcastViewerClient from \"./BroadcastViewerClient\";\nimport \"./Watch.css\";\n\nclass Watch extends React.Component {\n    state={\n        broadcastEvents:[],\n        media:{}\n    }\n\n    constructor(props){\n        super(props);\n        this.broadcastViewerClient = BroadcastViewerClient({\n            channelName:        this.props.channelName,\n            onEvent:            this.onBroadcastEvent,\n            mediaObjectReady:   this.mediaObjectReady,\n            mediaObjectOffline: this.mediaObjectReady\n        });\n    }\n\n    mediaObjectReady=(trackId, stream, type, dimensions)=>{\n       let _objs = this.state.media;\n       _objs[trackId] = [type, stream, dimensions];   \n       this.setState({media: _objs});\n    }\n\n    mediaObjectOffline=(trackId)=>{\n        let _objs = this.state.media;\n        delete _objs[trackId];\n        this.setState({media: _objs});\n    }\n\n  onBroadcastEvent = (event)=>{\n      let events = this.state.broadcastEvents;\n      events.push(event);\n      this.setState({broadcastEvents:events});\n  }\n\n  componentDidMount() {\n      this.broadcastViewerClient.watchChannel(this.props.channelName);\n  }\n\n  renderStream = () =>{\n      const parts = Object.keys(this.state.media);\n     console.log(\"Rendering \"+parts.length+\" stream parts\");\n      return (\n            <div className='stream-content'>\n                {\n                   parts.map((part,idx)=>{ \n                        return (<MediaObject key={idx} notDraggable={true} \n                                mediaObject={this.state.media[part]}></MediaObject>)\n                    })\n                }   \n            </div>         \n      )\n  }\n\n\n  renderConsole = () =>{\n      return (\n          <div className='console-watcher'>\n              {this.state.broadcastEvents.map((event,idx)=>{\n                  let msg;\n                  if(typeof event===\"object\"){\n                      msg=JSON.stringify(event);\n                  }else{\n                     msg = event;\n                  }\n                  return (<p key={idx}>{msg}</p>)\n              })}\n          </div>\n      )\n\n  }\n  render() {\n    return (\n      <Window\n        className=\"watch-stream\"\n        title={this.props.title}\n        pid={this.props.pid}\n        ipc={this.props.ipc}\n        draggable={false}   \n      >\n      <div key='rr' className='stream-wrapper'>\n        {this.renderStream()}\n        {this.renderConsole()}\n      </div>\n      </Window>\n    );\n  }\n}\nexport default Watch;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport \"./AppIconGrid.css\"\n\nconst icons_per_column = 5;\n\n\nclass AppIconGrid extends React.Component{\n    constructor(props){\n        super(props);\n        this.iconClicked = this.iconClicked.bind(this);\n    }\n\n    iconClicked(idx){\n        var icon = this.props.icons[idx];\n        this.props.ipc(icon.cmd, icon.args);\n    }\n    render(){\n        return(\n            <div className='app-icon-grid'>\n                {this.props.icons.map((icon,index)=>{\n                    const row = (index+1) % icons_per_column;\n                    const col = Math.floor((index+1) / icons_per_column);\n                    const iconStyle ={\n                        gridColumnStart:col,\n                        gridColumnEnd: col+1,\n                        gridRowStart:row-1,\n                        gridRowEnd:row,\n                        width:50,\n                        height:50,\n                        borderColor:\"black\",\n                        borderWidth:2\n                       // backgroundColor:\"#D3D3D3\"\n                    }\n             \n                    return (\n                        <div key={\"icon\"+index} \n                            style={iconStyle} \n                            onClick={()=>{\n                                this.iconClicked(index);\n                            }}\n                        >\n                            <i className={\"fas fa-lg fa-\"+icon.name}></i><br></br>{icon.title}\n                        </div>\n                        )\n                })}\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default AppIconGrid;","\nvar Vfs = function(type){\n  if(type=='chrome') return chrome_fs();\n  else if(type=='public') return az_fs();\n}\n\nconst IMG_EXTS    = /\\.(gif|jpg|jpeg|tiff|png)$/i;\nconst VIDEO_EXTS  = /\\.(mov|mp4|m4a|ogg)$/i;\n\n\n\nvar chrome_fs = function(){\n  window.requestFileSystem  = window.requestFileSystem || window.webkitRequestFileSystem;\n  window.directoryEntry = window.directoryEntry || window.webkitDirectoryEntry;\n  var localFS;\n  function g_init_local_fs(){\n    return new Promise((resolve,reject)=>{\n      window.requestFileSystem(window.PERSISTENT, 1024*1024, function(_localFS){\n        localFS= _localFS.root;\n        resolve(localFS);\n      })\n    })\n  }\n  function g_file_get_content(path){\n    return new Promise(async (resolve,reject)=>{\n      if(!localFS) localFS = await g_init_local_fs();\n      localFS.getFile(path, {create:false,exclusive:false}, function(entry){\n        entry.file(function(file){\n          var _file=file;\n          var reader = new FileReader();\n          var readType = 'text';\n          reader.onloadend=function(e){\n            resolve({type:readType, payload:this.result,file:_file});\n          }\n          reader.onerror=function(e){\n            reject(new Error(\"reader failed\"));\n          }\n          if(IMG_EXTS.test(file.name)){\n            readType='image';\n            reader.readAsDataURL(file);\n          }else{\n            reader.readAsText(file);\n          }\n        })\n      }, function(e){\n        reject(e);\n      })\n    });\n  }\n  function g_file_put_contents(path,content,append=true){\n    return new Promise(async (resolve,reject)=>{\n      if(!localFS) localFS = await g_init_local_fs();\n      localFS.getFile(path, {create: true, exclusive: true}, (fileEntry)=>{\n        if(content){\n          fileEntry.createWriter(function(writer){\n            if(append){\n              writer.seek(writer.length);\n            }\n            var blob = new Blob([content], {type: 'text/plain'});\n            writer.write(blob);\n            resolve(fileEntry);\n          })\n        }else{\n          resolve(fileEntry);\n        }\n      }, reject);\n    })\n  }  \n\n  function getDirEntriesSync(path){\n    return new Promise(async (resolve,reject)=>{\n      let fsroot = await g_init_local_fs();\n      fsroot.getDirectory(path, {create:false}, function(directory){\n        directory.createReader().readEntries(function(entries){\n          resolve(entries);\n        });\n      },reject);\n    });\n  }\n  function g_list_local_files(path){    \n    return new Promise(async (resolve, reject)=>{\n      let root_node = {\n        name: path,\n        fullPath:'',\n        id: 0\n      }\n      let queue = [];\n      let nodes = [];\n      let edges = [];\n      queue.push(root_node);\n      nodes.push(root_node);\n      edges[0]=[];\n      let parent;\n      while(queue.length>0){\n        parent = queue.pop();\n        parent.id = parent.id || 0;\n        let entries = await getDirEntriesSync(parent.name);\n        entries.forEach(entry=>{\n          entry.id = nodes.length;\n          nodes.push(entry);\n          edges[parent.id] = edges[parent.id] || [];\n          edges[parent.id].push(entry.id);\n          if(entry.isDirectory){\n            queue.push(entry);\n          }\n        })\n      }\n      resolve([nodes, edges]);\n    });\n  }\n\n  function handleError(e){\n    alert(e.message);\n  }\n\n  function g_upload_file_sync(fsroot, file){\n    return new Promise((resolve,reject)=>{\n      fsroot.getFile(file.name,{create:true, exclusive:false},\n        (fentry)=>{\n        fentry.createWriter(function(writer){\n          writer.write(file);\n          resolve();\n        }, handleError)\n      },handleError);\n    })\n  }\n  function g_upload_files(files){\n    return new Promise(async (resolve, reject)=>{\n      let fsroot = await g_init_local_fs();\n      for(let i = 0; i<files.length; i++){\n        await  g_upload_file_sync(fsroot, files[i]);\n      }\n      resolve();\n    });\n  }\n  return{\n    get_files: async function(path){\n      try{\n        return await g_list_local_files(path);\n      }catch(err){  \n        alert(err.message);\n      }\n    },\n    file_put_content: async function(filename, content){\n      try{\n        return await g_file_put_contents(filename, content,true);\n      }catch(err){  \n        alert(err.message);\n      }\n    },\n    upload_files: async function(files){\n      try{\n        await g_upload_files(files);\n      }catch(e){\n        throw e;\n      }\n    },\n    file_get_content: async function(path){\n      try{\n        var content = await g_file_get_content(path);\n        return content;\n      }catch(e){\n        throw e;\n      }\n    }\n  }\n}\n\nconst NODE_API_HOSTNAME =  window.location.hostname;\n\nvar az_fs = function(){\n\n  return {\n    get_files: function(path){\n      return new Promise((resolve,reject)=>{\n        let url = NODE_API_HOSTNAME+\"/file/azure/list?path=\"+path;\n        fetch(url)\n        .then((resp)=>{\n          return resp.json();\n        })\n        .then(resolve).catch(err=>{\n          alert(err.message);\n          reject(err);\n        });\n      })\n    },\n    file_get_content: async function(path){\n\n    },\n    file_put_content: async function(path, content){\n\n    },\n    upload_files: async function(files){\n\n    }\n  }\n}\n\nVfs.api_post_json=function(uri, data){\n  return new Promise((resolve,reject)=>{\n    debugger;\n    var url = \"http://localhost/api\"+uri;\n    fetch(url,{\n      method:\"POST\",\n      headers:{\n        'Content-Type':\"application/json\"\n      },\n      cache:\"no-cache\"\n    }).then(resp=>resp.json()).then(resolve).catch(reject);\n  })\n}\n\nexport default Vfs;\n\n\n// var v = Vfs();\n// v.get_files(\"/chrome\");\n","import React, { useState } from 'react';\nimport Window from '../components/Window';\nimport Vfs from './VFS';\nimport \"./Finder.css\"\nclass Finder extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            info:           \"finder\",\n            dirs:           props.dirs    || [], \n            current_node_id: props.current_node_id || 0, \n            fs_type:        props.fs_type || \"chrome\",\n            files:          props.files   || [], \n            edges:          props.edges   || [],\n            previewURL:     null,\n            previewText:    null ,\n            previewFile: null \n        }\n        this.vfs = Vfs(props.fs_type);\n    }\n\n\n    componentDidMount=async ()=>{\n        this.getFiles();\n    }\n\n    getFiles = async ()=>{\n        let dirpath = this.state.dirs.join(\"/\");\n        let files, edges;\n        [files, edges] = await this.vfs.get_files(dirpath) || [];\n        this.setState({files: files, edges: edges});\n    }\n\n    add_file=async ()=>{\n        var filename = prompt(\"Enter file name\");\n        var content = prompt(\"Enter file content\");\n        let dirs = this.state.dirs.concat(filename);\n        let full_path  = dirs.join(\"/\");\n        await this.vfs.file_put_content(full_path, content, true);\n        this.getFiles();\n    }\n\n    upload_to_vfs =async (event)=>{\n        try{\n            let uploadFiles = event.target.files.map(f=>{\n                let fstack = this.state.dirs.push(f.name);\n                f.name = fstack.join(\"/\");\n                return f;\n            })\n            await this.vfs.upload_files(uploadFiles);\n            this.vfs.get_files();\n        }catch(e){\n            alert(e.message);\n        }\n    }\n    prompt_array = (questions)=>{\n        var anwsers=[];\n        questions.forEach((q,idx)=>{\n            anwsers.push(prompt(\"question: \"+q));            \n        })\n        return anwsers;\n    }\n    renderPreview = ()=>{\n        const previewStyle={\n            position:\"absolute\",\n            left: \"55%\",\n            top: 0,\n            height: \"70%\",\n            width: \"40%\",\n            backgroundColor:\"transparent\"\n        }\n        const file = this.state.previewFile;\n        if(!file) return null;\n\n        return (\n            <table style={previewStyle}>            \n                <tr>\n                    <td colspan={4}>\n                        {this.renderPreviewContent()}\n                    </td>\n                </tr>     \n                <tr>\n                    <td colspan={4}>\n                        <p>Size: {file.size}</p>\n                        <p>Type: {file.type}</p>\n                    </td>\n                </tr>  \n                <tr>\n                    <td colspan={2}>\n                        <button class='btn btn-primary' onClick={(e)=>{\n                            var answers = this.prompt_array(['category','price']);\n                            Vfs.api_post_json(\"/files/publish\", answers).then(response=>{\n                                var text = response.responseText || JSON.stringify(response);\n                                alert(text);\n                            }).catch((err)=>\n                            { \n                                alert(err.message);\n                            })\n                        }}> Publish </button>\n                    </td>\n                    <td colspan={2}>\n                        <button class='btn btn-primary'>Share</button>\n                    </td>\n                </tr>                 \n            </table>\n        )\n    }\n\n    renderPreviewContent = () =>{\n        if(this.state.previewURL!==null){\n            return(<img height=\"50%\" width=\"100%\" src={this.state.previewURL}></img>);\n        }else if(this.state.previewText!==null){\n            return (<div height=\"50%\" widht=\"100%\">{this.state.previewText}</div>);\n        }\n\n    }\n    renderFileInfo = (file) =>{\n        if(!file) return  (\"\");\n        return (\n            <table>\n                <tr>\n                    <td colspan={4}>\n                        <p>Size: {file.size}</p>\n                        <p>Type: {file.type}</p>\n                    </td>\n                </tr>\n\n               \n            </table>\n        )\n    }\n\n    clickedFile=async (file)=>{\n        try{\n            var preview_content = await this.vfs.file_get_content(file.fullPath);\n            if(preview_content.type==='text'){\n                this.setState({\n                    previewURL: null,\n                    previewText:preview_content.payload, \n                    previewFile:preview_content.file})\n            }else if(preview_content.type==='image'){\n                 this.setState({\n                     previewText: null, \n                     previewURL:preview_content.payload,  \n                     previewFile:preview_content.file\n                    });\n            }\n        }catch(e){\n            alert(e.message);\n        }\n\n    }\n\n    clickedDir = async(dir)=>{\n       let new_dirs =this.state.dirs.concat(dir);\n       this.setState({dirs:new_dirs, current_node_id:dir.id});\n    }\n    backDir = (dirId) =>{\n        if(dirId===0){\n            this.setState({\n                dirs:[], \n                current_node_id:0\n            });\n            return;\n        }\n\n        let new_dirs = [];\n        let i;\n        for(i in  this.state.dirs){\n            new_dirs.push(this.state.dirs[i]);\n            if(dirId == this.state.dirs[i].id){\n                break;\n            }\n        }\n        this.setState({\n            dirs:new_dirs, \n            current_node_id:dirId\n        });\n    }\n    renderBreadCrumb=()=>{\n        const headerStyle={\n            position:\"absolute\",\n            top:0,\n            left:0,\n            height:\"20px\",\n            width:\"100%\",\n        }\n        return(\n            <span style={headerStyle}>\n            <a onClick={()=>{\n               this.backDir(0)\n            }}>{this.state.fs_type+\" >\"}</a>\n\n            {this.state.dirs.map(dir=>{\n               return (<a onClick={()=>{\n                   this.backDir(dir.id)\n               }}>{dir.name+\" >\"}</a>)\n            })}\n            </span>\n        )\n    }\n    renderBody2 = ()=>{\n       let files_displayed=[];\n       const _edges = this.state.edges[this.state.current_node_id] || [];\n       const _files = this.state.files || [];\n       _edges.forEach((node_id)=>{\n        files_displayed.push(_files[node_id])\n       })\n\n       if(files_displayed.length==0){\n        return (\n            <div>No Files</div>\n        )\n       }else{\n        const bodyStyle={\n            position:\"absolute\",\n            top: \"20px\",\n            height: \"calc(100% - 60px)\",\n            left: 0,\n            width:\"47%\",\n            overflow:\"scroll\",\n            paddingLeft:\"2%\",\n            backgroundColor:\"#2A2A2A\"\n        }\n        const ctrlStyle={\n            position:\"absolute\",\n            bottom: \"0px\",\n            height: \"40px\",\n            width: \"100%\",\n            left: 0,\n            float: \"right\"\n        }\n        return (\n            <div className='anchor' style={{position:\"relative\"}}>\n                <div className='file_list' style={bodyStyle}>\n                    {files_displayed.map((file,i) =>{\n                      var rowStyle = {\n                          marginLeft:\"20px\",\n                          width: \"calc(100% - 40px)\",\n                          color: \"#D7D7D7\",\n                          backgroundColor: i % 2 ===0 ? \"#2A2A2A\" : \"#242424\",\n                          height:\"20px\"\n                      }\n                      return (\n                          <div style={rowStyle} onClick={()=>{\n                            if(!file.isDirectory){\n                                this.clickedFile(file)\n                            }else{\n                                this.clickedDir(file);\n                            }\n                          }}>\n                              <span>{file.name}</span>\n                              <span style={{float:\"right\"}}>{file.isDirectory ? \"dir\" : \"file\"}</span>\n                         </div>\n                      )\n                  })}\n                </div>\n                <div className='Controls' style={ctrlStyle}>\n                    <button className='btn' onClick={this.add_file}>Compose</button>\n                    {'\\u00A0'}{'\\u00A0'}\n                    <button className='btn' onClick={this.upload_to_vfs}>Upload</button>\n                </div>\n             </div>\n\n        )\n       }\n    }\n    render() {\n      return (\n      <Window icon='computer' title='My Computer' windowInfo={this.state.xpath}>\n          <div className=\"anchor\">\n              {this.renderBreadCrumb()}\n              {this.renderBody2()}\n              {this.renderPreview()}\n          </div>\n      </Window>)\n    }\n}\nexport default Finder;\n","import React from 'react'\nimport './App.css'\nimport Terminal from './Terminal'\nimport HUD from \"./HUD\";\nimport ListView from \"./components/ListView\"\nimport Camera from \"./Camera\"\nimport Broadcast from \"./Broadcast/Broadcast\"\nimport Watch from \"./Broadcast/Watch\"\nimport UIWebView from \"./components/UIWebView\"\n\nimport AppIconGrid from './AppIconGrid';\nimport Finder from \"./FileExplorer/Finder\";\n\nclass Desktop extends React.Component{\n    state={\n        processes:[{name:\"tty\", state:\"on\"}],\n        userInfo:{name:\"guest\",xp:0,gold:0},\n        quests:[],\n        icons:[\n            {name:\"folder\",     title:\"Local Files\",     cmd:\"finder\", args:[\"chrome\"]},\n            {name:\"folder\",     title:\"Public Files\",     cmd:\"finder\", args:[\"public\"]},\n            {name:\"folder\",     title:\"Google Drive\",    cmd:\"finder\", args:[\"google\"]},\n            {name:\"folder\",     title:\"Dropbox Files\",    cmd:\"finder\", args:[\"dropbox\"]},\n            {name:\"folder\",     title:\"Facebook Files\",    cmd:\"finder\", args:[\"fb\"]},\n\n            {name:\"terminal\",title:\"terminal\",cmd:\"tty\", args:[]},\n            {name:\"broadcast-tower\",title:\"Broadcast\", cmd:\"stream\", args:[]},\n            {name:\"play-circle\",title:\"Watch Hearthstone\", cmd:\"watch\", args:[\"rank_5_rogue\"]},\n            {name:\"editor\",title:\"Word(sic)\"}\n          ]\n    }\n    constructor(props){\n        super(props);\n        this.ipc = this.ipc.bind(this);\n    }\n\n    componentDidMount(){\n        if(window.location.search){\n            var t = window.location.search.replace(\"?\",\"\").split(\"/\");\n            const cmd = t[0];\n            const args = t.splice(1);\n            this.ipc(cmd, args);\n        }\n    }\n\n    ipc(cmd, args){\n        console.log(\"desktop ipc \",cmd,args);\n       switch(cmd){\n  \n            case \"close\":\n                const pid = args[0];\n                const list = this.state.processes;\n                list[pid]=\"closed\";\n                this.setState({processes:list});\n                break;\n            case 'edit':\n                var plist = this.state.processes.concat({\"name\":\"iframe\",\n                        url:\"/api/files/edit?url=\"+args[0]+\"&context=\"+args[1]});\n                this.setState({processes:plist});\n                break;\n            case \"cam\":\n            case \"camera\":\n            case \"broadcast\":\n            case \"stream\":\n            case \"watch\":\n            case \"tty\":\n            case \"compose\":\n            case \"finder\":\n                var plist = this.state.processes.concat({\"name\":cmd,\"args\":args});\n                this.setState({processes:plist});\n                break;\n            case \"hud-update\":\n                this.setState({userInfo:args});\n                 break;\n            case \"questlist\":\n                this.setState({quests:args});\n            break;\n        }\n    }\n\n    renderBody(){\n        return(\n            this.state.processes.map((proc,pid)=>{\n                console.log(proc,pid);\n                if(proc.state==='off') return null;\n                if(proc.name === 'tty'){\n                    return (\n                        <Terminal key='tty1' pid={pid} title='tty' ipc={this.ipc}/>\n                    );\n                }else if(proc.name==='camera'){\n                    return (\n                        <Camera userInfo={this.state.userInfo} pid={pid} title='Face 2 Face' ipc={this.ipc} />\n                    );\n                }else if(proc.name===\"stream\"){\n                    return (\n                        <Broadcast args={proc.args} channel={proc.args[0] || \"\"} pid={pid} title=\"Broadcast\" ipc={this.ipc} />\n                    )\n                }\n                else if(proc.name===\"watch\"){\n                    var channelName = proc.args[0] || \"default\";\n                    return (\n                        <Watch userInfo={this.state.userInfo} channelName={channelName} pid={pid} title=\"Watch\" ipc={this.ipc} />\n                    )\n                }else if(proc.name===\"iframe\"){\n                    return (\n                        <iframe width=\"90%\" height=\"80%\" src={proc.url}></iframe>\n                    )\n                }else if(proc.name==='finder'){\n                    var type = proc.args[0] || \"\";\n                    return (\n                        <Finder ipc={this.ipc} title=\"Finder\" fs_type={type}></Finder>\n                    )\n                }\n            })\n        )\n    }\n    renderHud(){\n        return this.state.userInfo ? \n            (<HUD username={this.state.userInfo.username}\n                cwd={this.state.userInfo.cwd}\n                fname={this.state.userInfo.fname}\n                xp={this.state.userInfo.xp} \n                gold={this.state.userInfo.gold} />)\n            : null;\n    }\n    renderQuestView(){\n        return(\n            <ListView className=\"quest-list\" title=\"quests\" list={this.state.quests} />\n        )\n    }\n    renderBackground(){\n        return(\n            <AppIconGrid icons={this.state.icons} ipc={this.ipc}></AppIconGrid>\n        )\n    }\n    render(){\n        return (\n            <div className='desktop'>\n                <nav style={{width:\"100vw\",height:\"18px\"}} className='navbar navbar-light bg-light'>\n                    <a className=\"navbar-brand\" href=\"#\">GrepAwk</a>\n                    {this.renderHud()}\n                </nav>\n                <div style={{top:\"18px\", position:\"absolute\", width:\"100vw\", height:\"calc(100% - 18px)\"}} >\n                    {this.renderBackground()}\n                    {this.renderBody()}\n                    {this.renderQuestView()}\n                </div>\n\n                \n            </div>\n        )\n    }\n}\nexport default Desktop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import * as serviceWorker from './serviceWorker';\nimport Desktop from './Desktop'\nimport Finder from './FileExplorer/Finder'\nReactDOM.render(<Desktop />, document.getElementById('root'));\n//serviceWorker.unregister();\n"],"sourceRoot":""}