{"version":3,"sources":["components/Window.js","components/Table.js","Terminal.js","HUD.js","components/ListView.js","Video.js","Camera.js","Broadcast/MediaObject.js","Broadcast/BroadcastClient.js","Broadcast/Broadcast.js","Broadcast/BroadcastViewerClient.js","Broadcast/Watch.js","AppIconGrid.js","Desktop.js","index.js"],"names":["Window","props","state","minimized","maximized","closed","onNavBarClick","e","mode","target","className","setState","ipc","pid","renderNavTop","onClick","title","this","boxClass","draggable","children","React","Component","HtmlToReactParser","require","Parser","Table","renderHeaders","headers","key","map","header","i","renderBody","rows","row","rn","html","val","td_val","forEach","opt","cmd","desc","htmlToReactParser","parse","border","socket","node_ws_url","window","location","hostname","getUUID","uuid","localStorage","getItem","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","generateUUID","setItem","Terminal","output_rows","output_cursor_position","initSocket","Promise","resolve","reject","readyState","WebSocket","OPEN","CONNECTING","onAddOutputRow","type","data","onopen","clearTimeout","timeoutId","send","setTimeout","list","concat","parseAPIResponse","stdout","stderr","table","userInfo","quests","hint","renderOutputRow","style","color","disabled","value","keyboardLoaded","focus","windowLoaded","document","getElementsByClassName","scrollTo","offsetHeight","keyboardPressed","keyCode","locallyProcessed","renderInputBar","id","autofocus","onLoad","onKeyDown","size","autoComplete","clickOnTerminal","getElementById","scrollToBottom","messagesEnd","scrollIntoView","behavior","prompt","createRef","promptInput","onmessage","event","image","Image","src","URL","createObjectURL","startsWith","JSON","cmd_str","t","split","args","splice","ref","el","hudStyle","float","marginRight","HUD","fname","username","cwd","xp","points","ListView","item","description","Video","video","srcObject","media","width","height","muted","autoPlay","playsInLine","defaultProps","signal_connection","rtcConn","peerRTCConfig","optional","Camera","enteredRoom","signalConnected","videoOn","audioOn","flashMessage","error","myStream","room","isHost","remoteStreams","joinRoom","a","stringify","channel","initiateRTCPeerConnection","RTCPeerConnection","ontrack","streams","tracklist","onicecandidateerror","message","onicecandidate","candidate","onLoggedInWithSignalServer","usersCount","onnegotiationneeded","createOffer","then","setLocalDescription","offer","catch","alert","getTracks","track","addTrack","channelJoined","onReceivedRemoteConnectionOffer","setRemoteDescription","RTCSessionDescription","createAnswer","answer","caller_id","console","log","onReceivedConnectionRequestResponse","sdp","navigator","mediaDevices","getDisplayMedia","stream","onReceivedICECandidate","addIceCandidate","name","chatRoomChanged","audioCheckBoxChanged","videoCheckBoxChanged","gotMyStream","renderLobby","onChange","checked","renderRoom","remoteStream","onClosed","videoRef","msg","MediaObject","renderVideo","renderAudio","streamType","mediaObject","dimensions","divStyle","position","left","top","notDraggable","signalServerURL","BroadcasterClient","config","signalConnection","host_uuid","onEvent","peerConnections","localTracks","trackDescriptor","live","updateTrackForPeers","Object","values","client","updateTracks","requestUserStream","getUserMedia","audio","Error","addStream","idx","push","removeStream","removeTrack","stop","startBroadcast","channelName","client_uuid","peerConnection","metadataChannel","createDataChannel","trackMap","sendMetaData","metadata","keys","trackId","active","payload","to_uuid","evt","tracks","set_sdp_anwser","BroadcasterRTCConnection","user_join_request","user_sent_sdp_answser","user_sent_peer_ice_candidate","json","onerror","defaultDimensions","screenshare","webcam","textBanner","Broadcast","streamElements","broadcasting","broadcastEvents","onBroadcastEvent","events","updateStreamElements","cstate","broadcastClient","renderObjectives","renderPreview","parts","part","controlClicked","control","turnOn","existingStream","renderConsole","startBroadcasting","confirm","stopBroadcasting","renderControls","isOn","text","btnClass","renderHeader","href","BroadcastClient","previewDiv","BroadcastViewerClient","clientConnection","mediaObjectReady","remoteTracks","mediaObjectOffline","remoteTrackMetaData","hostId","showRemoteTracks","length","MediaStream","kind","ondatachannel","trackMetaData","watchChannel","gotSDP","Watch","_objs","renderStream","broadcastViewerClient","AppIconGrid","iconClicked","bind","icon","icons","index","col","iconStyle","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","borderColor","borderWidth","Desktop","processes","gold","search","plist","proc","renderHud","renderBackground","renderQuestView","ReactDOM","render"],"mappings":"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","file":"static/js/main.2f787bee.chunk.js","sourcesContent":["import React from 'react'\nimport './Window.css';\nimport Draggable from 'react-draggable'; // The default\n\n\n\nclass Window extends React.Component{\n    state ={\n        minimized:false,\n        maximized:false,\n        closed:false\n    }\n    constructor(props){\n        super(props)\n    }\n    onNavBarClick=(e)=>{\n        const mode = e.target.className;\n        if(mode==='maximize'){\n            this.setState({maximized:!this.state.maximized});\n        }else if(mode==='minimize'){\n            this.setState({minimized:!this.state.minimized});\n        }else if(mode==='close'){\n            this.setState({closed:true});\n            this.props.ipc(\"close\", [this.props.pid]);\n        }\n    }\n    renderNavTop=()=>{\n        return (\n        <div className='title'>\n            <button className='close' onClick={this.onNavBarClick}>x</button>\n            <button className='maximize' onClick={this.onNavBarClick}>[]</button>\n            <button className='minimize' onClick={this.onNavBarClick}>_</button>\n            <p className='title'>{this.props.title}</p>\n        </div>\n        )\n    }\n\n    render(){\n        if(this.state.closed) return null;\n        var boxClass=\"\";\n        if(this.state.minimized){\n            boxClass=\"box box-minimized\"\n        }else if(this.state.maximized){\n            boxClass='box box-full';\n        }else{\n            boxClass='box';\n        }    \n        boxClass= (this.props.className ||\"\")+\" \" + boxClass;  \n\n        const draggable = this.props.draggable && true; \n\n        return (\n            <Draggable>\n                <div className={boxClass}>\n                    {this.renderNavTop()}\n                    <div className=\"body\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </Draggable>\n      ) \n    }\n}\n\nexport default Window;","import React from 'react';\nvar HtmlToReactParser = require('html-to-react').Parser;\n\nclass Table extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    renderHeaders=()=>{\n        if(!this.props.headers) return null;\n        return (\n            <thead>\n                <tr key={'tbtrh1'}>    \n                {this.props.headers.map((header,i)=>{\n                    return (<th key={\"th\"+i}>{header}</th>)\n                })}\n\n                </tr>\n            \n            </thead>\n        )\n    }\n    renderBody=()=>{\n        if(!this.props.rows) return null;\n        return (\n            <tbody>\n{           this.props.rows.map((row,rn)=>{\n                var html=\"\";\n                this.props.headers.map((header)=>{\n                    var val = row[header] || \"\";\n                    var td_val = \"\"\n                    if (header == \"opts\") {\n                      val.forEach((opt, i) => {\n                        td_val += `<a style='color:yellow' href='#' class='onclick_cmd' cmd='${opt.cmd}'>${opt.desc}</a>`;\n                      })\n                      html+=\"<td>\"+td_val+\"</td>\";\n                    }else if (header === 'thumbnail') {\n                        var img_url = val;\n                        html += \"<td><img width=120 src='\" + img_url + \"'></td>\";\n                    } else {\n                        html += \"<td>\" + val + \"</td>\";\n                    }\n                })\n                var htmlToReactParser = new HtmlToReactParser();\n\n                return (<tr key={\"tr \"+rn}>{htmlToReactParser.parse(html)}</tr>)\n            })\n        }\n             </tbody>\n        )        \n\n    }\n    render(){\n        return(<table className={this.props.className || \"table\"} border=\"1\">\n            {this.renderHeaders()}\n            {this.renderBody()}\n        </table>)\n    }\n}\nexport default Table;","import React from 'react'\nimport Window from './components/Window'\nimport './Terminal.css'\nimport Table from './components/Table'\n\nvar socket=null;\nconst node_ws_url = window.location.hostname == 'localhost' ?\n\"ws://localhost:8081\" : \"wss://grepawk.com/ws\";\n\nclass Terminal extends React.Component{\n    state={\n       socket,\n       output_rows:[],\n       output_cursor_position:0,\n       uuid: getUUID()\n    }\n\n    constructor(props){\n        super(props)\n        this.prompt=React.createRef();\n        this.promptInput = React.createRef();\n    }\n    initSocket=()=>{\n        return new Promise((resolve, reject) => {\n            if (socket && socket.readyState === WebSocket.OPEN) {\n              resolve();\n              return;\n            }\n            if (socket && socket.readyState === WebSocket.CONNECTING) {\n              this.onAddOutputRow({type:\"text\",data:\"Connecting..\"});\n              resolve();\n              return;\n            } \n            socket = new WebSocket(node_ws_url);\n            socket.onopen = e => {\n              clearTimeout(timeoutId);\n              socket.send(\"check-in \" + this.state.uuid);\n              resolve();\n            }\n            var timeoutId=setTimeout(() => {\n                if(socket.readyState!==WebSocket.OPEN){\n                   // reject(new Error(\"connection timed outt\"));\n                }\n            }, 5000);\n          })\n    }\n    onAddOutputRow=(row)=>{\n        const list = this.state.output_rows.concat(row);\n        this.setState({output_rows:list});\n    }\n    parseAPIResponse=(data)=>{\n        if(data.stdout){\n            this.onAddOutputRow({type:\"text\",data:data.stdout})\n        }\n        if(data.stderr){\n            this.onAddOutputRow({type:\"text\",data:data.stderr})\n        }\n        if(data.table){\n            this.onAddOutputRow({type:\"table\",data:data.table})\n        }\n        if(data.userInfo){\n           // this.onAddOutputRow({type:\"text\",data: JSON.stringify(data)})\n            localStorage.setItem(\"uuid\", data.userInfo.uuid);\n            this.props.ipc(\"hud-update\",data.userInfo);\n        }\n        if(data.quests){\n            this.props.ipc(\"questlist\", data.quests);\n        }\n        if(data.hint){\n            //todo\n        }\n    }\n    \n   async componentDidMount(){\n        await this.initSocket();\n        socket.onmessage=(event)=>{\n            if (typeof event.data === 'object') {\n                var image = new Image();\n                image.src = URL.createObjectURL(event.data);\n                this.onAddOutputRow({type:\"image\",data:image})\n            } \n            else if (event.data && event.data.startsWith(\"stdout: \")) {\n                var stdout = event.data.replace(\"stdout: \", \"\");\n                this.onAddOutputRow({type:\"text\",data:stdout})\n            }else if (event.data && event.data.startsWith(\"stderr: \")) {\n                var stdout = event.data.replace(\"stderr: \", \"\");\n                this.onAddOutputRow({type:\"text\",data:stdout})\n            }else{\n                this.parseAPIResponse(JSON.parse(event.data));\n            }\n        }\n    //  window.terminalDidMount();\n    }\n\n    renderOutputRow=(row,i)=>{\n\n        switch(row.type){\n            case 'stdout':\n            case 'text':\n                return (<pre key={\"op-\"+i}> {row.data}</pre>)\n            case 'stderr':\n                var redStyle={color:\"red\"};\n                return (<pre key={\"op-\"+i}> <span style={redStyle}>{row.data}</span></pre>)\n            case 'stdin':              \n                return (<div className='input-line' key={\"op-\"+i}>\n                            <div className='prompt'>></div> \n                            <input className='cmdline input-line' disabled  value={row.data} />\n                        </div>);\n            case 'table':\n                 return(<div key={\"op-\"+i}><Table className=\"table table-dark\" headers={row.data.headers} rows={row.data.rows}></Table></div>)\n            break;\n        }\n    }\n    keyboardLoaded=(e)=>{\n      e.target.focus();\n    }\n    windowLoaded=(e)=>{\n       document.getElementsByClassName(\"terminal-body\").scrollTo(0,100);\n        e.target.offsetHeight=1000;\n    }\n\n    locallyProcessed(cmd_str){\n        if(!cmd_str) return false;\n\n        var t = cmd_str.split(\" \");\n        const cmd = t[0];\n        const args = t.splice(1);\n        switch(cmd){\n            case 'cam':\n            case 'upload':\n            case 'new':\n            case 'stream':\n            case 'broadcast':\n            case 'draw':\n            case 'watch':\n                this.props.ipc(cmd,args);\n                return true;\n            default:\n                return false;\n        }\n\n    }\n    keyboardPressed=(e)=>{\n        if(e.keyCode==13){ //enter\n            this.onAddOutputRow({type:\"stdin\",data:e.target.value});\n            if(!this.locallyProcessed(e.target.value)){\n                socket.send(e.target.value);\n            }\n            e.target.value=\"\";\n        }\n    }\n\n    renderInputBar = () => {\n        const stdinPromptString = \">\";\n        return (<div className='input-line'>\n                    <div id='stdin-prompt' className='prompt'> > </div>\n                    <input autofocus=\"true\"   \n                         onLoad={this.keyboardLoaded}\n                           onKeyDown={this.keyboardPressed}\n                           size='80' \n                           id=\"terminal_input\"\n                           autoComplete=\"off\"\n                           className='cmdline input-line' />\n                </div>\n                )\n    }\n\n    clickOnTerminal=(e)=>{\n          document.getElementById(\"terminal_input\").focus();;\n    }\n\n\n    render(){\n        return (<Window className=\"terminal\" title={this.props.title} pid={this.props.pid} ipc={this.props.ipc}>\n            <div className='terminal-body' onClick={this.clickOnTerminal} \n                onLoad={()=>{\n\n\n                }}>\n            {this.state.output_rows.map((row,i)=>{\n                return this.renderOutputRow(row,i);\n            })}\n            {this.renderInputBar()}\n            <div className=\"terminal-anchor\" ref={(el) => { this.messagesEnd = el; }}> </div>\n            </div>\n        </Window>) \n    }\n    componentDidUpdate() {\n        this.scrollToBottom();\n      }\n      scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n}\n\nfunction generateUUID() { // Public Domain/MIT\n    var d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\n        d += performance.now(); //use high-precision timer if available\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nfunction getUUID()  {\n    var uuid = localStorage.getItem(\"uuid\") \n    if(uuid) return uuid;\n\n    uuid = generateUUID();\n    localStorage.setItem(\"uuid\",uuid);\n}\nexport default Terminal;","import React from 'react'\nconst hudStyle={\n  float:'right',\n  marginRight:\"15px\"          \n}\nclass HUD extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    \n    render(){\n        return(\n            <span style={hudStyle} className=\"HUD\">\n                Name: {this.props.fname || this.props.username || \"guest\"}, \n                Location: {this.props.cwd ||\"root\"},\n                XP Level:{this.props.xp || 0}, \n                Gold:{this.props.points||0}\n            </span>\n        )\n    }\n}\n\nexport default HUD;","import React from 'react';\nclass ListView extends React.Component{\n    render(){\n        return (\n            <div className={this.props.className}>\n                <h5>{this.props.title}</h5>\n                <ul>\n                    {this.props.list && this.props.list.map ? this.props.list.map((item, i) => {\n                        return (\n                            <li key={\"list-\" + i}>\n                                <h5 className=\"list-header\">{item.title}</h5>\n                                <div className=\"list-body\">{item.description}</div>\n                            </li>\n                        )\n                    }):null}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ListView;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nclass Video extends React.Component {\n  componentDidMount() {\n    this.video.srcObject = this.props.media;\n  }\n\n  shouldComponentUpdate(props) {\n    return this.props.media !== props.media;\n  }\n\n  componentDidUpdate() {\n    this.video.srcObject = this.props.media;\n  }\n\n  render() {\n    const { width, height, muted, children } = this.props;\n\n    return (\n      <video\n        height={height}\n        width={width}\n        muted={muted}\n        autoPlay\n        playsInLine\n        ref={(video) => { this.video = video; }}\n      >\n        {children}\n      </video>\n    );\n  }\n}\n\nVideo.defaultProps = {\n  children: null,\n  height: 420,\n  width: 640,\n  muted: true,\n  media: null,\n};\n\nVideo.propTypes = {\n  children: PropTypes.element,\n  media: PropTypes.shape(\n    {\n      active: PropTypes.bool,\n      ended: PropTypes.bool,\n      id: PropTypes.string,\n    },\n  ),\n  muted: PropTypes.bool,\n};\n\nexport default Video;\n","import React from 'react'\nimport Window from './components/Window'\nimport Video from \"./Video\";\n\nconst lobbyStyle={\n\n}\n\nconst signal_url=\"ws://localhost:9090\";\nvar signal_connection, rtcConn;\n\n\nconst peerRTCConfig = {\n    'RTCIceServers': [{\n          'url': 'stun:stun.l.google.com:19302'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=udp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=tcp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       }\n    ],\n    optional: [{\n       'DtlsSrtpKeyAgreement': true\n    }]\n\n }\n\n \nclass Camera extends React.Component{\n    constructor(props){\n        super(props);\n        this.videoRef = React.createRef();\n    }\n    state={\n        enteredRoom: false,\n        signalConnected:false,\n        videoOn:true,\n        audioOn: true,\n        flashMessage:\"\",\n        error:null,\n        myStream: null,\n        room: this.props.room || \"default\",\n        isHost:null,\n        remoteStreams:[]\n    }\n\n    async componentDidMount(){\n        signal_connection = new WebSocket(signal_url);\n        signal_connection.onopen=(e)=>{\n            this.setState({signalConnected:true});\n        };\n        signal_connection.onmessage=(msg)=>{\n            try{\n                var data = JSON.parse(msg.data);\n                console.log(\"signal on msg \", msg);\n                if (data.type === 'login') {\n                    this.onLoggedInWithSignalServer(data);\n                }\n                else if (data.type === 'offer') {\n                    debugger;\n                    if(data.offer.sdp){\n                        this.onReceivedRemoteConnectionOffer(data);\n\n                    }else{\n                        console.log(\"signal ret offer not contrain sdp\", data);\n                    }\n                }\n                else if (data.type === 'answer') {\n                    this.onReceivedConnectionRequestResponse(data);\n                }\n                else if(data.type==='candidate'){\n                    this.onReceivedICECandidate(data);\n                }else if(data.type==='error'){\n                    debugger;\n                    this.setState({flashMessage:data.message});\n                }\n    \n\n            }catch(e){\n                console.log(\"signal onmsg failed\", e);\n            }\n          \n        }\n       try{\n        var myStream = await navigator.mediaDevices.getDisplayMedia();\n        this.setState({myStream:myStream});\n       }catch(e){\n           this.setState({error:e.message});\n       }\n \n\n    }\n    componentWillUnmount(){\n        this.onClosed();\n    }\n\n    joinRoom=async()=>{\n        this.setState({enteredRoom:true});\n        signal_connection.send(JSON.stringify({ type: 'login', channel: this.state.room, uuid: this.props.userInfo.uuid }));\n    }\n\n    initiateRTCPeerConnection=()=>{\n        rtcConn = new RTCPeerConnection(peerRTCConfig);\n\n        rtcConn.ontrack=(e)=>{\n            if(e.streams && e.streams[0]){\n                const tracklist = this.state.remoteStreams.concat(e.streams[0]);\n                this.setState({remoteStreams:tracklist});\n            }\n        }\n        rtcConn.onicecandidateerror=(e)=>{\n            this.setState({flashMessage:e.message});\n        }\n        rtcConn.onicecandidate = (event)=>{\n            if (event.candidate!=null) {\n                signal_connection.send(JSON.stringify({\n                  type: \"candidate\",\n                  candidate: event.candidate,\n                  channel:this.state.room\n               }))\n            }\n         }\n         return  rtcConn;\n    }\n\n    onLoggedInWithSignalServer=(data)=>{\n        this.setState({signalConnected:true});\n        if(data.usersCount==1){\n            this.setState({flashMessage:\"Joined channel \"+data.channelJoined+\". Only you here.\"});\n            return;\n        }\n        this.initiateRTCPeerConnection();\n\n        rtcConn.onnegotiationneeded = (e)=>{\n            rtcConn.createOffer().then(desc=>{\n                rtcConn.setLocalDescription(desc);\n                signal_connection.send(JSON.stringify({\n                    type: 'offer',\n                    offer: desc,\n                    channel: this.state.room\n                 }));\n            }).catch(e=>{\n                debugger;\n                alert(e.message);\n            })\n           \n        }\n        this.state.myStream.getTracks(track=>{\n            rtcConn.addTrack(track,this.state.myStream);\n        })\n\n        rtcConn.createOffer().then(desc=>{\n            rtcConn.setLocalDescription(desc);\n            signal_connection.send(JSON.stringify({\n                type: 'offer',\n                offer: desc,\n                channel: this.state.room\n             }));\n        }).catch(e=>{\n            alert(e.message);\n        })\n    }\n\n    onReceivedRemoteConnectionOffer=(data)=>{\n         this.initiateRTCPeerConnection();\n        rtcConn.setRemoteDescription(new RTCSessionDescription(data.offer)).then(() => {\n                this.state.myStream.getTracks().forEach(track=>{\n                    rtcConn.addTrack(track,this.state.myStream);\n                })\n            }).then(()=>{\n                return rtcConn.createAnswer();\n            }).then((answer)=>{\n                rtcConn.setLocalDescription(answer);\n                return answer;\n            }).then((answer)=>{\n                signal_connection.send(JSON.stringify({\n                    type: 'answer',\n                    answer: answer,\n                    channel: data.channel,\n                    uuid: data.caller_id\n                }));\n            }).catch(e=>{\n                console.log(e);\n                this.setState({flashMessage:e.message+\" on receive remote errored\"});\n            })\n    }\n\n    onReceivedConnectionRequestResponse=(data)=>{\n        if(data.answer.sdp){\n\n            rtcConn.setRemoteDescription(data.answer).then(function(){\n                return navigator.mediaDevices.getDisplayMedia();\n            }).then((stream)=>{\n                stream.getTracks().forEach(track=>rtcConn.addTrack(track,stream));\n            })    \n         }\n    }\n    onReceivedICECandidate=(data)=>{\n        rtcConn.addIceCandidate(data.candidate).catch(e => {\n            console.log(\"Failure during addIceCandidate(): \" + e.name);\n        });\n    }\n    chatRoomChanged=(e)=>{\n        const value = e.target.value;\n        this.setState({'room':value});\n    }\n    audioCheckBoxChanged=(e)=>{\n        this.setState({'audioOn':e.target.value});\n    }\n    videoCheckBoxChanged=(e)=>{\n        this.setState({'videoOn':e.target.value});\n    }\n\n    gotMyStream=(stream)=>{\n        this.setState({'myStream':stream});\n    }\n    renderLobby=()=>{      \n        return (\n            <div className='cam-lobby'>\n                <p>{this.state.flashMessage}</p>\n                <Video width={300} media={this.state.myStream}></Video>\n                <p>Join Room: <input   id='join_room_name' onChange={this.chatRoomChanged} value={this.state.room} type='text' size='50'></input></p>\n                <p>Audio: <input id='join_room_audio' onChange={this.audioCheckBoxChanged} type='checkbox' checked /></p>\n                <p>Video: <input id='join_room_video'  onChange={this.videoCheckBoxChanged} type='checkbox' checked /></p>\n                <p><button onClick={this.joinRoom}>Go</button> </p>\n            </div>\n        )\n    }\n    renderRoom=()=>{\n        return (<div className='cam-room'>\n            <h3>Room {this.state.room}</h3> \n                <p>{this.state.flashMessage}</p>\n                <Video key=\"mstream\" width={200} height={100}  media={this.state.myStream}></Video>\n                {this.state.remoteStreams.map((remoteStream,i)=>{\n                    console.log(remoteStream);\n                    return ( <Video key={\"remote-stream-\"+i} width={100} height={100} media={remoteStream}></Video>)\n                })}            \n        </div>)\n    }\n    render(){\n        return (<Window className=\"camera\" title={this.props.title} pid={this.props.pid} ipc={this.props.ipc}>\n            {this.state.error!==null ? <div>Error: {this.state.error}</div>: \n                (this.state.signalConnected==false || this.state.myStream ==null) ? <div>Connecting..</div> : \n                   this.state.enteredRoom==false ? this.renderLobby() : this.renderRoom()}\n        </Window>)\n    }\n    onClosed=()=>{\n        //this.state.myStream.stop();\n    }\n\n}\nexport default Camera;","import React from 'react';\nimport Video from '../Video'\nimport Draggable from 'react-draggable'; // The default\n\nclass MediaObject extends React.Component{\n\n    renderVideo=(stream,width,height)=>{\n        \n        return (<Video width={\"100%\"} height={\"100%\"} media={stream}></Video>)\n    }\n \n    renderAudio=()=>{\n        return (<div>todo</div>)\n    }\n    render(){\n        const streamType = this.props.mediaObject[0];\n        const stream =  this.props.mediaObject[1];\n        const dimensions = this.props.mediaObject[2];\n        const divStyle={\n            position:\"absolute\",\n            left:   dimensions[0]+\"%\",\n            top:    dimensions[1]+\"%\",\n            width:  dimensions[2]+\"%\",\n            height: dimensions[3]+\"%\"\n        }\n        if(this.props.notDraggable){\n            return(\n                <div style={divStyle}>\n                    {streamType==\"video\"       ?   this.renderVideo(stream) : null}\n                    {streamType==\"screenshare\" ? this.renderVideo(stream) : null}\n                    {streamType==\"webcam\"      ? this.renderVideo(stream) : null}\n                    {streamType==\"audio\"       ? this.renderAudio(stream) : null}\n                </div>\n            )\n        }\n        return(\n            <Draggable>          \n                 <div style={divStyle}>\n                    {streamType==\"video\" ? this.renderVideo(stream) : null}\n                    {streamType==\"screenshare\" ? this.renderVideo(stream) : null}\n                    {streamType==\"webcam\"      ? this.renderVideo(stream) : null}\n                    {streamType==\"audio\"       ? this.renderAudio(stream) : null}\n                </div>\n            </Draggable>\n\n        )\n    }\n}\n\nexport default MediaObject;","const peerRTCConfig = {\n    'RTCIceServers': [{\n        'url': 'stun:stun.l.google.com:19302'\n    }]\n}\n\n\nconst signalServerURL = window.location.hostname == 'localhost' ? \"ws://localhost:9091\" : \"wss://grepawk.com/signal\";\n\nfunction BroadcasterClient(config) {\n    config = config || {};\n    config.console = config.console || \"console\";\n    const hostname = config.hostname || signalServerURL;\n    let onEvent = config.onEvent || console.log;\n    let signalConnection;\n    let peerConnections = {};\n    let localTracks=[];\n    var host_uuid;\n\n    function trackDescriptor(id, track,dimensions){\n        return{\n            id:id, track:track, dimensions:dimensions, live:true\n        }\n    }\n    function addTrack(track, dimensions){\n        for(var idx in localTracks){\n            if(localTracks[idx].id===track.id){\n                localTracks[idx]=trackDescriptor(track.id, track, dimensions);\n            }\n        }\n        localTracks.push(trackDescriptor(track.id, track, dimensions));\n    }\n    function removeTrack(track){\n        for(var idx in localTracks){\n            if(localTracks[idx].id===track.id){\n                localTracks[idx].live=false;\n            }\n        }\n    }\n    function sendJson(json, to_uuid) {\n        if (to_uuid) json[to_uuid] = to_uuid;\n        signalConnection.send(JSON.stringify(json));\n    }\n\n    function startBroadcast(channelName) {\n        signalConnection = new WebSocket(hostname);\n        signalConnection.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            onEvent(event.data.type ||\"\");\n            switch (data.type) {\n                case 'registered':\n                    host_uuid = data.host_uuid;\n                break;\n                case 'user_joined':\n                    user_join_request(data);\n                    break;\n                case 'answer':\n                    user_sent_sdp_answser(data);\n                    break;\n                case 'candidate':\n                    user_sent_peer_ice_candidate(data);\n                    break;\n                case 'user_left':\n                    break;\n                default:\n                    break;\n            }\n        }\n        signalConnection.onopen = (e) => {\n            sendJson({\n                type: \"register_stream\",\n                channel: channelName\n            });\n            onEvent(\"Stream registered \"+channelName);\n        }\n        signalConnection.onerror = (e) => onEvent(\"ERROR: signalconnection not connecting\", e);\n    }\n\n    function user_sent_peer_ice_candidate(data) {\n        if (!data.client_uuid || !data.candidate) throw new Error(\"unexpected request in user_sent_peer_ice_candidate\");\n        peerConnections[data.client_uuid].addIceCandidate(data.candidate);\n        onEvent(\"add peer ice candidate from \" + data.client_uuid);\n    }\n\n    function user_sent_sdp_answser(data) {\n        if (!data.client_uuid || !data.answer) throw new Error(\"unexpected request in user_sent_peer_ice_candidate\");\n        peerConnections[data.client_uuid].set_sdp_anwser(data.answer);\n    }\n\n    function user_join_request(data) {\n        if (!data.client_uuid) throw new Error(\"unexpected user_join request\");\n        peerConnections[data.client_uuid] = BroadcasterRTCConnection(signalConnection, data.client_uuid,host_uuid,onEvent);\n        peerConnections[data.client_uuid].updateTracks(localTracks);\n        \n    }\n    function updateTrackForPeers(){\n        Object.values(peerConnections).forEach(client=>{\n            client.updateTracks(localTracks);\n        })\n    }\n\n    function addStream(stream,dimensions){\n        stream.getTracks().forEach(track=>{\n            addTrack(track, dimensions);\n        })       \n        updateTrackForPeers();\n    }\n\n    function removeStream(stream){\n        stream.getTracks().forEach((track)=>{\n            removeTrack(track);\n            track.stop();\n        })\n        updateTrackForPeers();\n        return null;\n    }\n\n    function requestUserStream(type){\n        return new Promise(async (resolve,reject)=>{\n            try {\n                let stream;\n                if(type==\"screenshare\"){\n                    stream =  await navigator.mediaDevices.getDisplayMedia();\n                }else if(type==\"webcam\"){\n                    stream = await navigator.mediaDevices.getUserMedia({video:true, audio:false});\n                }else if(type==\"audio\"){\n                    stream = await navigator.mediaDevices.getUserMedia({video:false, audio:true});\n                }else{\n                    reject(new Error(\"Unkown type\"))\n                }\n                if(stream) resolve(stream);\n                else resolve(null);\n            } catch (e) {\n               reject(e);\n            }\n        })\n    }\n\n    return {\n        requestUserStream: requestUserStream,\n        addStream: addStream,\n        removeStream:removeStream,\n        peerConnections: peerConnections,\n        startBroadcast: startBroadcast\n    }\n}\nfunction BroadcasterRTCConnection(signalConnection, client_uuid,host_uuid,onEvent) {\n    var signalConnection = signalConnection;\n    var client_uuid = client_uuid;\n    var host_uuid;\n    var peerConnection = new RTCPeerConnection(peerRTCConfig);\n    var metadataChannel = peerConnection.createDataChannel(\"metadata\");\n\n    var trackMap={};\n\n    metadataChannel.onopen = function(){\n        onEvent(\"Meta channel open with \"+client_uuid);\n        sendMetaData();\n    }\n    peerConnection.onicecandidate = (e) => {\n        if (e.candidate) {\n            signalConnection.send(JSON.stringify({\n                type: \"candidate\",\n                candidate: e.candidate,\n                to_uuid: client_uuid,\n                host_uuid: host_uuid\n            }));\n        }\n    }\n    peerConnection.onnegotiationneeded = async (evt) => {\n        onEvent(\"creating sdp offer for \" + client_uuid);\n        const offer = await peerConnection.createOffer();\n        await peerConnection.setLocalDescription(offer);\n        signalConnection.send(JSON.stringify({\n            type: \"offer\",\n            to_uuid: client_uuid,\n            offer: offer,\n            host_uuid:host_uuid\n       }))\n    }\n    function sendMetaData(){\n        if(!metadataChannel || metadataChannel.readyState!=='open'){\n            onEvent(\"metadata channel not yet o0pen\");\n            setTimeout(sendMetaData, 1000);\n            return;\n        }\n        \n        let metadata=[];\n        let trackIds = Object.keys(trackMap);\n        trackIds.forEach(trackId=>{\n            let track = trackMap[trackId];\n            metadata.push({\n                trackId: track.id,\n                dimensions: track.dimensions,\n                live: track.active\n            })\n        })          \n        let payload = {\n            type:\"mediaMetadata\",\n            data: metadata\n        }\n        onEvent(\"sending metadata \", payload);\n        metadataChannel.send(JSON.stringify(payload));\n    }\n\n    return {\n        updateTracks: function(tracks){\n            for(var idx in tracks){\n               let trackId = tracks[idx].id;\n               if(typeof trackMap[trackId]!=='undefined'){\n                   continue;\n               }\n               trackMap[trackId] = tracks[idx];\n               if(tracks[idx].live) peerConnection.addTrack(tracks[idx].track);\n            }     \n            sendMetaData();\n        },\n\n        set_sdp_anwser: async function(answer) {\n            try {\n                await peerConnection.setRemoteDescription(answer);\n                onEvent(\"Remote Anwser set\"); \n            } catch (e) {\n                onEvent(\"ERROR: in set_dsp_anwser\");\n            }\n        },\n        addIceCandidate:function(candidate){\n            onEvent(\"add ice candidate \");\n            peerConnection.addIceCandidate(candidate);\n        }\n    }\n}\n\n// \nexport default BroadcasterClient;","import React from \"react\";\nimport Window from \"../components/Window\";\nimport MediaObject from \"./MediaObject\";\nimport './broadcast.css';\nimport BroadcastClient from \"./BroadcastClient\";\n\n\nconst streamHost = \"https://grepawk.com/watch/\";\nconst defaultDimensions ={\n    screenshare: [0,0,100,100],\n    webcam: [0, 80, 20,20],\n    audio: [90,0,10,10],\n    textBanner:[5,5,80, 10]\n}\n\nclass Broadcast extends React.Component {\n  state = {\n    screenshare: false,\n    webcam: false,\n    audio: false,\n    streamElements:{},\n    broadcasting: false,\n    broadcastEvents:[],\n  };\n\n  constructor(props){\n      super(props);\n      this.broadcastClient = BroadcastClient({\n          onEvent: this.onBroadcastEvent,\n          console: \"console\"\n      })\n      this.channelName = this.props.args[0];\n  }\n  onBroadcastEvent = (event)=>{\n      let events = this.state.broadcastEvents;\n      events.push(event);\n      this.setState({broadcastEvents:events});\n  }\n\n  updateStreamElements=(type, mediaObject, dimensions)=>{\n    let cstate = this.state.streamElements;\n    cstate[type]=[type, mediaObject, dimensions];\n    if(mediaObject!==null && this.state.broadcasting===true){\n        this.broadcastClient.addStream(mediaObject, dimensions);\n        this.onBroadcastEvent(\"Adding stream \"+type);\n    }\n    this.setState({streamElements:cstate});\n  }\n  componentDidMount() {\n\n  }\n  renderObjectives = () =>{\n\n  }\n  renderPreview = () =>{\n      const parts = Object.keys(this.state.streamElements);\n      return (\n            <div>\n            {parts.map(part=>{return (\n                <MediaObject mediaObject={this.state.streamElements[part]}></MediaObject>)})}   \n            </div>         \n      )\n  }\n\n  controlClicked=async (control)=>{\n      let turnOn = !this.state[control];\n\n      let existingStream = (this.state.streamElements[control] && this.state.streamElements[control][1]) || null; \n      let stream;\n      switch(control){\n          case \"screenshare\":\n                stream = turnOn ? await this.broadcastClient.requestUserStream(control) \n                                    : await this.broadcastClient.removeStream(existingStream);\n                this.updateStreamElements(control, stream, defaultDimensions[control]);\n                this.setState({screenshare: turnOn});\n                break;\n          case \"webcam\":\n                stream = turnOn ? await this.broadcastClient.requestUserStream(control) \n                                    : await this.broadcastClient.removeStream(existingStream);\n                                    \n                this.updateStreamElements(control, stream, defaultDimensions[control]);\n                this.setState({webcam:turnOn});\n                break;\n           case \"audio\":\n                stream = turnOn ? await this.broadcastClient.requestUserStream(control) \n                                    : await this.broadcastClient.removeStream(existingStream);\n\n                this.updateStreamElements(control, stream, defaultDimensions[control]);\n                this.setState({audio:turnOn});\n                break;\n            default: break;\n      }\n  }\n  renderConsole = () =>{\n      return (\n          <div>\n              {this.state.broadcastEvents.map(event=>{\n                  let msg;\n                  if(typeof event===\"object\"){\n                      msg=JSON.stringify(event);\n                  }else{\n                     msg = event;\n                  }\n                  return (<p>{msg}</p>)\n              })}\n          </div>\n      )\n\n  }\n\n  startBroadcasting = async ()=>{\n      var channelName = this.channelName\n      if(!this.channelName){\n        this.channelName=prompt(\"What channel name do you want?\");\n      }\n      if(!this.channelName){\n          return;\n      }\n      var r = window.confirm(\"Start broadcasting at https://grepawk.com/c/\"+channelName+\" now?\");\n\n    if(r){\n        this.broadcastClient.startBroadcast(channelName);\n        Object.values(this.state.streamElements).forEach((streamElements)=>{\n            if(streamElements[1]!==null){\n                this.broadcastClient.addStream(streamElements[1],streamElements[2]);\n            }\n        })\n        this.setState({broadcasting:true});\n     }\n\n  }\n  stopBroadcasting = ()=>{\n    this.setState({broadcasting:false});\n  }\n\n  renderControls = () => {\n    return (\n        <ul className=\"list-group controls\">\n            {\n                [\"screenshare\",\"webcam\",\"audio\"].map(control=>{\n                    var isOn = this.state[control];\n                    var text = isOn ? control+\" off\" : control;\n                    var btnClass = isOn ? \"btn btn-secondary\" : \"btn btn-primary\";\n                    return(\n                        <li className=\"list-group-item\">\n                            <button className={btnClass} onClick={()=>{this.controlClicked(control)}}>{text}</button>\n                        </li>\n                    )\n                })\n            }\n                            \n        </ul>\n    );\n  };\n\n  renderHeader=()=>{\n      return(\n        <div className='header'>\n                {this.state.broadcasting === false\n                ? <a href='javascript://' onClick={this.startBroadcasting}>Start Broadcast  </a>\n                : <a href='javascript://' onClick={this.stopBroadcasting} >Stop Broadcast</a>}\n           \n        </div>\n      )\n  }\n  render() {\n    return (\n      <Window\n        className=\"stream\"\n        title={this.props.title}\n        pid={this.props.pid}\n        ipc={this.props.ipc}\n        draggable={false}\n      >\n        {this.state.flashMessage ? <div>{this.state.flashMessage}</div> : null}\n        <div className=\"obs\">\n            {this.renderHeader()}\n                \n            {this.renderControls()}\n            <div className='preview' ref={this.previewDiv}>\n                {this.renderPreview()}\n            </div>\n            <div className=\"console\">{this.renderConsole()}</div>\n\n          <div className=\"objectives\">{this.renderObjectives()}</div>\n        </div>\n      </Window>\n    );\n  }\n}\nexport default Broadcast;\n","const signalServerURL = window.location.hostname == 'localhost' ? \"ws://localhost:9091\" : \"wss://grepawk.com/signal\";\nconst peerRTCConfig = {\n    'RTCIceServers': [{\n        'url': 'stun:stun.l.google.com:19302'\n    }]\n}\n\nfunction BroadcastViewerClient(config){\n    const hostname = config.hostname || signalServerURL;\n    let onEvent = config.onEvent || console.log;\n    let mediaObjectReady = config.mediaObjectReady;\n    let mediaObjectOffline = config.mediaObjectOffline;\n    let signalConnection;\n    let clientConnection;\n    let remoteTracks={};\n    let remoteTrackMetaData={};\n    let metadataChannel;\n    let host_uuid;\n    function watchChannel(channelName){\n        signalConnection = new WebSocket(hostname);\n        signalConnection.onopen = function (e) {\n            signalConnection.send(JSON.stringify({\n                type: \"watch_stream\",\n                channel: channelName\n            }))\n\n            signalConnection.onmessage = function (event) {\n                let data = JSON.parse(event.data);\n                onEvent(\"Signal Server msg type \"+data.type);\n                switch (data.type) {\n                    case 'offer':\n                        onEvent(\"got offer: host_uuid=\", data.host_uuid);\n                        gotSDP(data.offer, data.host_uuid);\n                        break;\n                    case 'candidate':\n                        onEvent(\"got candidate\");\n                        clientConnection.addIceCandidate(data.candidate);\n                        break;\n\n                    case 'error':\n                        onEvent(\"Error: \"+data.message);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    \n    async function gotSDP(offer, hostId) {\n        host_uuid = hostId;\n        clientConnection = new RTCPeerConnection(peerRTCConfig);\n        clientConnection.ondatachannel=function(evt){\n            evt.channel.onopen=()=>onEvent(\"metadata channel on client open\");\n            evt.channel.onmessage=(e)=>{\n                onEvent(\"got metadata \"+e.data);\n                let data = JSON.parse(e.data);\n                if(data.type=='mediaMetadata'){\n                    let mediaDescriptors = data.data;\n                    mediaDescriptors.forEach(trackMetaData=>{\n                      let trackId =   trackMetaData.trackId;\n                      remoteTrackMetaData[trackId]=trackMetaData;\n                    });\n                }\n                showRemoteTracks();\n            }\n        }\n\n        function showRemoteTracks(){\n            onEvent(\"showing remote tracks: \"+Object.keys(remoteTrackMetaData).length);\n            for(let trackId in remoteTrackMetaData){\n                let metadata = remoteTrackMetaData[trackId];\n                if(remoteTracks[trackId]){\n                    let stream = new MediaStream();\n                    stream.addTrack(remoteTracks[trackId]);\n                    mediaObjectReady(trackId, stream,remoteTracks[trackId].kind, metadata.dimensions);\n                    onEvent(\"showing tracking \");\n                }else{\n                    onEvent(\"Got meta data but not track\")\n                }\n\n            }\n        }\n        \n        clientConnection.onicecandidate = (e) => {\n            onEvent(\"client on ice candidate \", e);\n            if (e.candidate) {\n                signalConnection.send(JSON.stringify({\n                    type: \"candidate\",\n                    to_uuid: host_uuid,\n                    candidate: e.candidate\n                }))\n            }\n        }\n\n        clientConnection.ontrack = (e) => {\n            if(e.track){\n                remoteTracks[e.track.id]=e.track;\n            }\n            showRemoteTracks();\n        }\n\n        await clientConnection.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await clientConnection.createAnswer();\n        clientConnection.setLocalDescription(answer);\n        signalConnection.send(JSON.stringify({\n            type: \"answer\",\n            to_uuid: host_uuid,\n            answer: answer\n        }))\n    }\n    return {\n        watchChannel: watchChannel\n    }\n}\n\nexport default BroadcastViewerClient;","import React from \"react\";\nimport Window from \"../components/Window\";\nimport MediaObject from \"./MediaObject\";\nimport BroadcastViewerClient from \"./BroadcastViewerClient\";\nimport \"./Watch.css\";\n\nclass Watch extends React.Component {\n    state={\n        broadcastEvents:[],\n        media:{}\n    }\n\n    constructor(props){\n        super(props);\n        this.broadcastViewerClient = BroadcastViewerClient({\n            channelName:        this.props.channelName,\n            onEvent:            this.onBroadcastEvent,\n            mediaObjectReady:   this.mediaObjectReady,\n            mediaObjectOffline: this.mediaObjectReady\n        });\n    }\n\n    mediaObjectReady=(trackId, stream, type, dimensions)=>{\n       let _objs = this.state.media;\n       _objs[trackId] = [type, stream, dimensions];   \n       this.setState({media: _objs});\n    }\n\n    mediaObjectOffline=(trackId)=>{\n        let _objs = this.state.media;\n        delete _objs[trackId];\n        this.setState({media: _objs});\n    }\n\n  onBroadcastEvent = (event)=>{\n      let events = this.state.broadcastEvents;\n      events.push(event);\n      this.setState({broadcastEvents:events});\n  }\n\n  componentDidMount() {\n      this.broadcastViewerClient.watchChannel(this.props.channelName);\n  }\n\n  renderStream = () =>{\n      const parts = Object.keys(this.state.media);\n     console.log(\"Rendering \"+parts.length+\" stream parts\");\n      return (\n            <div className='stream-content'>\n                {\n                   parts.map((part,idx)=>{ \n                        return (<MediaObject key={idx} notDraggable={true} \n                                mediaObject={this.state.media[part]}></MediaObject>)\n                    })\n                }   \n            </div>         \n      )\n  }\n\n\n  renderConsole = () =>{\n      return (\n          <div className='console-watcher'>\n              {this.state.broadcastEvents.map((event,idx)=>{\n                  let msg;\n                  if(typeof event===\"object\"){\n                      msg=JSON.stringify(event);\n                  }else{\n                     msg = event;\n                  }\n                  return (<p key={idx}>{msg}</p>)\n              })}\n          </div>\n      )\n\n  }\n  render() {\n    return (\n      <Window\n        className=\"watch-stream\"\n        title={this.props.title}\n        pid={this.props.pid}\n        ipc={this.props.ipc}\n        draggable={false}   \n      >\n      <div key='rr' className='stream-wrapper'>\n        {this.renderStream()}\n        {this.renderConsole()}\n      </div>\n      </Window>\n    );\n  }\n}\nexport default Watch;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport \"./AppIconGrid.css\"\n\nconst icons_per_column = 5;\n\n\nclass AppIconGrid extends React.Component{\n    constructor(props){\n        super(props);\n        this.iconClicked = this.iconClicked.bind(this);\n    }\n\n    iconClicked(idx){\n        var icon = this.props.icons[idx];\n        this.props.ipc(icon.cmd, icon.args);\n    }\n    render(){\n        return(\n            <div className='app-icon-grid'>\n                {this.props.icons.map((icon,index)=>{\n                    const row = (index+1) % icons_per_column;\n                    const col = Math.floor((index+1) / icons_per_column);\n                    const iconStyle ={\n                        gridColumnStart:col,\n                        gridColumnEnd: col+1,\n                        gridRowStart:row,\n                        gridRowEnd:row+1,\n                        width:50,\n                        height:50,\n                        borderColor:\"black\",\n                        borderWidth:2\n                       // backgroundColor:\"#D3D3D3\"\n                    }\n             \n                    return (\n                        <div key={\"icon\"+index} \n                            style={iconStyle} \n                            onClick={()=>{\n                                this.iconClicked(index);\n                            }}\n                        >\n                            <i className={\"fas fa-lg fa-\"+icon.name}></i><br></br>{icon.title}\n                        </div>\n                        )\n                })}\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default AppIconGrid;","import React from 'react'\nimport './App.css'\nimport Terminal from './Terminal'\nimport HUD from \"./HUD\";\nimport ListView from \"./components/ListView\"\nimport Camera from \"./Camera\"\nimport Broadcast from \"./Broadcast/Broadcast\"\nimport Watch from \"./Broadcast/Watch\"\n\nimport AppIconGrid from './AppIconGrid';\n\nclass Desktop extends React.Component{\n    state={\n        processes:[{name:\"tty\", state:\"on\"}],\n        userInfo:{name:\"guest\",xp:0,gold:0},\n        quests:[],\n        icons:[\n            {name:\"terminal\",title:\"terminal\",cmd:\"tty\", args:[]},\n            {name:\"broadcast-tower\",title:\"Broadcast\", cmd:\"stream\", args:[]},\n            {name:\"play-circle\",title:\"Watch Hearthstone\", cmd:\"watch\", args:[\"rank_5_rogue\"]},\n            {name:\"play-circle\",title:\"Watch WoW\", cmd:\"watch\", args:[\"asmongold\"]}\n          ]\n    }\n    constructor(props){\n        super(props);\n        this.ipc = this.ipc.bind(this);\n    }\n\n    componentDidMount(){\n        if(window.location.search){\n            var t = window.location.search.replace(\"?\",\"\").split(\"/\");\n            const cmd = t[0];\n            const args = t.splice(1);\n            this.ipc(cmd, args);\n        }\n    }\n\n    ipc(cmd, args){\n        switch(cmd){\n            case \"close\":\n                const pid = args[0];\n                const list = this.state.processes;\n                list[pid]=\"closed\";\n                this.setState({processes:list});\n            break;\n            case \"cam\":\n            case \"camera\":\n               var plist = this.state.processes.concat({\"name\":\"camera\"});\n               this.setState({processes:plist});\n                break;\n            case \"broadcast\":\n            case \"stream\":\n                var plist = this.state.processes.concat({\"name\":\"stream\",\"args\":args});\n                this.setState({processes:plist});\n                break; \n            case \"watch\":\n                var plist = this.state.processes.concat({\"name\":\"watch\",\"args\":args});\n                this.setState({processes:plist});\n                break;\n            case \"tty\":\n                var plist = this.state.processes.concat({\"name\":\"tty\",\"args\":args});\n                this.setState({processes:plist});\n                break;\n            case \"hud-update\":\n                this.setState({userInfo:args});\n            break;\n            case \"questlist\":\n                this.setState({quests:args});\n            break;\n        }\n    }\n\n    renderBody(){\n       \n        return(\n            this.state.processes.map((proc,pid)=>{\n                console.log(proc,pid);\n                if(proc.state==='off') return null;\n                if(proc.name === 'tty'){\n                    return (\n                        <Terminal key='tty1' pid={pid} title='tty' ipc={this.ipc}/>\n                    );\n                }else if(proc.name==='camera'){\n                    return (\n                        <Camera userInfo={this.state.userInfo} pid={pid} title='Face 2 Face' ipc={this.ipc} />\n                    );\n                }else if(proc.name===\"stream\"){\n                    return (\n                        <Broadcast args={proc.args} channel={proc.args[0] || \"\"} pid={pid} title=\"Broadcast\" ipc={this.ipc} />\n                    )\n                }\n                else if(proc.name===\"watch\"){\n                    var channelName = proc.args[0] || \"default\";\n                    return (\n                        <Watch userInfo={this.state.userInfo} channelName={channelName} pid={pid} title=\"Watch\" ipc={this.ipc} />\n                    )\n                }\n            })\n        )\n    }\n    renderHud(){\n        return this.state.userInfo ? \n            (<HUD username={this.state.userInfo.username}\n                cwd={this.state.userInfo.cwd}\n                fname={this.state.userInfo.fname}\n                xp={this.state.userInfo.xp} \n                gold={this.state.userInfo.gold} />)\n            : null;\n    }\n    renderQuestView(){\n        return(\n            <ListView className=\"quest-list\" title=\"quests\" list={this.state.quests} />\n        )\n    }\n    renderBackground(){\n        return(\n            <AppIconGrid icons={this.state.icons} ipc={this.ipc}></AppIconGrid>\n        )\n    }\n    render(){\n        return (\n            <div className='desktop'>\n                <nav className='navbar navbar-light bg-light'>\n                    <a className=\"navbar-brand\" href=\"#\">GrepAwk</a>\n                    {this.renderHud()}\n                </nav>\n                {this.renderBackground()}\n                {this.renderBody()}\n                {this.renderQuestView()}\n                \n            </div>\n        )\n    }\n}\nexport default Desktop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import * as serviceWorker from './serviceWorker';\nimport Desktop from './Desktop'\n\nReactDOM.render(<Desktop />, document.getElementById('root'));\n//serviceWorker.unregister();\n"],"sourceRoot":""}