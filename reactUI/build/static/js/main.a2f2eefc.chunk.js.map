{"version":3,"sources":["components/Window.js","components/Table.js","Terminal.js","HUD.js","components/ListView.js","Video.js","Camera.js","Model/SignalClient.js","Broadcast/MediaObject.js","Broadcast/BroadcastClient.js","Broadcast/index.js","Watch.js","AppIconGrid.js","Desktop.js","index.js"],"names":["Window","props","state","minimized","maximized","closed","onNavBarClick","e","mode","target","className","setState","ipc","pid","renderNavTop","onClick","title","this","boxClass","draggable","children","React","Component","HtmlToReactParser","require","Parser","Table","renderHeaders","headers","key","map","header","i","renderBody","rows","row","rn","html","val","td_val","forEach","opt","cmd","desc","htmlToReactParser","parse","border","socket","node_ws_url","window","location","hostname","getUUID","uuid","localStorage","getItem","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","generateUUID","setItem","Terminal","output_rows","output_cursor_position","initSocket","Promise","resolve","reject","readyState","WebSocket","OPEN","CONNECTING","onAddOutputRow","type","data","onopen","clearTimeout","timeoutId","send","setTimeout","list","concat","parseAPIResponse","stdout","stderr","table","userInfo","quests","hint","renderOutputRow","style","color","disabled","value","keyboardLoaded","focus","windowLoaded","document","getElementsByClassName","scrollTo","offsetHeight","keyboardPressed","keyCode","locallyProcessed","renderInputBar","onLoad","onKeyDown","size","id","autoComplete","clickOnTerminal","getElementById","scrollToBottom","messagesEnd","scrollIntoView","behavior","onmessage","event","image","Image","src","URL","createObjectURL","startsWith","JSON","terminalDidMount","cmd_str","t","split","args","splice","ref","el","hudStyle","float","marginRight","HUD","fname","username","cwd","xp","points","ListView","item","description","Video","video","srcObject","media","width","height","muted","autoPlay","defaultProps","signal_connection","rtcConn","peerRTCConfig","optional","Camera","enteredRoom","signalConnected","videoOn","audioOn","flashMessage","error","myStream","room","isHost","remoteStreams","joinRoom","a","stringify","channel","initiateRTCPeerConnection","RTCPeerConnection","ontrack","streams","tracklist","onicecandidateerror","message","onicecandidate","candidate","onLoggedInWithSignalServer","usersCount","onnegotiationneeded","createOffer","then","setLocalDescription","offer","catch","alert","getTracks","track","addTrack","channelJoined","onReceivedRemoteConnectionOffer","setRemoteDescription","RTCSessionDescription","createAnswer","answer","caller_id","console","log","onReceivedConnectionRequestResponse","sdp","navigator","mediaDevices","getDisplayMedia","stream","onReceivedICECandidate","addIceCandidate","name","chatRoomChanged","audioCheckBoxChanged","videoCheckBoxChanged","gotMyStream","renderLobby","onChange","checked","renderRoom","remoteStream","onClosed","videoRef","createRef","msg","signalServerURL","SignalClient","_channelName","_rtcConn","_remoteConnection","onMessageHandlers","socketOnMessage","response","Object","keys","init","onerror","sendSocketJson","jsonObj","watchStream","channelName","ok","remoteDescription","Error","startStream","streamSource","querySelector","screenCaptureStream","_localStream","MediaObject","renderVideo","renderAudio","streamType","mediaObject","dimensions","divStyle","position","left","top","BroadcasterClient","config","signalConnection","host_uuid","onEvent","peerConnections","tracks","updateTrackForPeers","values","client","updateTracks","requestStream","getUserMedia","audio","addStream","existing","_track","idx","push","removeStream","stop","startBroadcast","client_uuid","peerConnection","to_uuid","evt","trackMap","set_sdp_anwser","BroadcasterRTCConnection","user_join_request","user_sent_sdp_answser","user_sent_peer_ice_candidate","json","defaultDimensions","screenshare","webcam","textBanner","Broadcast","streamElements","broadcasting","broadcastEvents","onBroadcastEvent","events","updateStreamElements","cstate","broadcastClient","renderObjectives","renderPreview","parts","part","controlClicked","control","turnOn","existingStream","renderConsole","startBroadcasting","stopBroadcasting","renderControls","isOn","text","btnClass","BroadcastClient","previewDiv","Watch","streamLoaded","streamURI","length","AppIconGrid","iconClicked","bind","icon","icons","index","col","iconStyle","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","borderColor","borderWidth","Desktop","processes","gold","push_proc","proc","hash","plist","href","renderHud","renderBackground","renderQuestView","ReactDOM","render"],"mappings":"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","file":"static/js/main.a2f2eefc.chunk.js","sourcesContent":["import React from 'react'\nimport './Window.css';\nimport Draggable from 'react-draggable'; // The default\n\n\n\nclass Window extends React.Component{\n    state ={\n        minimized:false,\n        maximized:false,\n        closed:false\n    }\n    constructor(props){\n        super(props)\n    }\n    onNavBarClick=(e)=>{\n        const mode = e.target.className;\n        if(mode==='maximize'){\n            this.setState({maximized:!this.state.maximized});\n        }else if(mode==='minimize'){\n            this.setState({minimized:!this.state.minimized});\n        }else if(mode==='close'){\n            this.setState({closed:true});\n            this.props.ipc(\"close\", [this.props.pid]);\n        }\n    }\n    renderNavTop=()=>{\n        return (\n        <div className='title'>\n            <button className='close' onClick={this.onNavBarClick}>x</button>\n            <button className='maximize' onClick={this.onNavBarClick}>[]</button>\n            <button className='minimize' onClick={this.onNavBarClick}>_</button>\n            <p className='title'>{this.props.title}</p>\n        </div>\n        )\n    }\n\n    render(){\n        if(this.state.closed) return null;\n        var boxClass=\"\";\n        if(this.state.minimized){\n            boxClass=\"box box-minimized\"\n        }else if(this.state.maximized){\n            boxClass='box box-full';\n        }else{\n            boxClass='box';\n        }    \n        boxClass= (this.props.className ||\"\")+\" \" + boxClass;  \n\n        const draggable = this.props.draggable && true; \n        if(draggable===false){\n            return (   \n            <div className={boxClass}>\n                {this.renderNavTop()}\n                <div className=\"body\">\n                    {this.props.children}\n                </div>\n            </div>)\n        }\n\n        return (\n            <Draggable>\n                <div className={boxClass}>\n                    {this.renderNavTop()}\n                    <div className=\"body\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </Draggable>\n      ) \n    }\n}\n\nexport default Window;","import React from 'react';\nvar HtmlToReactParser = require('html-to-react').Parser;\n\nclass Table extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    renderHeaders=()=>{\n        if(!this.props.headers) return null;\n        return (\n            <thead>\n                <tr key={'tbtrh1'}>    \n                {this.props.headers.map((header,i)=>{\n                    return (<th key={\"th\"+i}>{header}</th>)\n                })}\n\n                </tr>\n            \n            </thead>\n        )\n    }\n    renderBody=()=>{\n        if(!this.props.rows) return null;\n        return (\n            <tbody>\n{           this.props.rows.map((row,rn)=>{\n                var html=\"\";\n                this.props.headers.map((header)=>{\n                    var val = row[header] || \"\";\n                    var td_val = \"\"\n                    if (header == \"opts\") {\n                      val.forEach((opt, i) => {\n                        td_val += `<a style='color:yellow' href='#' class='onclick_cmd' cmd='${opt.cmd}'>${opt.desc}</a>`;\n                      })\n                      html+=\"<td>\"+td_val+\"</td>\";\n                    }else if (header === 'thumbnail') {\n                        var img_url = val;\n                        html += \"<td><img width=120 src='\" + img_url + \"'></td>\";\n                    } else {\n                        html += \"<td>\" + val + \"</td>\";\n                    }\n                })\n                var htmlToReactParser = new HtmlToReactParser();\n\n                return (<tr key={\"tr \"+rn}>{htmlToReactParser.parse(html)}</tr>)\n            })\n        }\n             </tbody>\n        )        \n\n    }\n    render(){\n        return(<table className={this.props.className || \"table\"} border=\"1\">\n            {this.renderHeaders()}\n            {this.renderBody()}\n        </table>)\n    }\n}\nexport default Table;","import React from 'react'\nimport Window from './components/Window'\nimport './Terminal.css'\nimport Table from './components/Table'\n\nvar socket=null;\nconst node_ws_url = window.location.hostname == 'localhost' ?\n\"ws://localhost:8081\" : \"wss://grepawk.com/ws\";\n\nclass Terminal extends React.Component{\n    state={\n       socket,\n       output_rows:[],\n       output_cursor_position:0,\n       uuid: getUUID()\n    }\n\n    constructor(props){\n        super(props)\n    }\n    initSocket=()=>{\n        return new Promise((resolve, reject) => {\n            if (socket && socket.readyState === WebSocket.OPEN) {\n              resolve();\n              return;\n            }\n            if (socket && socket.readyState === WebSocket.CONNECTING) {\n              this.onAddOutputRow({type:\"text\",data:\"Connecting..\"});\n              resolve();\n              return;\n            } \n            socket = new WebSocket(node_ws_url);\n            socket.onopen = e => {\n              clearTimeout(timeoutId);\n              socket.send(\"check-in \" + this.state.uuid);\n              resolve();\n            }\n            var timeoutId=setTimeout(() => {\n                if(socket.readyState!==WebSocket.OPEN){\n                   // reject(new Error(\"connection timed outt\"));\n                }\n            }, 5000);\n          })\n    }\n    onAddOutputRow=(row)=>{\n        const list = this.state.output_rows.concat(row);\n        this.setState({output_rows:list});\n    }\n    parseAPIResponse=(data)=>{\n        if(data.stdout){\n            this.onAddOutputRow({type:\"text\",data:data.stdout})\n        }\n        if(data.stderr){\n            this.onAddOutputRow({type:\"text\",data:data.stderr})\n        }\n        if(data.table){\n            this.onAddOutputRow({type:\"table\",data:data.table})\n        }\n        if(data.userInfo){\n           // this.onAddOutputRow({type:\"text\",data: JSON.stringify(data)})\n            localStorage.setItem(\"uuid\", data.userInfo.uuid);\n            this.props.ipc(\"hud-update\",data.userInfo);\n        }\n        if(data.quests){\n            this.props.ipc(\"questlist\", data.quests);\n        }\n        if(data.hint){\n            //todo\n        }\n    }\n    \n   async componentDidMount(){\n        await this.initSocket();\n        socket.onmessage=(event)=>{\n            if (typeof event.data === 'object') {\n                var image = new Image();\n                image.src = URL.createObjectURL(event.data);\n                this.onAddOutputRow({type:\"image\",data:image})\n            } \n            else if (event.data && event.data.startsWith(\"stdout: \")) {\n                var stdout = event.data.replace(\"stdout: \", \"\");\n                this.onAddOutputRow({type:\"text\",data:stdout})\n            }else if (event.data && event.data.startsWith(\"stderr: \")) {\n                var stdout = event.data.replace(\"stderr: \", \"\");\n                this.onAddOutputRow({type:\"text\",data:stdout})\n            }else{\n                this.parseAPIResponse(JSON.parse(event.data));\n            }\n        }\n       window.terminalDidMount();\n    }\n\n    renderOutputRow=(row,i)=>{\n        switch(row.type){\n            case 'stdout':\n            case 'text':\n                return (<pre key={\"op-\"+i}> {row.data}</pre>)\n            case 'stderr':\n                var redStyle={color:\"red\"};\n                return (<pre key={\"op-\"+i}> <span style={redStyle}>{row.data}</span></pre>)\n            case 'stdin':              \n                return (<div className='input-line' key={\"op-\"+i}><div className='prompt'>$</div> \n                   <input className='cmdline input-line' disabled  value={row.data} /></div>);\n            case 'table':\n                 return(<div key={\"op-\"+i}><Table className=\"table table-dark\" headers={row.data.headers} rows={row.data.rows}></Table></div>)\n            break;\n        }\n    }\n    keyboardLoaded=(e)=>{\n      e.target.focus();\n    }\n    windowLoaded=(e)=>{\n       document.getElementsByClassName(\"terminal-body\").scrollTo(0,100);\n        e.target.offsetHeight=1000;\n    }\n\n    locallyProcessed(cmd_str){\n        if(!cmd_str) return false;\n\n        var t = cmd_str.split(\" \");\n        const cmd = t[0];\n        const args = t.splice(1);\n        switch(cmd){\n            case 'cam':\n            case 'upload':\n            case 'new':\n            case 'stream':\n            case 'broadcast':\n            case 'draw':\n            case 'watch':\n                this.props.ipc(cmd,args);\n                return true;\n            default:\n                return false;\n        }\n\n    }\n    keyboardPressed=(e)=>{\n        if(e.keyCode==13){ //enter\n            this.onAddOutputRow({type:\"stdin\",data:e.target.value});\n            if(!this.locallyProcessed(e.target.value)){\n                socket.send(e.target.value);\n            }\n            e.target.value=\"\";\n        }\n    }\n\n    renderInputBar = () => {\n        return (<div className='input-line'>\n                    <div className='prompt'>$</div>\n                    <input onLoad={this.keyboardLoaded}\n                           onKeyDown={this.keyboardPressed}\n                           size='80' \n                           id=\"terminal_input\"\n                           autoComplete=\"off\"\n                           className='cmdline input-line' />\n                </div>\n                )\n    }\n\n    clickOnTerminal=(e)=>{\n          document.getElementById(\"terminal_input\").focus();;\n    }\n\n\n    render(){\n        return (<Window className=\"terminal\" title={this.props.title} pid={this.props.pid} ipc={this.props.ipc}>\n            <div className='terminal-body' onClick={this.clickOnTerminal}>\n            {this.state.output_rows.map((row,i)=>{\n                return this.renderOutputRow(row,i);\n            })}\n            {this.renderInputBar()}\n            <div className=\"terminal-anchor\" ref={(el) => { this.messagesEnd = el; }}> </div>\n            </div>\n        </Window>) \n    }\n    componentDidUpdate() {\n        this.scrollToBottom();\n      }\n      scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n}\n\nfunction generateUUID() { // Public Domain/MIT\n    var d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\n        d += performance.now(); //use high-precision timer if available\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nfunction getUUID()  {\n    var uuid = localStorage.getItem(\"uuid\") \n    if(uuid) return uuid;\n\n    uuid = generateUUID();\n    localStorage.setItem(\"uuid\",uuid);\n}\nexport default Terminal;","import React from 'react'\nconst hudStyle={\n  float:'right',\n  marginRight:\"15px\"          \n}\nclass HUD extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    \n    render(){\n        return(\n            <span style={hudStyle} className=\"HUD\">\n                Name: {this.props.fname || this.props.username || \"guest\"}, \n                Location: {this.props.cwd ||\"root\"},\n                XP Level:{this.props.xp || 0}, \n                Gold:{this.props.points||0}\n            </span>\n        )\n    }\n}\n\nexport default HUD;","import React from 'react';\nclass ListView extends React.Component{\n    render(){\n        return (\n            <div className={this.props.className}>\n                <h5>{this.props.title}</h5>\n                <ul>\n                    {this.props.list && this.props.list.map ? this.props.list.map((item, i) => {\n                        return (\n                            <li key={\"list-\" + i}>\n                                <h5 className=\"list-header\">{item.title}</h5>\n                                <div className=\"list-body\">{item.description}</div>\n                            </li>\n                        )\n                    }):null}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ListView;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nclass Video extends React.Component {\n  componentDidMount() {\n    this.video.srcObject = this.props.media;\n  }\n\n  shouldComponentUpdate(props) {\n    return this.props.media !== props.media;\n  }\n\n  componentDidUpdate() {\n    this.video.srcObject = this.props.media;\n  }\n\n  render() {\n    const { width, height, muted, children } = this.props;\n\n    return (\n      <video\n        height={height}\n        width={width}\n        muted={muted}\n        autoPlay\n        ref={(video) => { this.video = video; }}\n      >\n        {children}\n      </video>\n    );\n  }\n}\n\nVideo.defaultProps = {\n  children: null,\n  height: 420,\n  width: 640,\n  muted: true,\n  media: null,\n};\n\nVideo.propTypes = {\n  children: PropTypes.element,\n  media: PropTypes.shape(\n    {\n      active: PropTypes.bool,\n      ended: PropTypes.bool,\n      id: PropTypes.string,\n    },\n  ),\n  muted: PropTypes.bool,\n};\n\nexport default Video;\n","import React from 'react'\nimport Window from './components/Window'\nimport Video from \"./Video\";\n\nconst lobbyStyle={\n\n}\n\nconst signal_url=\"ws://localhost:9090\";\nvar signal_connection, rtcConn;\n\n\nconst peerRTCConfig = {\n    'RTCIceServers': [{\n          'url': 'stun:stun.l.google.com:19302'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=udp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=tcp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       }\n    ],\n    optional: [{\n       'DtlsSrtpKeyAgreement': true\n    }]\n\n }\n\n \nclass Camera extends React.Component{\n    constructor(props){\n        super(props);\n        this.videoRef = React.createRef();\n    }\n    state={\n        enteredRoom: false,\n        signalConnected:false,\n        videoOn:true,\n        audioOn: true,\n        flashMessage:\"\",\n        error:null,\n        myStream: null,\n        room: this.props.room || \"default\",\n        isHost:null,\n        remoteStreams:[]\n    }\n\n    async componentDidMount(){\n        signal_connection = new WebSocket(signal_url);\n        signal_connection.onopen=(e)=>{\n            this.setState({signalConnected:true});\n        };\n        signal_connection.onmessage=(msg)=>{\n            try{\n                var data = JSON.parse(msg.data);\n                console.log(\"signal on msg \", msg);\n                if (data.type === 'login') {\n                    this.onLoggedInWithSignalServer(data);\n                }\n                else if (data.type === 'offer') {\n                    debugger;\n                    if(data.offer.sdp){\n                        this.onReceivedRemoteConnectionOffer(data);\n\n                    }else{\n                        console.log(\"signal ret offer not contrain sdp\", data);\n                    }\n                }\n                else if (data.type === 'answer') {\n                    this.onReceivedConnectionRequestResponse(data);\n                }\n                else if(data.type==='candidate'){\n                    this.onReceivedICECandidate(data);\n                }else if(data.type==='error'){\n                    debugger;\n                    this.setState({flashMessage:data.message});\n                }\n    \n\n            }catch(e){\n                console.log(\"signal onmsg failed\", e);\n            }\n          \n        }\n       try{\n        var myStream = await navigator.mediaDevices.getDisplayMedia();\n        this.setState({myStream:myStream});\n       }catch(e){\n           this.setState({error:e.message});\n       }\n \n\n    }\n    componentWillUnmount(){\n        this.onClosed();\n    }\n\n    joinRoom=async()=>{\n        this.setState({enteredRoom:true});\n        signal_connection.send(JSON.stringify({ type: 'login', channel: this.state.room, uuid: this.props.userInfo.uuid }));\n    }\n\n    initiateRTCPeerConnection=()=>{\n        rtcConn = new RTCPeerConnection(peerRTCConfig);\n\n        rtcConn.ontrack=(e)=>{\n            if(e.streams && e.streams[0]){\n                const tracklist = this.state.remoteStreams.concat(e.streams[0]);\n                this.setState({remoteStreams:tracklist});\n            }\n        }\n        rtcConn.onicecandidateerror=(e)=>{\n            this.setState({flashMessage:e.message});\n        }\n        rtcConn.onicecandidate = (event)=>{\n            if (event.candidate!=null) {\n                signal_connection.send(JSON.stringify({\n                  type: \"candidate\",\n                  candidate: event.candidate,\n                  channel:this.state.room\n               }))\n            }\n         }\n         return  rtcConn;\n    }\n\n    onLoggedInWithSignalServer=(data)=>{\n        this.setState({signalConnected:true});\n        if(data.usersCount==1){\n            this.setState({flashMessage:\"Joined channel \"+data.channelJoined+\". Only you here.\"});\n            return;\n        }\n        this.initiateRTCPeerConnection();\n\n        rtcConn.onnegotiationneeded = (e)=>{\n            rtcConn.createOffer().then(desc=>{\n                rtcConn.setLocalDescription(desc);\n                signal_connection.send(JSON.stringify({\n                    type: 'offer',\n                    offer: desc,\n                    channel: this.state.room\n                 }));\n            }).catch(e=>{\n                debugger;\n                alert(e.message);\n            })\n           \n        }\n        this.state.myStream.getTracks(track=>{\n            rtcConn.addTrack(track,this.state.myStream);\n        })\n\n        rtcConn.createOffer().then(desc=>{\n            rtcConn.setLocalDescription(desc);\n            signal_connection.send(JSON.stringify({\n                type: 'offer',\n                offer: desc,\n                channel: this.state.room\n             }));\n        }).catch(e=>{\n            alert(e.message);\n        })\n    }\n\n    onReceivedRemoteConnectionOffer=(data)=>{\n         this.initiateRTCPeerConnection();\n        rtcConn.setRemoteDescription(new RTCSessionDescription(data.offer)).then(() => {\n                this.state.myStream.getTracks().forEach(track=>{\n                    rtcConn.addTrack(track,this.state.myStream);\n                })\n            }).then(()=>{\n                return rtcConn.createAnswer();\n            }).then((answer)=>{\n                rtcConn.setLocalDescription(answer);\n                return answer;\n            }).then((answer)=>{\n                signal_connection.send(JSON.stringify({\n                    type: 'answer',\n                    answer: answer,\n                    channel: data.channel,\n                    uuid: data.caller_id\n                }));\n            }).catch(e=>{\n                console.log(e);\n                this.setState({flashMessage:e.message+\" on receive remote errored\"});\n            })\n    }\n\n    onReceivedConnectionRequestResponse=(data)=>{\n        if(data.answer.sdp){\n\n            rtcConn.setRemoteDescription(data.answer).then(function(){\n                return navigator.mediaDevices.getDisplayMedia();\n            }).then((stream)=>{\n                stream.getTracks().forEach(track=>rtcConn.addTrack(track,stream));\n            })    \n         }\n    }\n    onReceivedICECandidate=(data)=>{\n        rtcConn.addIceCandidate(data.candidate).catch(e => {\n            console.log(\"Failure during addIceCandidate(): \" + e.name);\n        });\n    }\n    chatRoomChanged=(e)=>{\n        const value = e.target.value;\n        this.setState({'room':value});\n    }\n    audioCheckBoxChanged=(e)=>{\n        this.setState({'audioOn':e.target.value});\n    }\n    videoCheckBoxChanged=(e)=>{\n        this.setState({'videoOn':e.target.value});\n    }\n\n    gotMyStream=(stream)=>{\n        this.setState({'myStream':stream});\n    }\n    renderLobby=()=>{      \n        return (\n            <div className='cam-lobby'>\n                <p>{this.state.flashMessage}</p>\n                <Video width={300} media={this.state.myStream}></Video>\n                <p>Join Room: <input   id='join_room_name' onChange={this.chatRoomChanged} value={this.state.room} type='text' size='50'></input></p>\n                <p>Audio: <input id='join_room_audio' onChange={this.audioCheckBoxChanged} type='checkbox' checked /></p>\n                <p>Video: <input id='join_room_video'  onChange={this.videoCheckBoxChanged} type='checkbox' checked /></p>\n                <p><button onClick={this.joinRoom}>Go</button> </p>\n            </div>\n        )\n    }\n    renderRoom=()=>{\n        return (<div className='cam-room'>\n            <h3>Room {this.state.room}</h3> \n                <p>{this.state.flashMessage}</p>\n                <Video key=\"mstream\" width={200} height={100}  media={this.state.myStream}></Video>\n                {this.state.remoteStreams.map((remoteStream,i)=>{\n                    console.log(remoteStream);\n                    return ( <Video key={\"remote-stream-\"+i} width={100} height={100} media={remoteStream}></Video>)\n                })}            \n        </div>)\n    }\n    render(){\n        return (<Window className=\"camera\" title={this.props.title} pid={this.props.pid} ipc={this.props.ipc}>\n            {this.state.error!==null ? <div>Error: {this.state.error}</div>: \n                (this.state.signalConnected==false || this.state.myStream ==null) ? <div>Connecting..</div> : \n                   this.state.enteredRoom==false ? this.renderLobby() : this.renderRoom()}\n        </Window>)\n    }\n    onClosed=()=>{\n        //this.state.myStream.stop();\n    }\n\n}\nexport default Camera;","const peerRTCConfig = {\n    'RTCIceServers': [{\n          'url': 'stun:stun.l.google.com:19302'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=udp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       },\n       {\n          'url': 'turn:192.158.29.39:3478?transport=tcp',\n          'credential': 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n          'username': '28224511:1379330808'\n       }\n    ],\n    optional: [{\n       'DtlsSrtpKeyAgreement': true\n    }]\n }\n\n const signalServerURL = window.location.hostname == 'localhost' ?\n \"ws://localhost:9091\" : \"wss://grepawk.com/signal\";\n\nconst SignalClient=function(){\n    var socket;\n    var onMessageHandlers={}; //key-value pair so we can remove..\n    var socketOnMessage=(event)=>{\n        const response = JSON.parse(event.data);\n        Object.keys(onMessageHandlers).forEach((key)=>{\n            onMessageHandlers[key](response);\n        })\n    }\n    var init = function(){\n        return new Promise((resolve,reject)=>{\n            if(socket && socket.readyState===WebSocket.OPEN){\n                resolve();\n            }\n            socket = new WebSocket(signalServerURL);\n            socket.onopen=()=>{resolve()};\n            socket.onmessage=socketOnMessage;\n            socket.onerror=()=>{reject()};\n        })\n    }\n  \n    function sendSocketJson(jsonObj){\n        socket.send(JSON.stringify(jsonObj));\n    }\n    let _channelName; \n    let _localStream;\n    let _rtcConn;\n    let _remoteConnection;\n\n    return{    \n        watchStream: function(channelName, userInfo){\n            return new Promise(async (resolve,reject)=>{\n                await init();\n                _remoteConnection = new RTCPeerConnection(peerRTCConfig);\n                _remoteConnection.onicecandidate=(e)=>{\n                    console.log(\"on ice cand\");\n                }\n                _remoteConnection.onnegotiationneeded=(e)=>{\n                    console.log(\"remote conn neg needed\",e);\n                }\n                sendSocketJson({\"type\":\"watch_stream\",\"channelName\":channelName, userInfo:userInfo});\n                onMessageHandlers['watch_request_'+userInfo.uuid] = async function(response){\n                    if(response.ok && response.offer){             \n                        try{\n                            const remoteDescription = new RTCSessionDescription(response.offer);\n                            await _remoteConnection.setRemoteDescription(remoteDescription);\n                            const answer = await _remoteConnection.createAnswer();\n                            await _remoteConnection.setLocalDescription(answer);\n                            _remoteConnection.ontrack=(e)=>{\n                                debugger;\n                                if(e.stream && e.stream[0]){\n                                    resolve(e.stream);\n                                }\n                            }\n                            delete onMessageHandlers['watch_request_'+userInfo.uuid];\n                        }catch(e){\n                            reject(e);\n                        }\n                    }else{\n                        reject(new Error(\"Unexpected response from server \"+JSON.stringify(response)));\n                    }\n                }\n                setTimeout(function(){\n                   // reject(new Error(\"Connection timed out\"));\n                },15000);\n\n\n            });\n\n        },\n        startStream:  function(streamSource, channelName){\n            return new Promise(async (resolve,reject)=>{\n                await init();\n                _channelName = channelName;\n                _rtcConn = new RTCPeerConnection(peerRTCConfig);\n\n                _rtcConn.onicecandidate=(e)=>{\n                    console.log(\"host conn on ice\",e);\n                    if(e.candidate){\n                        sendSocketJson({type:\"candidate\",candidate:e.candidate});\n                    }\n                }\n                _rtcConn.onnegotiationneeded=(e)=>{\n                    console.log(\"Host Connection on negotiation needed\",e);\n                }\n                if(streamSource=='desktop'){\n                    navigator.mediaDevices.getDisplayMedia().then(stream=>{\n                        document.querySelector('broadcast_preview');\n                        this.setState({screenCaptureStream: stream});\n                    });  \n                   \n                }\n\n               \n              try{\n                _localStream.getTracks().forEach(track=>{_rtcConn.addTrack(track, _localStream)});\n                const offer= await _rtcConn.createOffer()\n                await _rtcConn.setLocalDescription(offer);\n                sendSocketJson({type:\"register_stream\",channel:_channelName, offer: offer});\n                onMessageHandlers[\"register_offer_\"+_channelName]=function(response){\n                    if(response.ok){\n                        delete onMessageHandlers[\"register_offer_\"+_channelName];\n                        resolve();\n                    }else{\n                        reject(new Error(response.error));\n                    }\n                }\n                setTimeout(()=>{\n                    delete onMessageHandlers[\"register_offer_\"+_channelName];\n                    reject(new Error(\"Broadcast request timed out\"));\n                },30000);\n              }catch(e){\n                  reject(e);\n              }\n            })\n        }\n    }\n}\n\nexport default SignalClient;","import React from 'react';\nimport Video from '../Video'\nimport Draggable from 'react-draggable'; // The default\n\nclass MediaObject extends React.Component{\n\n    renderVideo=(stream,width,height)=>{\n        \n        return (<Video width={\"100%\"} height={\"100%\"} media={stream}></Video>)\n    }\n \n    renderAudio=()=>{\n        return (<div>todo</div>)\n    }\n    render(){\n        const streamType = this.props.mediaObject[0];\n        const stream =  this.props.mediaObject[1];\n        const dimensions = this.props.mediaObject[2];\n        const divStyle={\n            position:\"absolute\",\n            left:   dimensions[0],\n            top:    dimensions[1],\n            width:  dimensions[2]+\"%\",\n            height: dimensions[3]+\"%\"\n        }\n        return(\n            <Draggable>          \n                 <div style={divStyle}>\n                    {streamType==\"screenshare\" ? this.renderVideo(stream) : null}\n                    {streamType==\"webcam\"      ? this.renderVideo(stream) : null}\n                    {streamType==\"audio\"       ? this.renderAudio(stream) : null}\n                </div>\n            </Draggable>\n\n        )\n    }\n}\n\nexport default MediaObject;","const peerRTCConfig = {\n    'RTCIceServers': [{\n        'url': 'stun:stun.l.google.com:19302'\n    }]\n}\n\n\nconst signalServerURL = window.location.hostname == 'localhost' ? \"ws://localhost:9091\" : \"wss://grepawk.com/signal\";\n\nfunction BroadcasterClient(config) {\n    config = config || {};\n    config.console = config.console || \"console\";\n    const hostname = config.hostname || signalServerURL;\n    let onEvent = config.onEvent || console.log;\n    let signalConnection;\n    let peerConnections = {};\n    let tracks=[];\n    var host_uuid;\n    function sendJson(json, to_uuid) {\n        if (to_uuid) json[to_uuid] = to_uuid;\n        signalConnection.send(JSON.stringify(json));\n    }\n\n    function startBroadcast(channelName) {\n        signalConnection = new WebSocket(hostname);\n        signalConnection.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            onEvent(event.data.type ||\"\");\n            switch (data.type) {\n                case 'registered':\n                    host_uuid = data.host_uuid;\n                break;\n                case 'user_joined':\n                    user_join_request(data);\n                    break;\n                case 'answer':\n                    user_sent_sdp_answser(data);\n                    break;\n                case 'candidate':\n                    user_sent_peer_ice_candidate(data);\n                    break;\n                case 'user_left':\n                    break;\n                default:\n                    break;\n            }\n        }\n        signalConnection.onopen = (e) => {\n            sendJson({\n                type: \"register_stream\",\n                channel: channelName\n            });\n            onEvent(\"Stream registered\");\n        }\n        signalConnection.onerror = (e) => onEvent(\"ERROR: signalconnection not connecting\", e);\n    }\n\n    function user_sent_peer_ice_candidate(data) {\n        if (!data.client_uuid || !data.candidate) throw new Error(\"unexpected request in user_sent_peer_ice_candidate\");\n        peerConnections[data.client_uuid].addIceCandidate(data.candidate);\n        onEvent(\"add peer ice candidate from \" + data.client_uuid);\n    }\n\n    function user_sent_sdp_answser(data) {\n        if (!data.client_uuid || !data.answer) throw new Error(\"unexpected request in user_sent_peer_ice_candidate\");\n        peerConnections[data.client_uuid].set_sdp_anwser(data.answer);\n    }\n\n    function user_join_request(data) {\n        if (!data.client_uuid) throw new Error(\"unexpected user_join request\");\n        peerConnections[data.client_uuid] = BroadcasterRTCConnection(signalConnection, data.client_uuid,host_uuid,onEvent);\n        peerConnections[data.client_uuid].updateTracks(tracks);\n    }\n    function updateTrackForPeers(){\n        Object.values(peerConnections).forEach(client=>{\n            client.updateTracks(tracks);\n        })\n    }\n\n    function addStream(stream,dimensions){\n        stream.getTracks().forEach(async track=>{\n            let existing=false;\n            tracks.forEach((_track,idx)=>{\n                if(_track.id===track.id) {\n                    onEvent(\"existing track \"+_track.id);\n                    existing=true;\n                }\n            })\n            if(existing===false) tracks.push(track);\n        })       \n        updateTrackForPeers();\n    }\n\n    function removeStream(stream){\n        stream.getTracks().forEach((track)=>{\n            track.stop();\n            tracks.forEach((_track,idx)=>{\n                if(_track.id===track.id) tracks.splice(idx,1);\n            })\n        })\n        updateTrackForPeers();\n        return null;\n    }\n\n    function requestStream(type){\n        return new Promise(async (resolve,reject)=>{\n            try {\n                let stream;\n                if(type==\"screenshare\"){\n                    stream =  await navigator.mediaDevices.getDisplayMedia();\n                }else if(type==\"webcam\"){\n                    stream = await navigator.mediaDevices.getUserMedia({video:true, audio:false});\n                }else if(type==\"audio\"){\n                    stream = await navigator.mediaDevices.getUserMedia({video:false, audio:true});\n                }else{\n                    reject(new Error(\"Unkown type\"))\n                }\n                if(stream) resolve(stream);\n                else resolve(null);\n            } catch (e) {\n               reject(e);\n            }\n        })\n    }\n\n    return {\n        requestStream: requestStream,\n        addStream: addStream,\n        removeStream:removeStream,\n        peerConnections: peerConnections,\n        startBroadcast: startBroadcast\n    }\n}\n\nfunction BroadcasterRTCConnection(signalConnection, client_uuid,host_uuid,onEvent) {\n    var signalConnection = signalConnection;\n    var client_uuid = client_uuid;\n    var host_uuid;\n    var peerConnection = new RTCPeerConnection(peerRTCConfig);\n    peerConnection.onicecandidate = (e) => {\n        if (e.candidate) {\n            signalConnection.send(JSON.stringify({\n                type: \"candidate\",\n                candidate: e.candidate,\n                to_uuid: client_uuid,\n                host_uuid: host_uuid\n            }));\n        }\n    }\n    peerConnection.onnegotiationneeded = async (evt) => {\n        onEvent(\"creating sdp offer for \" + client_uuid);\n        const offer = await peerConnection.createOffer();\n        await peerConnection.setLocalDescription(offer);\n        signalConnection.send(JSON.stringify({\n            type: \"offer\",\n            to_uuid: client_uuid,\n            offer: offer,\n            host_uuid:host_uuid\n       }))\n    }\n    var trackMap={};\n    return {\n        updateTracks: function(tracks){\n            debugger;\n            tracks.forEach(track=>{\n                if(!!trackMap[track.id]){\n                    onEvent(\"skip existing track\");\n                    return;\n                }\n                trackMap[track.id]=1;\n                onEvent(\"adding new track \",track);\n                peerConnection.addTrack(track);\n            })\n        },\n        set_sdp_anwser: async function(answer) {\n            try {\n                await peerConnection.setRemoteDescription(answer);\n                onEvent(\"Remote Anwser set\"); \n            } catch (e) {\n                onEvent(\"ERROR: in set_dsp_anwser\");\n            }\n        },\n        addIceCandidate:function(candidate){\n            onEvent(\"add ice candidate \");\n            peerConnection.addIceCandidate(candidate);\n        }\n    }\n}\n\nconst start = new Date().getTime();\n\n// \nexport default BroadcasterClient;","import React from \"react\";\nimport Window from \"../components/Window\";\nimport SignalClient from \"../Model/SignalClient.js\";\nimport Video from \"../Video\";\nimport MediaObject from \"./MediaObject\";\nimport './broadcast.css';\nimport BroadcastClient from \"./BroadcastClient\";\n\n\nconst streamHost = \"https://grepawk.com/watch/\";\nconst defaultDimensions ={\n    screenshare: [0,0,100,100],\n    webcam: [0, 80, 20,20],\n    audio: [90,0,10,10],\n    textBanner:[5,5,80, 10]\n}\n\nclass Broadcast extends React.Component {\n  state = {\n    screenshare: false,\n    webcam: false,\n    audio: false,\n    streamElements:{},\n    broadcasting: false,\n    broadcastEvents:[],\n  };\n\n  constructor(props){\n      super(props);\n      this.broadcastClient = BroadcastClient({\n          onEvent: this.onBroadcastEvent,\n          console: \"console\"\n      })\n  }\n  onBroadcastEvent = (event)=>{\n      let events = this.state.broadcastEvents;\n      events.push(event);\n      this.setState({broadcastEvents:events});\n  }\n\n  updateStreamElements=(type, mediaObject, dimensions)=>{\n    let cstate = this.state.streamElements;\n    cstate[type]=[type, mediaObject, dimensions];\n    if(mediaObject!==null && this.state.broadcasting===true){\n        this.broadcastClient.addStream(mediaObject, dimensions);\n        this.onBroadcastEvent(\"Adding stream \"+type);\n    }\n    this.setState({streamElements:cstate});\n  }\n  componentDidMount() {\n\n  }\n  renderObjectives = () =>{\n\n  }\n  renderPreview = () =>{\n      const parts = Object.keys(this.state.streamElements);\n      return (\n            <div>\n            {parts.map(part=>{return (\n                <MediaObject mediaObject={this.state.streamElements[part]}></MediaObject>)})}   \n            </div>         \n      )\n  }\n\n  controlClicked=async (control)=>{\n      let turnOn = !this.state[control];\n\n      let existingStream = (this.state.streamElements[control] && this.state.streamElements[control][1]) || null; \n      let stream;\n      switch(control){\n          case \"screenshare\":\n                stream = turnOn ? await this.broadcastClient.requestStream(control) \n                                    : await this.broadcastClient.removeStream(existingStream);\n                this.updateStreamElements(control, stream, defaultDimensions[control]);\n                this.setState({screenshare: turnOn});\n                break;\n          case \"webcam\":\n                stream = turnOn ? await this.broadcastClient.requestStream(control) \n                                    : await this.broadcastClient.removeStream(existingStream);\n                                    \n                this.updateStreamElements(control, stream, defaultDimensions[control]);\n                this.setState({webcam:turnOn});\n                break;\n           case \"audio\":\n                stream = turnOn ? await this.broadcastClient.requestStream(control) \n                                    : await this.broadcastClient.removeStream(existingStream);\n\n                this.updateStreamElements(control, stream, defaultDimensions[control]);\n                this.setState({audio:turnOn});\n                break;\n            default: break;\n      }\n  }\n  renderConsole = () =>{\n      return (\n          <div>\n              {this.state.broadcastEvents.map(event=>{\n                  let msg;\n                  if(typeof event===\"object\"){\n                      msg=JSON.stringify(event);\n                  }else{\n                     msg = event;\n                  }\n                  return (<p>{msg}</p>)\n              })}\n          </div>\n      )\n\n  }\n\n  startBroadcasting = async ()=>{\n    this.broadcastClient.startBroadcast(\"yisheng\");\n    Object.values(this.state.streamElements).forEach((streamElements)=>{\n        if(streamElements[1]!==null){\n            this.broadcastClient.addStream(streamElements[1],streamElements[2]);\n        }\n    })\n    this.setState({broadcasting:true});\n  }\n  stopBroadcasting = ()=>{\n    this.setState({broadcasting:false});\n  }\n\n  renderControls = () => {\n    return (\n        <ul className=\"list-group controls\">\n            {\n                [\"screenshare\",\"webcam\",\"audio\"].map(control=>{\n                    var isOn = this.state[control];\n                    var text = isOn ? control+\" off\" : control;\n                    var btnClass = isOn ? \"btn btn-secondary\" : \"btn btn-primary\";\n                    return(\n                        <li className=\"list-group-item\">\n                            <button className={btnClass} onClick={()=>{this.controlClicked(control)}}>{text}</button>\n                        </li>\n                    )\n                })\n            }\n                            \n            {this.state.broadcasting === false\n              ? <button className='btn' onClick={this.startBroadcasting}>Start Broadcast  </button>\n              : <button className='btn' onClick={this.stopBroadcasting} >Stop Broadcast</button>}\n        </ul>\n    );\n  };\n\n  render() {\n    return (\n      <Window\n        className=\"stream\"\n        title={this.props.title}\n        pid={this.props.pid}\n        ipc={this.props.ipc}\n        draggable={false}\n      >\n        {this.state.flashMessage ? <div>{this.state.flashMessage}</div> : null}\n        <div className=\"obs\">\n            {this.renderControls()}\n            <div className='preview' ref={this.previewDiv}>\n                {this.renderPreview()}\n            </div>\n          <div className=\"objectives\">{this.renderObjectives()}</div>\n          <div className=\"console\">{this.renderConsole()}</div>\n        </div>\n      </Window>\n    );\n  }\n}\nexport default Broadcast;\n","import React from 'react'\nimport SignalClient from './Model/SignalClient'\nimport Window from './components/Window'\nimport Video from \"./Video\"\n\n\nclass Watch extends React.Component{\n\n    state = {\n        streamLoaded:false,\n        flashMessage:null,\n        remoteStream:null,\n        streamURI: (this.props.args.length>0 && this.props.args[0]) || this.props.userInfo.username\n    }    \n    componentDidMount(){\n        const client = SignalClient();\n        client.watchStream(this.state.streamURI,this.props.userInfo).then((remoteStream)=>{\n            debugger;\n            this.setState({\n                streamLoaded:true,\n                remoteStream:remoteStream\n            })\n        }).catch(e=>{\n            this.setState({flashMessage:e.message});\n        })\n    }\n    render(){\n        return(\n            <Window className='watch' title={this.props.title} pid={this.props.pid} ipc={this.props.ipc}>\n                {this.state.flashMessage ? (<div>{this.state.flashMessage}</div>) : null}\n                {this.state.remoteStream ? (<Video media={this.state.remoteStream} /> ) : \"Loading..\"}\n            </Window>\n        )\n       \n\n    }\n}\nexport default Watch","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport \"./AppIconGrid.css\"\n\nconst icons_per_column = 5;\n\n\nclass AppIconGrid extends React.Component{\n    constructor(props){\n        super(props);\n        this.iconClicked = this.iconClicked.bind(this);\n    }\n\n    iconClicked(idx){\n        var icon = this.props.icons[idx];\n        this.props.ipc(icon.cmd, icon.args);\n    }\n    render(){\n        return(\n            <div className='app-icon-grid'>\n                {this.props.icons.map((icon,index)=>{\n                    const row = (index+1) % icons_per_column;\n                    const col = Math.floor((index+1) / icons_per_column);\n                    const iconStyle ={\n                        gridColumnStart:col,\n                        gridColumnEnd: col+1,\n                        gridRowStart:row,\n                        gridRowEnd:row+1,\n                        width:50,\n                        height:50,\n                        borderColor:\"black\",\n                        borderWidth:2\n                       // backgroundColor:\"#D3D3D3\"\n                    }\n             \n                    return (\n                        <div key={\"icon\"+index} \n                            style={iconStyle} \n                            onClick={()=>{\n                                this.iconClicked(index);\n                            }}\n                        >\n                            <i className={\"fas fa-lg fa-\"+icon.name}></i><br></br>{icon.title}\n                        </div>\n                        )\n                })}\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default AppIconGrid;","import React from 'react'\nimport './App.css'\nimport Terminal from './Terminal'\nimport HUD from \"./HUD\";\nimport ListView from \"./components/ListView\"\nimport Camera from \"./Camera\"\nimport Broadcast from \"./Broadcast/index.js\"\nimport Watch from \"./Watch\"\n\nimport AppIconGrid from './AppIconGrid';\n\nclass Desktop extends React.Component{\n    state={\n        processes:[{name:\"tty\", state:\"on\"}],\n        userInfo:{name:\"guest\",xp:0,gold:0},\n        quests:[],\n        icons:[\n            {name:\"terminal\",title:\"terminal\",cmd:\"tty\", args:[]},\n            {name:\"broadcast-tower\",title:\"Broadcast\", cmd:\"stream\", args:[]}\n          ]\n    }\n    constructor(props){\n        super(props);\n        this.ipc = this.ipc.bind(this);\n    }\n\n    componentDidMount(){\n        if(window.location.hash){\n            var t = window.location.hash.replace(\"#\",\"\").split(\"/\");\n            const cmd = t[0];\n            const args = t.splice(1);\n            this.ipc(cmd, args);\n        }\n    }\n\n    push_proc=(proc)=>{\n\n    }\n    ipc(cmd, args){\n        switch(cmd){\n            case \"close\":\n                const pid = args[0];\n                const list = this.state.processes;\n                list[pid]=\"closed\";\n                this.setState({processes:list});\n            break;\n            case \"cam\":\n            case \"camera\":\n               var plist = this.state.processes.concat({\"name\":\"camera\"});\n               this.setState({processes:plist});\n                break;\n            case \"broadcast\":\n            case \"stream\":\n                var plist = this.state.processes.concat({\"name\":\"stream\",\"args\":args});\n                this.setState({processes:plist});\n                break; \n            case \"watch\":\n                var plist = this.state.processes.concat({\"name\":\"watch\",\"args\":args});\n                this.setState({processes:plist});\n                break;\n            case \"tty\":\n                var plist = this.state.processes.concat({\"name\":\"tty\",\"args\":args});\n                this.setState({processes:plist});\n                break;\n            case \"hud-update\":\n                this.setState({userInfo:args});\n            break;\n            case \"questlist\":\n                this.setState({quests:args});\n            break;\n        }\n    }\n\n    renderBody(){\n       \n        return(\n            this.state.processes.map((proc,pid)=>{\n                console.log(proc,pid);\n                if(proc.state==='off') return null;\n                if(proc.name === 'tty'){\n                    return (\n                        <Terminal key='tty1' pid={pid} title='tty' ipc={this.ipc}/>\n                    );\n                }else if(proc.name==='camera'){\n                    return (\n                        <Camera userInfo={this.state.userInfo} pid={pid} title='Face 2 Face' ipc={this.ipc} />\n                    );\n                }else if(proc.name===\"stream\"){\n                    return (\n                        <Broadcast args={proc.args} pid={pid} title=\"Broadcast\" ipc={this.ipc} />\n                    )\n                }\n                else if(proc.name===\"watch\"){\n                    return (\n                        <Watch userInfo={this.state.userInfo} args={proc.args} pid={pid} title=\"Watch\" ipc={this.ipc} />\n                    )\n                }\n            })\n        )\n    }\n    renderHud(){\n        return this.state.userInfo ? \n            (<HUD username={this.state.userInfo.username}\n                cwd={this.state.userInfo.cwd}\n                fname={this.state.userInfo.fname}\n                xp={this.state.userInfo.xp} \n                gold={this.state.userInfo.gold} />)\n            : null;\n    }\n    renderQuestView(){\n        return(\n            <ListView className=\"quest-list\" title=\"quests\" list={this.state.quests} />\n        )\n    }\n    renderBackground(){\n        return(\n            <AppIconGrid icons={this.state.icons} ipc={this.ipc}></AppIconGrid>\n        )\n    }\n    render(){\n        return (\n            <div className='desktop'>\n                <nav className='navbar navbar-light bg-light'>\n                    <a className=\"navbar-brand\" href=\"#\">GrepAwk</a>\n                    {this.renderHud()}\n                </nav>\n                {this.renderBackground()}\n                {this.renderBody()}\n                {this.renderQuestView()}\n                \n            </div>\n        )\n    }\n}\nexport default Desktop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import * as serviceWorker from './serviceWorker';\nimport Desktop from './Desktop'\n\nReactDOM.render(<Desktop />, document.getElementById('root'));\n//serviceWorker.unregister();\n"],"sourceRoot":""}